

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Aug 18 22:50:31 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285                           
   286                           	psect	nvCOMMON
   287  007A                     __pnvCOMMON:
   288  007A                     _counter_comp:
   289  007A                     	ds	1
   290  0013                     _SSPBUF	set	19
   291  0014                     _SSPCON	set	20
   292  0019                     _TXREG	set	25
   293  0018                     _RCSTAbits	set	24
   294  001E                     _ADRESH	set	30
   295  0009                     _PORTE	set	9
   296  0007                     _PORTC	set	7
   297  0006                     _PORTB	set	6
   298  001A                     _RCREG	set	26
   299  0008                     _PORTD	set	8
   300  0005                     _PORTA	set	5
   301  0063                     _SSPIF	set	99
   302  005E                     _PEIE	set	94
   303  0049                     _RE1	set	73
   304  0048                     _RE0	set	72
   305  0031                     _RB1	set	49
   306  0030                     _RB0	set	48
   307  0058                     _RBIF	set	88
   308  005B                     _RBIE	set	91
   309  005F                     _GIE	set	95
   310  0065                     _RCIF	set	101
   311  0091                     _SSPCON2bits	set	145
   312  0093                     _SSPADD	set	147
   313  0091                     _SSPCON2	set	145
   314  0094                     _SSPSTATbits	set	148
   315  0094                     _SSPSTAT	set	148
   316  0099                     _SPBRG	set	153
   317  009A                     _SPBRGH	set	154
   318  0098                     _TXSTAbits	set	152
   319  0087                     _TRISCbits	set	135
   320  009E                     _ADRESL	set	158
   321  0096                     _IOCB	set	150
   322  0095                     _WPUB	set	149
   323  0081                     _OPTION_REGbits	set	129
   324  0089                     _TRISE	set	137
   325  0088                     _TRISD	set	136
   326  0087                     _TRISC	set	135
   327  0086                     _TRISB	set	134
   328  0085                     _TRISA	set	133
   329  0463                     _SSPIE	set	1123
   330  043C                     _TRISC4	set	1084
   331  043B                     _TRISC3	set	1083
   332  043D                     _TRISC5	set	1085
   333  0189                     _ANSELH	set	393
   334  0188                     _ANSEL	set	392
   335  0C3B                     _BRG16	set	3131
   336                           
   337                           	psect	cinit
   338  000F                     start_initialization:	
   339                           ; #config settings
   340                           
   341  000F                     __initialization:
   342                           
   343                           ; Clear objects allocated to COMMON
   344  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   345  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   346  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   347  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   348  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   349  0014                     end_of_initialization:	
   350                           ;End of C runtime variable initialization code
   351                           
   352  0014                     __end_of__initialization:
   353  0014  0183               	clrf	3
   354  0015  120A  118A  283F   	ljmp	_main	;jump to C main() function
   355                           
   356                           	psect	bssCOMMON
   357  0070                     __pbssCOMMON:
   358  0070                     _uc:
   359  0070                     	ds	1
   360  0071                     _dc:
   361  0071                     	ds	1
   362  0072                     _cc:
   363  0072                     	ds	1
   364  0073                     _mc:
   365  0073                     	ds	1
   366  0074                     _counter:
   367  0074                     	ds	1
   368                           
   369                           	psect	cstackCOMMON
   370  0075                     __pcstackCOMMON:
   371  0075                     ?_setup:
   372  0075                     ?_UART_Write_Char:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0075                     ?_UART_Init:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0075                     ?_main:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0075                     ?_isr:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0075                     ??_isr:	
   385                           ; 1 bytes @ 0x0
   386                           
   387                           
   388                           ; 1 bytes @ 0x0
   389  0075                     	ds	3
   390  0078                     ??_setup:
   391  0078                     ??_UART_Write_Char:	
   392                           ; 1 bytes @ 0x3
   393                           
   394  0078                     ??_UART_Init:	
   395                           ; 1 bytes @ 0x3
   396                           
   397  0078                     UART_Write_Char@character:	
   398                           ; 1 bytes @ 0x3
   399                           
   400                           
   401                           ; 1 bytes @ 0x3
   402  0078                     	ds	1
   403  0079                     ??_main:
   404                           
   405                           ; 1 bytes @ 0x4
   406  0079                     	ds	1
   407                           
   408                           	psect	maintext
   409  003F                     __pmaintext:	
   410 ;;
   411 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   412 ;;
   413 ;; *************** function _main *****************
   414 ;; Defined at:
   415 ;;		line 58 in file "main.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;		None
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, status,2, status,0, pclath, cstack
   424 ;; Tracked objects:
   425 ;;		On entry : B00/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   429 ;;      Params:         0       0       0       0       0
   430 ;;      Locals:         0       0       0       0       0
   431 ;;      Temps:          1       0       0       0       0
   432 ;;      Totals:         1       0       0       0       0
   433 ;;Total ram usage:        1 bytes
   434 ;; Hardware stack levels required when called: 3
   435 ;; This function calls:
   436 ;;		_UART_Write_Char
   437 ;;		_setup
   438 ;; This function is called by:
   439 ;;		Startup code after reset
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443                           
   444                           ;psect for function _main
   445  003F                     _main:
   446  003F                     l891:	
   447                           ;incstack = 0
   448                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   449                           
   450                           
   451                           ;main.c: 59:     setup();
   452  003F  120A  118A  2018  120A  118A  	fcall	_setup
   453  0044                     l893:
   454                           
   455                           ;main.c: 61:         PORTA = counter;
   456  0044  0874               	movf	_counter,w
   457  0045  1283               	bcf	3,5	;RP0=0, select bank0
   458  0046  1303               	bcf	3,6	;RP1=0, select bank0
   459  0047  0085               	movwf	5	;volatile
   460  0048                     l895:
   461                           
   462                           ;main.c: 64:         if(counter_comp != counter){
   463  0048  087A               	movf	_counter_comp,w
   464  0049  0674               	xorwf	_counter,w
   465  004A  1903               	skipnz
   466  004B  284D               	goto	u51
   467  004C  284E               	goto	u50
   468  004D                     u51:
   469  004D  2858               	goto	l901
   470  004E                     u50:
   471  004E                     l897:
   472                           
   473                           ;main.c: 65:             UART_Write_Char(counter);
   474  004E  0874               	movf	_counter,w
   475  004F  120A  118A  209F  120A  118A  	fcall	_UART_Write_Char
   476  0054                     l899:
   477                           
   478                           ;main.c: 67:             counter_comp = counter;
   479  0054  0874               	movf	_counter,w
   480  0055  00F9               	movwf	??_main
   481  0056  0879               	movf	??_main,w
   482  0057  00FA               	movwf	_counter_comp
   483  0058                     l901:
   484                           
   485                           ;main.c: 78:         if(RCIF){
   486  0058  1283               	bcf	3,5	;RP0=0, select bank0
   487  0059  1303               	bcf	3,6	;RP1=0, select bank0
   488  005A  1E8C               	btfss	12,5	;volatile
   489  005B  285D               	goto	u61
   490  005C  285E               	goto	u60
   491  005D                     u61:
   492  005D  2844               	goto	l893
   493  005E                     u60:
   494  005E                     l903:
   495                           
   496                           ;main.c: 79:             PORTD = RCREG;
   497  005E  081A               	movf	26,w	;volatile
   498  005F  0088               	movwf	8	;volatile
   499  0060  2844               	goto	l893
   500  0061  120A  118A  280C   	ljmp	start
   501  0064                     __end_of_main:
   502                           
   503                           	psect	text1
   504  0018                     __ptext1:	
   505 ;; *************** function _setup *****************
   506 ;; Defined at:
   507 ;;		line 87 in file "main.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;		None
   510 ;; Auto vars:     Size  Location     Type
   511 ;;		None
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1    wreg      void 
   514 ;; Registers used:
   515 ;;		wreg, status,2, status,0, pclath, cstack
   516 ;; Tracked objects:
   517 ;;		On entry : 0/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   521 ;;      Params:         0       0       0       0       0
   522 ;;      Locals:         0       0       0       0       0
   523 ;;      Temps:          1       0       0       0       0
   524 ;;      Totals:         1       0       0       0       0
   525 ;;Total ram usage:        1 bytes
   526 ;; Hardware stack levels used: 1
   527 ;; Hardware stack levels required when called: 2
   528 ;; This function calls:
   529 ;;		_UART_Init
   530 ;; This function is called by:
   531 ;;		_main
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535                           
   536                           ;psect for function _setup
   537  0018                     _setup:
   538  0018                     l833:	
   539                           ;incstack = 0
   540                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   541                           
   542                           
   543                           ;main.c: 89:     ANSEL = 0;
   544  0018  1683               	bsf	3,5	;RP0=1, select bank3
   545  0019  1703               	bsf	3,6	;RP1=1, select bank3
   546  001A  0188               	clrf	8	;volatile
   547                           
   548                           ;main.c: 90:     ANSELH = 0;
   549  001B  0189               	clrf	9	;volatile
   550                           
   551                           ;main.c: 91:     TRISA = 0;
   552  001C  1683               	bsf	3,5	;RP0=1, select bank1
   553  001D  1303               	bcf	3,6	;RP1=0, select bank1
   554  001E  0185               	clrf	5	;volatile
   555  001F                     l835:
   556                           
   557                           ;main.c: 92:     TRISB = 0b00000011;
   558  001F  3003               	movlw	3
   559  0020  0086               	movwf	6	;volatile
   560  0021                     l837:
   561                           
   562                           ;main.c: 93:     TRISC = 128;
   563  0021  3080               	movlw	128
   564  0022  0087               	movwf	7	;volatile
   565                           
   566                           ;main.c: 94:     TRISD = 0;
   567  0023  0188               	clrf	8	;volatile
   568                           
   569                           ;main.c: 95:     TRISE = 0;
   570  0024  0189               	clrf	9	;volatile
   571  0025                     l839:
   572                           
   573                           ;main.c: 98:     OPTION_REGbits.nRBPU = 0;
   574  0025  1381               	bcf	1,7	;volatile
   575  0026                     l841:
   576                           
   577                           ;main.c: 99:     WPUB = 0b00000011;
   578  0026  3003               	movlw	3
   579  0027  0095               	movwf	21	;volatile
   580  0028                     l843:
   581                           
   582                           ;main.c: 100:     IOCB = 0b00000011;
   583  0028  3003               	movlw	3
   584  0029  0096               	movwf	22	;volatile
   585  002A                     l845:
   586                           
   587                           ;main.c: 103:     GIE = 1;
   588  002A  178B               	bsf	11,7	;volatile
   589  002B                     l847:
   590                           
   591                           ;main.c: 104:     RBIE = 1;
   592  002B  158B               	bsf	11,3	;volatile
   593  002C                     l849:
   594                           
   595                           ;main.c: 105:     RBIF = 0;
   596  002C  100B               	bcf	11,0	;volatile
   597  002D                     l851:
   598                           
   599                           ;main.c: 107:     UART_Init();
   600  002D  120A  118A  2088  120A  118A  	fcall	_UART_Init
   601  0032                     l853:
   602                           
   603                           ;main.c: 110:     PORTA = 0;
   604  0032  1283               	bcf	3,5	;RP0=0, select bank0
   605  0033  1303               	bcf	3,6	;RP1=0, select bank0
   606  0034  0185               	clrf	5	;volatile
   607  0035                     l855:
   608                           
   609                           ;main.c: 111:     PORTB = 0;
   610  0035  0186               	clrf	6	;volatile
   611  0036                     l857:
   612                           
   613                           ;main.c: 112:     PORTC = 0;
   614  0036  0187               	clrf	7	;volatile
   615  0037                     l859:
   616                           
   617                           ;main.c: 113:     PORTD = 0;
   618  0037  0188               	clrf	8	;volatile
   619  0038                     l861:
   620                           
   621                           ;main.c: 114:     PORTE = 0;
   622  0038  0189               	clrf	9	;volatile
   623  0039                     l863:
   624                           
   625                           ;main.c: 117:     counter = 0;
   626  0039  01F4               	clrf	_counter
   627  003A                     l865:
   628                           
   629                           ;main.c: 118:     counter_comp = 255;
   630  003A  30FF               	movlw	255
   631  003B  00F8               	movwf	??_setup
   632  003C  0878               	movf	??_setup,w
   633  003D  00FA               	movwf	_counter_comp
   634  003E                     l75:
   635  003E  0008               	return
   636  003F                     __end_of_setup:
   637                           
   638                           	psect	text2
   639  0088                     __ptext2:	
   640 ;; *************** function _UART_Init *****************
   641 ;; Defined at:
   642 ;;		line 80 in file "Digital2_toolbox.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;		None
   645 ;; Auto vars:     Size  Location     Type
   646 ;;		None
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg, status,2
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   656 ;;      Params:         0       0       0       0       0
   657 ;;      Locals:         0       0       0       0       0
   658 ;;      Temps:          0       0       0       0       0
   659 ;;      Totals:         0       0       0       0       0
   660 ;;Total ram usage:        0 bytes
   661 ;; Hardware stack levels used: 1
   662 ;; Hardware stack levels required when called: 1
   663 ;; This function calls:
   664 ;;		Nothing
   665 ;; This function is called by:
   666 ;;		_setup
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           
   671                           ;psect for function _UART_Init
   672  0088                     _UART_Init:
   673  0088                     l825:	
   674                           ;incstack = 0
   675                           ; Regs used in _UART_Init: [wreg+status,2]
   676                           
   677                           
   678                           ;Digital2_toolbox.c: 81:     TRISCbits.TRISC7 = 1;
   679  0088  1683               	bsf	3,5	;RP0=1, select bank1
   680  0089  1303               	bcf	3,6	;RP1=0, select bank1
   681  008A  1787               	bsf	7,7	;volatile
   682                           
   683                           ;Digital2_toolbox.c: 83:     TXSTAbits.TXEN = 1;
   684  008B  1698               	bsf	24,5	;volatile
   685                           
   686                           ;Digital2_toolbox.c: 84:     TXSTAbits.SYNC = 0;
   687  008C  1218               	bcf	24,4	;volatile
   688                           
   689                           ;Digital2_toolbox.c: 85:     RCSTAbits.SPEN = 1;
   690  008D  1283               	bcf	3,5	;RP0=0, select bank0
   691  008E  1303               	bcf	3,6	;RP1=0, select bank0
   692  008F  1798               	bsf	24,7	;volatile
   693                           
   694                           ;Digital2_toolbox.c: 86:     TXSTAbits.BRGH = 1;
   695  0090  1683               	bsf	3,5	;RP0=1, select bank1
   696  0091  1303               	bcf	3,6	;RP1=0, select bank1
   697  0092  1518               	bsf	24,2	;volatile
   698                           
   699                           ;Digital2_toolbox.c: 87:     BRG16 = 0;
   700  0093  1683               	bsf	3,5	;RP0=1, select bank3
   701  0094  1703               	bsf	3,6	;RP1=1, select bank3
   702  0095  1187               	bcf	7,3	;volatile
   703  0096                     l827:
   704                           
   705                           ;Digital2_toolbox.c: 88:     SPBRGH = 0;
   706  0096  1683               	bsf	3,5	;RP0=1, select bank1
   707  0097  1303               	bcf	3,6	;RP1=0, select bank1
   708  0098  019A               	clrf	26	;volatile
   709  0099                     l829:
   710                           
   711                           ;Digital2_toolbox.c: 89:     SPBRG = 25;
   712  0099  3019               	movlw	25
   713  009A  0099               	movwf	25	;volatile
   714  009B                     l831:
   715                           
   716                           ;Digital2_toolbox.c: 93:     RCSTAbits.CREN = 1;
   717  009B  1283               	bcf	3,5	;RP0=0, select bank0
   718  009C  1303               	bcf	3,6	;RP1=0, select bank0
   719  009D  1618               	bsf	24,4	;volatile
   720  009E                     l164:
   721  009E  0008               	return
   722  009F                     __end_of_UART_Init:
   723                           
   724                           	psect	text3
   725  009F                     __ptext3:	
   726 ;; *************** function _UART_Write_Char *****************
   727 ;; Defined at:
   728 ;;		line 104 in file "Digital2_toolbox.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;  character       1    wreg     unsigned char 
   731 ;; Auto vars:     Size  Location     Type
   732 ;;  character       1    3[COMMON] unsigned char 
   733 ;; Return value:  Size  Location     Type
   734 ;;                  1    wreg      void 
   735 ;; Registers used:
   736 ;;		wreg
   737 ;; Tracked objects:
   738 ;;		On entry : 0/0
   739 ;;		On exit  : 0/0
   740 ;;		Unchanged: 0/0
   741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   742 ;;      Params:         0       0       0       0       0
   743 ;;      Locals:         1       0       0       0       0
   744 ;;      Temps:          0       0       0       0       0
   745 ;;      Totals:         1       0       0       0       0
   746 ;;Total ram usage:        1 bytes
   747 ;; Hardware stack levels used: 1
   748 ;; Hardware stack levels required when called: 1
   749 ;; This function calls:
   750 ;;		Nothing
   751 ;; This function is called by:
   752 ;;		_main
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           
   757                           ;psect for function _UART_Write_Char
   758  009F                     _UART_Write_Char:
   759                           
   760                           ;incstack = 0
   761                           ; Regs used in _UART_Write_Char: [wreg]
   762                           ;UART_Write_Char@character stored from wreg
   763  009F  00F8               	movwf	UART_Write_Char@character
   764  00A0                     l867:
   765                           
   766                           ;Digital2_toolbox.c: 105:     TXREG = character;
   767  00A0  0878               	movf	UART_Write_Char@character,w
   768  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   769  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   770  00A3  0099               	movwf	25	;volatile
   771  00A4                     l176:	
   772                           ;Digital2_toolbox.c: 106:     while (!TXSTAbits.TRMT);
   773                           
   774  00A4  1683               	bsf	3,5	;RP0=1, select bank1
   775  00A5  1303               	bcf	3,6	;RP1=0, select bank1
   776  00A6  1C98               	btfss	24,1	;volatile
   777  00A7  28A9               	goto	u11
   778  00A8  28AA               	goto	u10
   779  00A9                     u11:
   780  00A9  28A4               	goto	l176
   781  00AA                     u10:
   782  00AA                     l179:
   783  00AA  0008               	return
   784  00AB                     __end_of_UART_Write_Char:
   785                           
   786                           	psect	text4
   787  0064                     __ptext4:	
   788 ;; *************** function _isr *****************
   789 ;; Defined at:
   790 ;;		line 126 in file "main.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;		None
   793 ;; Auto vars:     Size  Location     Type
   794 ;;		None
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      void 
   797 ;; Registers used:
   798 ;;		wreg, status,2, status,0
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   804 ;;      Params:         0       0       0       0       0
   805 ;;      Locals:         0       0       0       0       0
   806 ;;      Temps:          3       0       0       0       0
   807 ;;      Totals:         3       0       0       0       0
   808 ;;Total ram usage:        3 bytes
   809 ;; Hardware stack levels used: 1
   810 ;; This function calls:
   811 ;;		Nothing
   812 ;; This function is called by:
   813 ;;		Interrupt level 1
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817                           
   818                           ;psect for function _isr
   819  0064                     _isr:
   820  0064                     i1l905:
   821                           
   822                           ;main.c: 127:     if(RBIF){
   823  0064  1C0B               	btfss	11,0	;volatile
   824  0065  2867               	goto	u7_21
   825  0066  2868               	goto	u7_20
   826  0067                     u7_21:
   827  0067  2881               	goto	i1l83
   828  0068                     u7_20:
   829  0068                     i1l907:
   830                           
   831                           ;main.c: 128:         if(RB0==0 && RB1==1){
   832  0068  1283               	bcf	3,5	;RP0=0, select bank0
   833  0069  1303               	bcf	3,6	;RP1=0, select bank0
   834  006A  1806               	btfsc	6,0	;volatile
   835  006B  286D               	goto	u8_21
   836  006C  286E               	goto	u8_20
   837  006D                     u8_21:
   838  006D  2876               	goto	i1l913
   839  006E                     u8_20:
   840  006E                     i1l909:
   841  006E  1C86               	btfss	6,1	;volatile
   842  006F  2871               	goto	u9_21
   843  0070  2872               	goto	u9_20
   844  0071                     u9_21:
   845  0071  2876               	goto	i1l913
   846  0072                     u9_20:
   847  0072                     i1l911:
   848                           
   849                           ;main.c: 129:             counter++;
   850  0072  3001               	movlw	1
   851  0073  00F5               	movwf	??_isr
   852  0074  0875               	movf	??_isr,w
   853  0075  07F4               	addwf	_counter,f
   854  0076                     i1l913:
   855                           
   856                           ;main.c: 131:         if(RB0==1 && RB1==0){
   857  0076  1C06               	btfss	6,0	;volatile
   858  0077  2879               	goto	u10_21
   859  0078  287A               	goto	u10_20
   860  0079                     u10_21:
   861  0079  2880               	goto	i1l919
   862  007A                     u10_20:
   863  007A                     i1l915:
   864  007A  1886               	btfsc	6,1	;volatile
   865  007B  287D               	goto	u11_21
   866  007C  287E               	goto	u11_20
   867  007D                     u11_21:
   868  007D  2880               	goto	i1l919
   869  007E                     u11_20:
   870  007E                     i1l917:
   871                           
   872                           ;main.c: 132:             counter--;
   873  007E  3001               	movlw	1
   874  007F  02F4               	subwf	_counter,f
   875  0080                     i1l919:
   876                           
   877                           ;main.c: 134:         RBIF = 0;
   878  0080  100B               	bcf	11,0	;volatile
   879  0081                     i1l83:
   880  0081  0877               	movf	??_isr+2,w
   881  0082  008A               	movwf	10
   882  0083  0E76               	swapf	??_isr+1,w
   883  0084  0083               	movwf	3
   884  0085  0EFE               	swapf	btemp,f
   885  0086  0E7E               	swapf	btemp,w
   886  0087  0009               	retfie
   887  0088                     __end_of_isr:
   888  007E                     btemp	set	126	;btemp
   889  007E                     wtemp0	set	126
   890                           
   891                           	psect	intentry
   892  0004                     __pintentry:	
   893                           ;incstack = 0
   894                           ; Regs used in _isr: [wreg+status,2+status,0]
   895                           
   896  0004                     interrupt_function:
   897  007E                     saved_w	set	btemp
   898  0004  00FE               	movwf	btemp
   899  0005  0E03               	swapf	3,w
   900  0006  00F6               	movwf	??_isr+1
   901  0007  080A               	movf	10,w
   902  0008  00F7               	movwf	??_isr+2
   903  0009  120A  118A  2864   	ljmp	_isr
   904                           
   905                           	psect	config
   906                           
   907                           ;Config register CONFIG1 @ 0x2007
   908                           ;	Oscillator Selection bits
   909                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   910                           ;	Watchdog Timer Enable bit
   911                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   912                           ;	Power-up Timer Enable bit
   913                           ;	PWRTE = OFF, PWRT disabled
   914                           ;	RE3/MCLR pin function select bit
   915                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   916                           ;	Code Protection bit
   917                           ;	CP = OFF, Program memory code protection is disabled
   918                           ;	Data Code Protection bit
   919                           ;	CPD = OFF, Data memory code protection is disabled
   920                           ;	Brown Out Reset Selection bits
   921                           ;	BOREN = OFF, BOR disabled
   922                           ;	Internal External Switchover bit
   923                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   924                           ;	Fail-Safe Clock Monitor Enabled bit
   925                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   926                           ;	Low Voltage Programming Enable bit
   927                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   928                           ;	In-Circuit Debugger Mode bit
   929                           ;	DEBUG = 0x1, unprogrammed default
   930  2007                     	org	8199
   931  2007  20D4               	dw	8404
   932                           
   933                           ;Config register CONFIG2 @ 0x2008
   934                           ;	Brown-out Reset Selection bit
   935                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   936                           ;	Flash Program Memory Self Write Enable bits
   937                           ;	WRT = OFF, Write protection off
   938  2008                     	org	8200
   939  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_Write_Char
    _main->_setup

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      15
                                              4 COMMON     1     1      0
                    _UART_Write_Char
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              3 COMMON     1     1      0
                          _UART_Init
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Char                                      1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Write_Char
   _setup
     _UART_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Aug 18 22:50:31 2021

             _SSPSTATbits 0094                        l75 003E                        u10 00AA  
                      u11 00A9                        u50 004E                        u51 004D  
                      u60 005E                        u61 005D                        _cc 0072  
                      _dc 0071                        _mc 0073                        _uc 0070  
                     l164 009E                       l176 00A4                       l179 00AA  
                     l901 0058                       l831 009B                       l903 005E  
                     l825 0088                       l841 0026                       l833 0018  
                     l827 0096                       l851 002D                       l843 0028  
                     l835 001F                       l829 0099                       l861 0038  
                     l853 0032                       l845 002A                       l837 0021  
                     l863 0039                       l855 0035                       l847 002B  
                     l839 0025                       l865 003A                       l857 0036  
                     l849 002C                       l867 00A0                       l859 0037  
                     l891 003F                       l893 0044                       l895 0048  
                     l897 004E                       l899 0054                       _GIE 005F  
                     _RB0 0030                       _RB1 0031                       _RE0 0048  
                     _RE1 0049                       _isr 0064                      ?_isr 0075  
                    _IOCB 0096                      _PEIE 005E                      _RBIE 005B  
                    _RBIF 0058                      _RCIF 0065                      i1l83 0081  
                    _WPUB 0095                      u7_20 0068                      u7_21 0067  
                    u8_20 006E                      u8_21 006D                      u9_20 0072  
                    u9_21 0071                      _main 003F                      btemp 007E  
                    start 000C   __end_of_UART_Write_Char 00AB                     ??_isr 0075  
                   ?_main 0075                     _BRG16 0C3B                     _ANSEL 0188  
                   i1l911 0072                     i1l913 0076                     i1l905 0064  
                   i1l915 007A                     i1l907 0068                     i1l917 007E  
                   i1l909 006E                     i1l919 0080                     _RCREG 001A  
                   u10_20 007A                     u10_21 0079                     u11_20 007E  
                   u11_21 007D                     _SPBRG 0099                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _SSPIE 0463  
                   _TRISE 0089                     _SSPIF 0063                     _TXREG 0019  
      __size_of_UART_Init 0017                     _setup 0018                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 000F  
            __end_of_main 0064                    ??_main 0079                    _ADRESH 001E  
                  _ADRESL 009E                    ?_setup 0075                    _ANSELH 0189  
                  _SPBRGH 009A                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC4 043C                    _TRISC5 043D                    _SSPCON 0014  
                  _SSPBUF 0013         __end_of_UART_Init 009F          ?_UART_Write_Char 0075  
                  saved_w 007E   __end_of__initialization 0014            __pcstackCOMMON 0075  
           __end_of_setup 003F            _OPTION_REGbits 0081  UART_Write_Char@character 0078  
                 ??_setup 0078                __pnvCOMMON 007A                __pmaintext 003F  
              __pintentry 0004                   _SSPCON2 0091                   _SSPSTAT 0094  
                 __ptext1 0018                   __ptext2 0088                   __ptext3 009F  
                 __ptext4 0064                   _counter 0074              __size_of_isr 0024  
    end_of_initialization 0014                 _RCSTAbits 0018                 _UART_Init 0088  
               _TRISCbits 0087                 _TXSTAbits 0098                ?_UART_Init 0075  
__size_of_UART_Write_Char 000C       start_initialization 000F               __end_of_isr 0088  
            _counter_comp 007A               __pbssCOMMON 0070                 ___latbits 0002  
             ??_UART_Init 0078         ??_UART_Write_Char 0078            __size_of_setup 0027  
       interrupt_function 0004             __size_of_main 0025                  intlevel1 0000  
         _UART_Write_Char 009F               _SSPCON2bits 0091  
