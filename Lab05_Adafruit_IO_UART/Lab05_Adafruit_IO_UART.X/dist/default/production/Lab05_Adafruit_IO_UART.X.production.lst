

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Aug 13 10:31:48 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292                           
   293                           	psect	nvBANK0
   294  0041                     __pnvBANK0:
   295  0041                     _counter_comp:
   296  0041                     	ds	1
   297  0013                     _SSPBUF	set	19
   298  0014                     _SSPCON	set	20
   299  0019                     _TXREG	set	25
   300  0018                     _RCSTAbits	set	24
   301  001E                     _ADRESH	set	30
   302  0009                     _PORTE	set	9
   303  0007                     _PORTC	set	7
   304  0006                     _PORTB	set	6
   305  001A                     _RCREG	set	26
   306  0005                     _PORTA	set	5
   307  0008                     _PORTD	set	8
   308  0063                     _SSPIF	set	99
   309  005E                     _PEIE	set	94
   310  0049                     _RE1	set	73
   311  0048                     _RE0	set	72
   312  0031                     _RB1	set	49
   313  0030                     _RB0	set	48
   314  0058                     _RBIF	set	88
   315  005B                     _RBIE	set	91
   316  005F                     _GIE	set	95
   317  0065                     _RCIF	set	101
   318  0091                     _SSPCON2bits	set	145
   319  0093                     _SSPADD	set	147
   320  0091                     _SSPCON2	set	145
   321  0094                     _SSPSTATbits	set	148
   322  0094                     _SSPSTAT	set	148
   323  0099                     _SPBRG	set	153
   324  009A                     _SPBRGH	set	154
   325  0098                     _TXSTAbits	set	152
   326  0087                     _TRISCbits	set	135
   327  009E                     _ADRESL	set	158
   328  0096                     _IOCB	set	150
   329  0095                     _WPUB	set	149
   330  0081                     _OPTION_REGbits	set	129
   331  0089                     _TRISE	set	137
   332  0088                     _TRISD	set	136
   333  0087                     _TRISC	set	135
   334  0086                     _TRISB	set	134
   335  0085                     _TRISA	set	133
   336  0463                     _SSPIE	set	1123
   337  043C                     _TRISC4	set	1084
   338  043B                     _TRISC3	set	1083
   339  043D                     _TRISC5	set	1085
   340  0189                     _ANSELH	set	393
   341  0188                     _ANSEL	set	392
   342  0C3B                     _BRG16	set	3131
   343                           
   344                           	psect	strings
   345  025E                     __pstrings:
   346  025E                     stringtab:
   347  025E                     __stringtab:
   348  025E                     stringcode:	
   349                           ;	String table - string pointers are 1 byte each
   350                           
   351  025E                     stringdir:
   352  025E  3002               	movlw	high stringdir
   353  025F  008A               	movwf	10
   354  0260  0804               	movf	4,w
   355  0261  0A84               	incf	4,f
   356  0262  0782               	addwf	2,f
   357  0263                     __stringbase:
   358  0263  3400               	retlw	0
   359  0264                     __end_of__stringtab:
   360  0264                     STR_1:
   361  0264  340D               	retlw	13
   362  0265  3400               	retlw	0
   363                           
   364                           	psect	cinit
   365  000F                     start_initialization:	
   366                           ; #config settings
   367                           
   368  000F                     __initialization:
   369                           
   370                           ; Clear objects allocated to BANK0
   371  000F  1283               	bcf	3,5	;RP0=0, select bank0
   372  0010  1303               	bcf	3,6	;RP1=0, select bank0
   373  0011  01BC               	clrf	__pbssBANK0& (0+127)
   374  0012  01BD               	clrf	(__pbssBANK0+1)& (0+127)
   375  0013  01BE               	clrf	(__pbssBANK0+2)& (0+127)
   376  0014  01BF               	clrf	(__pbssBANK0+3)& (0+127)
   377  0015  01C0               	clrf	(__pbssBANK0+4)& (0+127)
   378  0016                     end_of_initialization:	
   379                           ;End of C runtime variable initialization code
   380                           
   381  0016                     __end_of__initialization:
   382  0016  0183               	clrf	3
   383  0017  120A  118A  28E7   	ljmp	_main	;jump to C main() function
   384                           
   385                           	psect	bssBANK0
   386  003C                     __pbssBANK0:
   387  003C                     _counter:
   388  003C                     	ds	1
   389  003D                     _uc:
   390  003D                     	ds	1
   391  003E                     _dc:
   392  003E                     	ds	1
   393  003F                     _cc:
   394  003F                     	ds	1
   395  0040                     _mc:
   396  0040                     	ds	1
   397                           
   398                           	psect	cstackCOMMON
   399  0070                     __pcstackCOMMON:
   400  0070                     ?_setup:
   401  0070                     ?_UART_Write_Char:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ?_UART_Write:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?_UART_Init:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ?_main:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ?_isr:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ??_isr:	
   417                           ; 1 bytes @ 0x0
   418                           
   419                           
   420                           ; 1 bytes @ 0x0
   421  0070                     	ds	3
   422  0073                     ??_setup:
   423  0073                     ??_UART_Write_Char:	
   424                           ; 1 bytes @ 0x3
   425                           
   426  0073                     ??_UART_Write:	
   427                           ; 1 bytes @ 0x3
   428                           
   429  0073                     ??_UART_Init:	
   430                           ; 1 bytes @ 0x3
   431                           
   432  0073                     ?___bmul:	
   433                           ; 1 bytes @ 0x3
   434                           
   435  0073                     ?___wmul:	
   436                           ; 1 bytes @ 0x3
   437                           
   438  0073                     UART_Write_Char@character:	
   439                           ; 2 bytes @ 0x3
   440                           
   441  0073                     ___bmul@multiplicand:	
   442                           ; 1 bytes @ 0x3
   443                           
   444  0073                     ___wmul@multiplier:	
   445                           ; 1 bytes @ 0x3
   446                           
   447                           
   448                           ; 2 bytes @ 0x3
   449  0073                     	ds	1
   450  0074                     ??___bmul:
   451  0074                     UART_Write@word:	
   452                           ; 1 bytes @ 0x4
   453                           
   454                           
   455                           ; 1 bytes @ 0x4
   456  0074                     	ds	1
   457  0075                     ___bmul@product:
   458  0075                     ___wmul@multiplicand:	
   459                           ; 1 bytes @ 0x5
   460                           
   461                           
   462                           ; 2 bytes @ 0x5
   463  0075                     	ds	1
   464  0076                     ___bmul@multiplier:
   465                           
   466                           ; 1 bytes @ 0x6
   467  0076                     	ds	1
   468  0077                     ??___wmul:
   469  0077                     ___wmul@product:	
   470                           ; 1 bytes @ 0x7
   471                           
   472                           
   473                           ; 2 bytes @ 0x7
   474  0077                     	ds	2
   475  0079                     ??___lwdiv:
   476                           
   477                           ; 1 bytes @ 0x9
   478  0079                     	ds	1
   479                           
   480                           	psect	cstackBANK0
   481  0020                     __pcstackBANK0:
   482  0020                     ?___lwdiv:
   483  0020                     ___lwdiv@divisor:	
   484                           ; 2 bytes @ 0x0
   485                           
   486                           
   487                           ; 2 bytes @ 0x0
   488  0020                     	ds	2
   489  0022                     ___lwdiv@dividend:
   490                           
   491                           ; 2 bytes @ 0x2
   492  0022                     	ds	2
   493  0024                     ___lwdiv@quotient:
   494                           
   495                           ; 2 bytes @ 0x4
   496  0024                     	ds	2
   497  0026                     ___lwdiv@counter:
   498                           
   499                           ; 1 bytes @ 0x6
   500  0026                     	ds	1
   501  0027                     ?_divide:
   502  0027                     divide@value:	
   503                           ; 1 bytes @ 0x7
   504                           
   505                           
   506                           ; 2 bytes @ 0x7
   507  0027                     	ds	2
   508  0029                     divide@mil:
   509                           
   510                           ; 1 bytes @ 0x9
   511  0029                     	ds	1
   512  002A                     divide@cent:
   513                           
   514                           ; 1 bytes @ 0xA
   515  002A                     	ds	1
   516  002B                     divide@dec:
   517                           
   518                           ; 1 bytes @ 0xB
   519  002B                     	ds	1
   520  002C                     divide@unit:
   521                           
   522                           ; 1 bytes @ 0xC
   523  002C                     	ds	1
   524  002D                     ??_divide:
   525                           
   526                           ; 1 bytes @ 0xD
   527  002D                     	ds	9
   528  0036                     ??_main:
   529                           
   530                           ; 1 bytes @ 0x16
   531  0036                     	ds	6
   532                           
   533                           	psect	maintext
   534  00E7                     __pmaintext:	
   535 ;;
   536 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   537 ;;
   538 ;; *************** function _main *****************
   539 ;; Defined at:
   540 ;;		line 58 in file "main.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;		None
   543 ;; Auto vars:     Size  Location     Type
   544 ;;		None
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   549 ;; Tracked objects:
   550 ;;		On entry : B00/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   554 ;;      Params:         0       0       0       0       0
   555 ;;      Locals:         0       0       0       0       0
   556 ;;      Temps:          0       6       0       0       0
   557 ;;      Totals:         0       6       0       0       0
   558 ;;Total ram usage:        6 bytes
   559 ;; Hardware stack levels required when called: 3
   560 ;; This function calls:
   561 ;;		_UART_Write
   562 ;;		_UART_Write_Char
   563 ;;		_divide
   564 ;;		_setup
   565 ;; This function is called by:
   566 ;;		Startup code after reset
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           
   571                           ;psect for function _main
   572  00E7                     _main:
   573  00E7                     l1239:	
   574                           ;incstack = 0
   575                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   576                           
   577                           
   578                           ;main.c: 59:     setup();
   579  00E7  120A  118A  2193  120A  118A  	fcall	_setup
   580  00EC                     l1241:
   581                           
   582                           ;main.c: 61:         PORTD = counter;
   583  00EC  1283               	bcf	3,5	;RP0=0, select bank0
   584  00ED  1303               	bcf	3,6	;RP1=0, select bank0
   585  00EE  083C               	movf	_counter,w
   586  00EF  0088               	movwf	8	;volatile
   587  00F0                     l1243:
   588                           
   589                           ;main.c: 63:         if(counter_comp != counter){
   590  00F0  0841               	movf	_counter_comp,w
   591  00F1  063C               	xorwf	_counter,w
   592  00F2  1903               	skipnz
   593  00F3  28F5               	goto	u501
   594  00F4  28F6               	goto	u500
   595  00F5                     u501:
   596  00F5  2941               	goto	l1259
   597  00F6                     u500:
   598  00F6                     l1245:
   599                           
   600                           ;main.c: 64:             divide(counter, &mc, &cc, &dc, &uc);
   601  00F6  083C               	movf	_counter,w
   602  00F7  00B6               	movwf	??_main
   603  00F8  01B7               	clrf	??_main+1
   604  00F9  0836               	movf	??_main,w
   605  00FA  00A7               	movwf	divide@value
   606  00FB  0837               	movf	??_main+1,w
   607  00FC  00A8               	movwf	divide@value+1
   608  00FD  3040               	movlw	(low (_mc| 0))& (0+255)
   609  00FE  00B8               	movwf	??_main+2
   610  00FF  0838               	movf	??_main+2,w
   611  0100  00A9               	movwf	divide@mil
   612  0101  303F               	movlw	(low (_cc| 0))& (0+255)
   613  0102  00B9               	movwf	??_main+3
   614  0103  0839               	movf	??_main+3,w
   615  0104  00AA               	movwf	divide@cent
   616  0105  303E               	movlw	(low (_dc| 0))& (0+255)
   617  0106  00BA               	movwf	??_main+4
   618  0107  083A               	movf	??_main+4,w
   619  0108  00AB               	movwf	divide@dec
   620  0109  303D               	movlw	(low (_uc| 0))& (0+255)
   621  010A  00BB               	movwf	??_main+5
   622  010B  083B               	movf	??_main+5,w
   623  010C  00AC               	movwf	divide@unit
   624  010D  120A  118A  201A  120A  118A  	fcall	_divide
   625  0112                     l1247:
   626                           
   627                           ;main.c: 65:             counter_comp = counter;
   628  0112  1283               	bcf	3,5	;RP0=0, select bank0
   629  0113  1303               	bcf	3,6	;RP1=0, select bank0
   630  0114  083C               	movf	_counter,w
   631  0115  00B6               	movwf	??_main
   632  0116  0836               	movf	??_main,w
   633  0117  00C1               	movwf	_counter_comp
   634  0118                     l1249:
   635                           
   636                           ;main.c: 66:             if(cc!=0)
   637  0118  083F               	movf	_cc,w
   638  0119  1903               	btfsc	3,2
   639  011A  291C               	goto	u511
   640  011B  291D               	goto	u510
   641  011C                     u511:
   642  011C  2924               	goto	l1253
   643  011D                     u510:
   644  011D                     l1251:
   645                           
   646                           ;main.c: 67:             UART_Write_Char(cc+48);
   647  011D  083F               	movf	_cc,w
   648  011E  3E30               	addlw	48
   649  011F  120A  118A  2252  120A  118A  	fcall	_UART_Write_Char
   650  0124                     l1253:
   651                           
   652                           ;main.c: 68:             if(dc!=0)
   653  0124  1283               	bcf	3,5	;RP0=0, select bank0
   654  0125  1303               	bcf	3,6	;RP1=0, select bank0
   655  0126  083E               	movf	_dc,w
   656  0127  1903               	btfsc	3,2
   657  0128  292A               	goto	u521
   658  0129  292B               	goto	u520
   659  012A                     u521:
   660  012A  2932               	goto	l74
   661  012B                     u520:
   662  012B                     l1255:
   663                           
   664                           ;main.c: 69:             UART_Write_Char(dc+48);
   665  012B  083E               	movf	_dc,w
   666  012C  3E30               	addlw	48
   667  012D  120A  118A  2252  120A  118A  	fcall	_UART_Write_Char
   668  0132                     l74:
   669                           
   670                           ;main.c: 71:             UART_Write_Char(uc+48);
   671  0132  1283               	bcf	3,5	;RP0=0, select bank0
   672  0133  1303               	bcf	3,6	;RP1=0, select bank0
   673  0134  083D               	movf	_uc,w
   674  0135  3E30               	addlw	48
   675  0136  120A  118A  2252  120A  118A  	fcall	_UART_Write_Char
   676  013B                     l1257:
   677                           
   678                           ;main.c: 72:             UART_Write("\r");
   679  013B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   680  013C  120A  118A  2203  120A  118A  	fcall	_UART_Write
   681  0141                     l1259:
   682                           
   683                           ;main.c: 76:         if(RCIF){
   684  0141  1283               	bcf	3,5	;RP0=0, select bank0
   685  0142  1303               	bcf	3,6	;RP1=0, select bank0
   686  0143  1E8C               	btfss	12,5	;volatile
   687  0144  2946               	goto	u531
   688  0145  2947               	goto	u530
   689  0146                     u531:
   690  0146  28EC               	goto	l1241
   691  0147                     u530:
   692  0147                     l1261:
   693                           
   694                           ;main.c: 77:             PORTA = RCREG;
   695  0147  081A               	movf	26,w	;volatile
   696  0148  0085               	movwf	5	;volatile
   697  0149  28EC               	goto	l1241
   698  014A  120A  118A  280C   	ljmp	start
   699  014D                     __end_of_main:
   700                           
   701                           	psect	text1
   702  0193                     __ptext1:	
   703 ;; *************** function _setup *****************
   704 ;; Defined at:
   705 ;;		line 85 in file "main.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;		None
   708 ;; Auto vars:     Size  Location     Type
   709 ;;		None
   710 ;; Return value:  Size  Location     Type
   711 ;;                  1    wreg      void 
   712 ;; Registers used:
   713 ;;		wreg, status,2, status,0, pclath, cstack
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   719 ;;      Params:         0       0       0       0       0
   720 ;;      Locals:         0       0       0       0       0
   721 ;;      Temps:          1       0       0       0       0
   722 ;;      Totals:         1       0       0       0       0
   723 ;;Total ram usage:        1 bytes
   724 ;; Hardware stack levels used: 1
   725 ;; Hardware stack levels required when called: 2
   726 ;; This function calls:
   727 ;;		_UART_Init
   728 ;; This function is called by:
   729 ;;		_main
   730 ;; This function uses a non-reentrant model
   731 ;;
   732                           
   733                           
   734                           ;psect for function _setup
   735  0193                     _setup:
   736  0193                     l1193:	
   737                           ;incstack = 0
   738                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   739                           
   740                           
   741                           ;main.c: 87:     ANSEL = 0;
   742  0193  1683               	bsf	3,5	;RP0=1, select bank3
   743  0194  1703               	bsf	3,6	;RP1=1, select bank3
   744  0195  0188               	clrf	8	;volatile
   745                           
   746                           ;main.c: 88:     ANSELH = 0;
   747  0196  0189               	clrf	9	;volatile
   748                           
   749                           ;main.c: 89:     TRISA = 0;
   750  0197  1683               	bsf	3,5	;RP0=1, select bank1
   751  0198  1303               	bcf	3,6	;RP1=0, select bank1
   752  0199  0185               	clrf	5	;volatile
   753  019A                     l1195:
   754                           
   755                           ;main.c: 90:     TRISB = 0b00000011;
   756  019A  3003               	movlw	3
   757  019B  0086               	movwf	6	;volatile
   758  019C                     l1197:
   759                           
   760                           ;main.c: 91:     TRISC = 128;
   761  019C  3080               	movlw	128
   762  019D  0087               	movwf	7	;volatile
   763                           
   764                           ;main.c: 92:     TRISD = 0;
   765  019E  0188               	clrf	8	;volatile
   766                           
   767                           ;main.c: 93:     TRISE = 0;
   768  019F  0189               	clrf	9	;volatile
   769  01A0                     l1199:
   770                           
   771                           ;main.c: 96:     OPTION_REGbits.nRBPU = 0;
   772  01A0  1381               	bcf	1,7	;volatile
   773  01A1                     l1201:
   774                           
   775                           ;main.c: 97:     WPUB = 0b00000011;
   776  01A1  3003               	movlw	3
   777  01A2  0095               	movwf	21	;volatile
   778  01A3                     l1203:
   779                           
   780                           ;main.c: 98:     IOCB = 0b00000011;
   781  01A3  3003               	movlw	3
   782  01A4  0096               	movwf	22	;volatile
   783  01A5                     l1205:
   784                           
   785                           ;main.c: 101:     GIE = 1;
   786  01A5  178B               	bsf	11,7	;volatile
   787  01A6                     l1207:
   788                           
   789                           ;main.c: 102:     RBIE = 1;
   790  01A6  158B               	bsf	11,3	;volatile
   791  01A7                     l1209:
   792                           
   793                           ;main.c: 103:     RBIF = 0;
   794  01A7  100B               	bcf	11,0	;volatile
   795  01A8                     l1211:
   796                           
   797                           ;main.c: 105:     UART_Init();
   798  01A8  120A  118A  2226  120A  118A  	fcall	_UART_Init
   799  01AD                     l1213:
   800                           
   801                           ;main.c: 108:     PORTA = 0;
   802  01AD  1283               	bcf	3,5	;RP0=0, select bank0
   803  01AE  1303               	bcf	3,6	;RP1=0, select bank0
   804  01AF  0185               	clrf	5	;volatile
   805  01B0                     l1215:
   806                           
   807                           ;main.c: 109:     PORTB = 0;
   808  01B0  0186               	clrf	6	;volatile
   809  01B1                     l1217:
   810                           
   811                           ;main.c: 110:     PORTC = 0;
   812  01B1  0187               	clrf	7	;volatile
   813  01B2                     l1219:
   814                           
   815                           ;main.c: 111:     PORTD = 0;
   816  01B2  0188               	clrf	8	;volatile
   817  01B3                     l1221:
   818                           
   819                           ;main.c: 112:     PORTE = 0;
   820  01B3  0189               	clrf	9	;volatile
   821  01B4                     l1223:
   822                           
   823                           ;main.c: 115:     counter = 0;
   824  01B4  01BC               	clrf	_counter
   825  01B5                     l1225:
   826                           
   827                           ;main.c: 116:     counter_comp = 255;
   828  01B5  30FF               	movlw	255
   829  01B6  00F3               	movwf	??_setup
   830  01B7  0873               	movf	??_setup,w
   831  01B8  00C1               	movwf	_counter_comp
   832  01B9                     l81:
   833  01B9  0008               	return
   834  01BA                     __end_of_setup:
   835                           
   836                           	psect	text2
   837  0226                     __ptext2:	
   838 ;; *************** function _UART_Init *****************
   839 ;; Defined at:
   840 ;;		line 80 in file "Digital2_toolbox.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;		None
   843 ;; Auto vars:     Size  Location     Type
   844 ;;		None
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		wreg, status,2
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   854 ;;      Params:         0       0       0       0       0
   855 ;;      Locals:         0       0       0       0       0
   856 ;;      Temps:          0       0       0       0       0
   857 ;;      Totals:         0       0       0       0       0
   858 ;;Total ram usage:        0 bytes
   859 ;; Hardware stack levels used: 1
   860 ;; Hardware stack levels required when called: 1
   861 ;; This function calls:
   862 ;;		Nothing
   863 ;; This function is called by:
   864 ;;		_setup
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           
   869                           ;psect for function _UART_Init
   870  0226                     _UART_Init:
   871  0226                     l1131:	
   872                           ;incstack = 0
   873                           ; Regs used in _UART_Init: [wreg+status,2]
   874                           
   875                           
   876                           ;Digital2_toolbox.c: 81:     TRISCbits.TRISC7 = 1;
   877  0226  1683               	bsf	3,5	;RP0=1, select bank1
   878  0227  1303               	bcf	3,6	;RP1=0, select bank1
   879  0228  1787               	bsf	7,7	;volatile
   880                           
   881                           ;Digital2_toolbox.c: 83:     TXSTAbits.TXEN = 1;
   882  0229  1698               	bsf	24,5	;volatile
   883                           
   884                           ;Digital2_toolbox.c: 84:     TXSTAbits.SYNC = 0;
   885  022A  1218               	bcf	24,4	;volatile
   886                           
   887                           ;Digital2_toolbox.c: 85:     RCSTAbits.SPEN = 1;
   888  022B  1283               	bcf	3,5	;RP0=0, select bank0
   889  022C  1303               	bcf	3,6	;RP1=0, select bank0
   890  022D  1798               	bsf	24,7	;volatile
   891                           
   892                           ;Digital2_toolbox.c: 86:     TXSTAbits.BRGH = 1;
   893  022E  1683               	bsf	3,5	;RP0=1, select bank1
   894  022F  1303               	bcf	3,6	;RP1=0, select bank1
   895  0230  1518               	bsf	24,2	;volatile
   896                           
   897                           ;Digital2_toolbox.c: 87:     BRG16 = 0;
   898  0231  1683               	bsf	3,5	;RP0=1, select bank3
   899  0232  1703               	bsf	3,6	;RP1=1, select bank3
   900  0233  1187               	bcf	7,3	;volatile
   901  0234                     l1133:
   902                           
   903                           ;Digital2_toolbox.c: 88:     SPBRGH = 0;
   904  0234  1683               	bsf	3,5	;RP0=1, select bank1
   905  0235  1303               	bcf	3,6	;RP1=0, select bank1
   906  0236  019A               	clrf	26	;volatile
   907  0237                     l1135:
   908                           
   909                           ;Digital2_toolbox.c: 89:     SPBRG = 25;
   910  0237  3019               	movlw	25
   911  0238  0099               	movwf	25	;volatile
   912  0239                     l1137:
   913                           
   914                           ;Digital2_toolbox.c: 93:     RCSTAbits.CREN = 1;
   915  0239  1283               	bcf	3,5	;RP0=0, select bank0
   916  023A  1303               	bcf	3,6	;RP1=0, select bank0
   917  023B  1618               	bsf	24,4	;volatile
   918  023C                     l170:
   919  023C  0008               	return
   920  023D                     __end_of_UART_Init:
   921                           
   922                           	psect	text3
   923  001A                     __ptext3:	
   924 ;; *************** function _divide *****************
   925 ;; Defined at:
   926 ;;		line 268 in file "Digital2_toolbox.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;  value           2    7[BANK0 ] unsigned int 
   929 ;;  mil             1    9[BANK0 ] PTR unsigned char 
   930 ;;		 -> mc(1), 
   931 ;;  cent            1   10[BANK0 ] PTR unsigned char 
   932 ;;		 -> cc(1), 
   933 ;;  dec             1   11[BANK0 ] PTR unsigned char 
   934 ;;		 -> dc(1), 
   935 ;;  unit            1   12[BANK0 ] PTR unsigned char 
   936 ;;		 -> uc(1), 
   937 ;; Auto vars:     Size  Location     Type
   938 ;;		None
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   948 ;;      Params:         0       6       0       0       0
   949 ;;      Locals:         0       0       0       0       0
   950 ;;      Temps:          0       9       0       0       0
   951 ;;      Totals:         0      15       0       0       0
   952 ;;Total ram usage:       15 bytes
   953 ;; Hardware stack levels used: 1
   954 ;; Hardware stack levels required when called: 2
   955 ;; This function calls:
   956 ;;		___bmul
   957 ;;		___lwdiv
   958 ;;		___wmul
   959 ;; This function is called by:
   960 ;;		_main
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           
   965                           ;psect for function _divide
   966  001A                     _divide:
   967  001A                     l1227:	
   968                           ;incstack = 0
   969                           ; Regs used in _divide: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   970                           
   971                           
   972                           ;Digital2_toolbox.c: 269:     *mil=value/1000;
   973  001A  30E8               	movlw	232
   974  001B  1283               	bcf	3,5	;RP0=0, select bank0
   975  001C  1303               	bcf	3,6	;RP1=0, select bank0
   976  001D  00A0               	movwf	___lwdiv@divisor
   977  001E  3003               	movlw	3
   978  001F  00A1               	movwf	___lwdiv@divisor+1
   979  0020  0828               	movf	divide@value+1,w
   980  0021  00A3               	movwf	___lwdiv@dividend+1
   981  0022  0827               	movf	divide@value,w
   982  0023  00A2               	movwf	___lwdiv@dividend
   983  0024  120A  118A  214D  120A  118A  	fcall	___lwdiv
   984  0029  1283               	bcf	3,5	;RP0=0, select bank0
   985  002A  1303               	bcf	3,6	;RP1=0, select bank0
   986  002B  0820               	movf	?___lwdiv,w
   987  002C  00AD               	movwf	??_divide
   988  002D  0829               	movf	divide@mil,w
   989  002E  0084               	movwf	4
   990  002F  082D               	movf	??_divide,w
   991  0030  1383               	bcf	3,7	;select IRP bank0
   992  0031  0080               	movwf	0
   993                           
   994                           ;Digital2_toolbox.c: 270:     *cent=(value-1000*(int)*mil)/100;
   995  0032  3064               	movlw	100
   996  0033  00A0               	movwf	___lwdiv@divisor
   997  0034  3000               	movlw	0
   998  0035  00A1               	movwf	___lwdiv@divisor+1
   999  0036  0829               	movf	divide@mil,w
  1000  0037  0084               	movwf	4
  1001  0038  0800               	movf	0,w
  1002  0039  00AD               	movwf	??_divide
  1003  003A  01AE               	clrf	??_divide+1
  1004  003B  082D               	movf	??_divide,w
  1005  003C  00F3               	movwf	___wmul@multiplier
  1006  003D  082E               	movf	??_divide+1,w
  1007  003E  00F4               	movwf	___wmul@multiplier+1
  1008  003F  3018               	movlw	24
  1009  0040  00F5               	movwf	___wmul@multiplicand
  1010  0041  30FC               	movlw	252
  1011  0042  00F6               	movwf	___wmul@multiplicand+1
  1012  0043  120A  118A  21BA  120A  118A  	fcall	___wmul
  1013  0048  1283               	bcf	3,5	;RP0=0, select bank0
  1014  0049  1303               	bcf	3,6	;RP1=0, select bank0
  1015  004A  0827               	movf	divide@value,w
  1016  004B  0773               	addwf	?___wmul,w
  1017  004C  00A2               	movwf	___lwdiv@dividend
  1018  004D  0828               	movf	divide@value+1,w
  1019  004E  1803               	skipnc
  1020  004F  0A28               	incf	divide@value+1,w
  1021  0050  0774               	addwf	?___wmul+1,w
  1022  0051  00A3               	movwf	___lwdiv@dividend+1
  1023  0052  120A  118A  214D  120A  118A  	fcall	___lwdiv
  1024  0057  1283               	bcf	3,5	;RP0=0, select bank0
  1025  0058  1303               	bcf	3,6	;RP1=0, select bank0
  1026  0059  0820               	movf	?___lwdiv,w
  1027  005A  00AF               	movwf	??_divide+2
  1028  005B  082A               	movf	divide@cent,w
  1029  005C  0084               	movwf	4
  1030  005D  082F               	movf	??_divide+2,w
  1031  005E  1383               	bcf	3,7	;select IRP bank0
  1032  005F  0080               	movwf	0
  1033                           
  1034                           ;Digital2_toolbox.c: 271:     *dec=(value-1000*(int)*mil-100*(int)*cent)/10;
  1035  0060  300A               	movlw	10
  1036  0061  00A0               	movwf	___lwdiv@divisor
  1037  0062  3000               	movlw	0
  1038  0063  00A1               	movwf	___lwdiv@divisor+1
  1039  0064  0829               	movf	divide@mil,w
  1040  0065  0084               	movwf	4
  1041  0066  0800               	movf	0,w
  1042  0067  00AD               	movwf	??_divide
  1043  0068  01AE               	clrf	??_divide+1
  1044  0069  082D               	movf	??_divide,w
  1045  006A  00F3               	movwf	___wmul@multiplier
  1046  006B  082E               	movf	??_divide+1,w
  1047  006C  00F4               	movwf	___wmul@multiplier+1
  1048  006D  3018               	movlw	24
  1049  006E  00F5               	movwf	___wmul@multiplicand
  1050  006F  30FC               	movlw	252
  1051  0070  00F6               	movwf	___wmul@multiplicand+1
  1052  0071  120A  118A  21BA  120A  118A  	fcall	___wmul
  1053  0076  0873               	movf	?___wmul,w
  1054  0077  1283               	bcf	3,5	;RP0=0, select bank0
  1055  0078  1303               	bcf	3,6	;RP1=0, select bank0
  1056  0079  00AF               	movwf	??_divide+2
  1057  007A  0874               	movf	?___wmul+1,w
  1058  007B  00B0               	movwf	??_divide+3
  1059  007C  082A               	movf	divide@cent,w
  1060  007D  0084               	movwf	4
  1061  007E  1383               	bcf	3,7	;select IRP bank0
  1062  007F  0800               	movf	0,w
  1063  0080  00B1               	movwf	??_divide+4
  1064  0081  01B2               	clrf	??_divide+5
  1065  0082  0831               	movf	??_divide+4,w
  1066  0083  00F3               	movwf	___wmul@multiplier
  1067  0084  0832               	movf	??_divide+5,w
  1068  0085  00F4               	movwf	___wmul@multiplier+1
  1069  0086  309C               	movlw	156
  1070  0087  00F5               	movwf	___wmul@multiplicand
  1071  0088  30FF               	movlw	255
  1072  0089  00F6               	movwf	___wmul@multiplicand+1
  1073  008A  120A  118A  21BA  120A  118A  	fcall	___wmul
  1074  008F  0873               	movf	?___wmul,w
  1075  0090  1283               	bcf	3,5	;RP0=0, select bank0
  1076  0091  1303               	bcf	3,6	;RP1=0, select bank0
  1077  0092  072F               	addwf	??_divide+2,w
  1078  0093  00B3               	movwf	??_divide+6
  1079  0094  0874               	movf	?___wmul+1,w
  1080  0095  1803               	skipnc
  1081  0096  0A74               	incf	?___wmul+1,w
  1082  0097  0730               	addwf	??_divide+3,w
  1083  0098  00B4               	movwf	??_divide+7
  1084  0099  0827               	movf	divide@value,w
  1085  009A  0733               	addwf	??_divide+6,w
  1086  009B  00A2               	movwf	___lwdiv@dividend
  1087  009C  0828               	movf	divide@value+1,w
  1088  009D  1803               	skipnc
  1089  009E  0A28               	incf	divide@value+1,w
  1090  009F  0734               	addwf	??_divide+7,w
  1091  00A0  00A3               	movwf	___lwdiv@dividend+1
  1092  00A1  120A  118A  214D  120A  118A  	fcall	___lwdiv
  1093  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  1094  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  1095  00A8  0820               	movf	?___lwdiv,w
  1096  00A9  00B5               	movwf	??_divide+8
  1097  00AA  082B               	movf	divide@dec,w
  1098  00AB  0084               	movwf	4
  1099  00AC  0835               	movf	??_divide+8,w
  1100  00AD  1383               	bcf	3,7	;select IRP bank0
  1101  00AE  0080               	movwf	0
  1102                           
  1103                           ;Digital2_toolbox.c: 272:     *unit=value-1000*(int)*mil-100*(int)*cent-10*(int)*dec;
  1104  00AF  3018               	movlw	24
  1105  00B0  00AD               	movwf	??_divide
  1106  00B1  082D               	movf	??_divide,w
  1107  00B2  00F3               	movwf	___bmul@multiplicand
  1108  00B3  0829               	movf	divide@mil,w
  1109  00B4  0084               	movwf	4
  1110  00B5  0800               	movf	0,w
  1111  00B6  120A  118A  223D  120A  118A  	fcall	___bmul
  1112  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1113  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1114  00BD  00AE               	movwf	??_divide+1
  1115  00BE  309C               	movlw	156
  1116  00BF  00AF               	movwf	??_divide+2
  1117  00C0  082F               	movf	??_divide+2,w
  1118  00C1  00F3               	movwf	___bmul@multiplicand
  1119  00C2  082A               	movf	divide@cent,w
  1120  00C3  0084               	movwf	4
  1121  00C4  1383               	bcf	3,7	;select IRP bank0
  1122  00C5  0800               	movf	0,w
  1123  00C6  120A  118A  223D  120A  118A  	fcall	___bmul
  1124  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1125  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1126  00CD  00B0               	movwf	??_divide+3
  1127  00CE  30F6               	movlw	246
  1128  00CF  00B1               	movwf	??_divide+4
  1129  00D0  0831               	movf	??_divide+4,w
  1130  00D1  00F3               	movwf	___bmul@multiplicand
  1131  00D2  082B               	movf	divide@dec,w
  1132  00D3  0084               	movwf	4
  1133  00D4  1383               	bcf	3,7	;select IRP bank0
  1134  00D5  0800               	movf	0,w
  1135  00D6  120A  118A  223D  120A  118A  	fcall	___bmul
  1136  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1137  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1138  00DD  0730               	addwf	??_divide+3,w
  1139  00DE  072E               	addwf	??_divide+1,w
  1140  00DF  0727               	addwf	divide@value,w
  1141  00E0  00B2               	movwf	??_divide+5
  1142  00E1  082C               	movf	divide@unit,w
  1143  00E2  0084               	movwf	4
  1144  00E3  0832               	movf	??_divide+5,w
  1145  00E4  1383               	bcf	3,7	;select IRP bank0
  1146  00E5  0080               	movwf	0
  1147  00E6                     l239:
  1148  00E6  0008               	return
  1149  00E7                     __end_of_divide:
  1150                           
  1151                           	psect	text4
  1152  01BA                     __ptext4:	
  1153 ;; *************** function ___wmul *****************
  1154 ;; Defined at:
  1155 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;  multiplier      2    3[COMMON] unsigned int 
  1158 ;;  multiplicand    2    5[COMMON] unsigned int 
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;  product         2    7[COMMON] unsigned int 
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  2    3[COMMON] unsigned int 
  1163 ;; Registers used:
  1164 ;;		wreg, status,2, status,0
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1170 ;;      Params:         4       0       0       0       0
  1171 ;;      Locals:         2       0       0       0       0
  1172 ;;      Temps:          0       0       0       0       0
  1173 ;;      Totals:         6       0       0       0       0
  1174 ;;Total ram usage:        6 bytes
  1175 ;; Hardware stack levels used: 1
  1176 ;; Hardware stack levels required when called: 1
  1177 ;; This function calls:
  1178 ;;		Nothing
  1179 ;; This function is called by:
  1180 ;;		_divide
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           
  1185                           ;psect for function ___wmul
  1186  01BA                     ___wmul:
  1187  01BA                     l1139:	
  1188                           ;incstack = 0
  1189                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1190                           
  1191  01BA  01F7               	clrf	___wmul@product
  1192  01BB  01F8               	clrf	___wmul@product+1
  1193  01BC                     l1141:
  1194  01BC  1C73               	btfss	___wmul@multiplier,0
  1195  01BD  29BF               	goto	u341
  1196  01BE  29C0               	goto	u340
  1197  01BF                     u341:
  1198  01BF  29C6               	goto	l325
  1199  01C0                     u340:
  1200  01C0                     l1143:
  1201  01C0  0875               	movf	___wmul@multiplicand,w
  1202  01C1  07F7               	addwf	___wmul@product,f
  1203  01C2  1803               	skipnc
  1204  01C3  0AF8               	incf	___wmul@product+1,f
  1205  01C4  0876               	movf	___wmul@multiplicand+1,w
  1206  01C5  07F8               	addwf	___wmul@product+1,f
  1207  01C6                     l325:
  1208  01C6  3001               	movlw	1
  1209  01C7                     u355:
  1210  01C7  1003               	clrc
  1211  01C8  0DF5               	rlf	___wmul@multiplicand,f
  1212  01C9  0DF6               	rlf	___wmul@multiplicand+1,f
  1213  01CA  3EFF               	addlw	-1
  1214  01CB  1D03               	skipz
  1215  01CC  29C7               	goto	u355
  1216  01CD                     l1145:
  1217  01CD  3001               	movlw	1
  1218  01CE                     u365:
  1219  01CE  1003               	clrc
  1220  01CF  0CF4               	rrf	___wmul@multiplier+1,f
  1221  01D0  0CF3               	rrf	___wmul@multiplier,f
  1222  01D1  3EFF               	addlw	-1
  1223  01D2  1D03               	skipz
  1224  01D3  29CE               	goto	u365
  1225  01D4                     l1147:
  1226  01D4  0873               	movf	___wmul@multiplier,w
  1227  01D5  0474               	iorwf	___wmul@multiplier+1,w
  1228  01D6  1D03               	btfss	3,2
  1229  01D7  29D9               	goto	u371
  1230  01D8  29DA               	goto	u370
  1231  01D9                     u371:
  1232  01D9  29BC               	goto	l1141
  1233  01DA                     u370:
  1234  01DA                     l1149:
  1235  01DA  0878               	movf	___wmul@product+1,w
  1236  01DB  00F4               	movwf	?___wmul+1
  1237  01DC  0877               	movf	___wmul@product,w
  1238  01DD  00F3               	movwf	?___wmul
  1239  01DE                     l327:
  1240  01DE  0008               	return
  1241  01DF                     __end_of___wmul:
  1242                           
  1243                           	psect	text5
  1244  014D                     __ptext5:	
  1245 ;; *************** function ___lwdiv *****************
  1246 ;; Defined at:
  1247 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  divisor         2    0[BANK0 ] unsigned int 
  1250 ;;  dividend        2    2[BANK0 ] unsigned int 
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  quotient        2    4[BANK0 ] unsigned int 
  1253 ;;  counter         1    6[BANK0 ] unsigned char 
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  2    0[BANK0 ] unsigned int 
  1256 ;; Registers used:
  1257 ;;		wreg, status,2, status,0
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1263 ;;      Params:         0       4       0       0       0
  1264 ;;      Locals:         0       3       0       0       0
  1265 ;;      Temps:          1       0       0       0       0
  1266 ;;      Totals:         1       7       0       0       0
  1267 ;;Total ram usage:        8 bytes
  1268 ;; Hardware stack levels used: 1
  1269 ;; Hardware stack levels required when called: 1
  1270 ;; This function calls:
  1271 ;;		Nothing
  1272 ;; This function is called by:
  1273 ;;		_divide
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           
  1278                           ;psect for function ___lwdiv
  1279  014D                     ___lwdiv:
  1280  014D                     l1167:	
  1281                           ;incstack = 0
  1282                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1283                           
  1284  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1285  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1286  014F  01A4               	clrf	___lwdiv@quotient
  1287  0150  01A5               	clrf	___lwdiv@quotient+1
  1288  0151                     l1169:
  1289  0151  0820               	movf	___lwdiv@divisor,w
  1290  0152  0421               	iorwf	___lwdiv@divisor+1,w
  1291  0153  1903               	btfsc	3,2
  1292  0154  2956               	goto	u401
  1293  0155  2957               	goto	u400
  1294  0156                     u401:
  1295  0156  298E               	goto	l1189
  1296  0157                     u400:
  1297  0157                     l1171:
  1298  0157  01A6               	clrf	___lwdiv@counter
  1299  0158  0AA6               	incf	___lwdiv@counter,f
  1300  0159  2965               	goto	l1177
  1301  015A                     l1173:
  1302  015A  3001               	movlw	1
  1303  015B                     u415:
  1304  015B  1003               	clrc
  1305  015C  0DA0               	rlf	___lwdiv@divisor,f
  1306  015D  0DA1               	rlf	___lwdiv@divisor+1,f
  1307  015E  3EFF               	addlw	-1
  1308  015F  1D03               	skipz
  1309  0160  295B               	goto	u415
  1310  0161                     l1175:
  1311  0161  3001               	movlw	1
  1312  0162  00F9               	movwf	??___lwdiv
  1313  0163  0879               	movf	??___lwdiv,w
  1314  0164  07A6               	addwf	___lwdiv@counter,f
  1315  0165                     l1177:
  1316  0165  1FA1               	btfss	___lwdiv@divisor+1,7
  1317  0166  2968               	goto	u421
  1318  0167  2969               	goto	u420
  1319  0168                     u421:
  1320  0168  295A               	goto	l1173
  1321  0169                     u420:
  1322  0169                     l1179:
  1323  0169  3001               	movlw	1
  1324  016A                     u435:
  1325  016A  1003               	clrc
  1326  016B  0DA4               	rlf	___lwdiv@quotient,f
  1327  016C  0DA5               	rlf	___lwdiv@quotient+1,f
  1328  016D  3EFF               	addlw	-1
  1329  016E  1D03               	skipz
  1330  016F  296A               	goto	u435
  1331  0170  0821               	movf	___lwdiv@divisor+1,w
  1332  0171  0223               	subwf	___lwdiv@dividend+1,w
  1333  0172  1D03               	skipz
  1334  0173  2976               	goto	u445
  1335  0174  0820               	movf	___lwdiv@divisor,w
  1336  0175  0222               	subwf	___lwdiv@dividend,w
  1337  0176                     u445:
  1338  0176  1C03               	skipc
  1339  0177  2979               	goto	u441
  1340  0178  297A               	goto	u440
  1341  0179                     u441:
  1342  0179  2981               	goto	l1185
  1343  017A                     u440:
  1344  017A                     l1181:
  1345  017A  0820               	movf	___lwdiv@divisor,w
  1346  017B  02A2               	subwf	___lwdiv@dividend,f
  1347  017C  0821               	movf	___lwdiv@divisor+1,w
  1348  017D  1C03               	skipc
  1349  017E  03A3               	decf	___lwdiv@dividend+1,f
  1350  017F  02A3               	subwf	___lwdiv@dividend+1,f
  1351  0180                     l1183:
  1352  0180  1424               	bsf	___lwdiv@quotient,0
  1353  0181                     l1185:
  1354  0181  3001               	movlw	1
  1355  0182                     u455:
  1356  0182  1003               	clrc
  1357  0183  0CA1               	rrf	___lwdiv@divisor+1,f
  1358  0184  0CA0               	rrf	___lwdiv@divisor,f
  1359  0185  3EFF               	addlw	-1
  1360  0186  1D03               	skipz
  1361  0187  2982               	goto	u455
  1362  0188                     l1187:
  1363  0188  3001               	movlw	1
  1364  0189  02A6               	subwf	___lwdiv@counter,f
  1365  018A  1D03               	btfss	3,2
  1366  018B  298D               	goto	u461
  1367  018C  298E               	goto	u460
  1368  018D                     u461:
  1369  018D  2969               	goto	l1179
  1370  018E                     u460:
  1371  018E                     l1189:
  1372  018E  0825               	movf	___lwdiv@quotient+1,w
  1373  018F  00A1               	movwf	?___lwdiv+1
  1374  0190  0824               	movf	___lwdiv@quotient,w
  1375  0191  00A0               	movwf	?___lwdiv
  1376  0192                     l597:
  1377  0192  0008               	return
  1378  0193                     __end_of___lwdiv:
  1379                           
  1380                           	psect	text6
  1381  023D                     __ptext6:	
  1382 ;; *************** function ___bmul *****************
  1383 ;; Defined at:
  1384 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;  multiplier      1    wreg     unsigned char 
  1387 ;;  multiplicand    1    3[COMMON] unsigned char 
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;  multiplier      1    6[COMMON] unsigned char 
  1390 ;;  product         1    5[COMMON] unsigned char 
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      unsigned char 
  1393 ;; Registers used:
  1394 ;;		wreg, status,2, status,0
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1400 ;;      Params:         1       0       0       0       0
  1401 ;;      Locals:         2       0       0       0       0
  1402 ;;      Temps:          1       0       0       0       0
  1403 ;;      Totals:         4       0       0       0       0
  1404 ;;Total ram usage:        4 bytes
  1405 ;; Hardware stack levels used: 1
  1406 ;; Hardware stack levels required when called: 1
  1407 ;; This function calls:
  1408 ;;		Nothing
  1409 ;; This function is called by:
  1410 ;;		_divide
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           
  1415                           ;psect for function ___bmul
  1416  023D                     ___bmul:
  1417                           
  1418                           ;incstack = 0
  1419                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1420                           ;___bmul@multiplier stored from wreg
  1421  023D  00F6               	movwf	___bmul@multiplier
  1422  023E                     l1153:
  1423  023E  01F5               	clrf	___bmul@product
  1424  023F                     l1155:
  1425  023F  1C76               	btfss	___bmul@multiplier,0
  1426  0240  2A42               	goto	u381
  1427  0241  2A43               	goto	u380
  1428  0242                     u381:
  1429  0242  2A47               	goto	l1159
  1430  0243                     u380:
  1431  0243                     l1157:
  1432  0243  0873               	movf	___bmul@multiplicand,w
  1433  0244  00F4               	movwf	??___bmul
  1434  0245  0874               	movf	??___bmul,w
  1435  0246  07F5               	addwf	___bmul@product,f
  1436  0247                     l1159:
  1437  0247  1003               	clrc
  1438  0248  0DF3               	rlf	___bmul@multiplicand,f
  1439  0249                     l1161:
  1440  0249  1003               	clrc
  1441  024A  0CF6               	rrf	___bmul@multiplier,f
  1442  024B  0876               	movf	___bmul@multiplier,w
  1443  024C  1D03               	btfss	3,2
  1444  024D  2A4F               	goto	u391
  1445  024E  2A50               	goto	u390
  1446  024F                     u391:
  1447  024F  2A3F               	goto	l1155
  1448  0250                     u390:
  1449  0250                     l1163:
  1450  0250  0875               	movf	___bmul@product,w
  1451  0251                     l351:
  1452  0251  0008               	return
  1453  0252                     __end_of___bmul:
  1454                           
  1455                           	psect	text7
  1456  0252                     __ptext7:	
  1457 ;; *************** function _UART_Write_Char *****************
  1458 ;; Defined at:
  1459 ;;		line 104 in file "Digital2_toolbox.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;  character       1    wreg     unsigned char 
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;  character       1    3[COMMON] unsigned char 
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		wreg
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1473 ;;      Params:         0       0       0       0       0
  1474 ;;      Locals:         1       0       0       0       0
  1475 ;;      Temps:          0       0       0       0       0
  1476 ;;      Totals:         1       0       0       0       0
  1477 ;;Total ram usage:        1 bytes
  1478 ;; Hardware stack levels used: 1
  1479 ;; Hardware stack levels required when called: 1
  1480 ;; This function calls:
  1481 ;;		Nothing
  1482 ;; This function is called by:
  1483 ;;		_main
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           
  1488                           ;psect for function _UART_Write_Char
  1489  0252                     _UART_Write_Char:
  1490                           
  1491                           ;incstack = 0
  1492                           ; Regs used in _UART_Write_Char: [wreg]
  1493                           ;UART_Write_Char@character stored from wreg
  1494  0252  00F3               	movwf	UART_Write_Char@character
  1495  0253                     l1229:
  1496                           
  1497                           ;Digital2_toolbox.c: 105:     TXREG = character;
  1498  0253  0873               	movf	UART_Write_Char@character,w
  1499  0254  1283               	bcf	3,5	;RP0=0, select bank0
  1500  0255  1303               	bcf	3,6	;RP1=0, select bank0
  1501  0256  0099               	movwf	25	;volatile
  1502  0257                     l182:	
  1503                           ;Digital2_toolbox.c: 106:     while (!TXSTAbits.TRMT);
  1504                           
  1505  0257  1683               	bsf	3,5	;RP0=1, select bank1
  1506  0258  1303               	bcf	3,6	;RP1=0, select bank1
  1507  0259  1C98               	btfss	24,1	;volatile
  1508  025A  2A5C               	goto	u471
  1509  025B  2A5D               	goto	u470
  1510  025C                     u471:
  1511  025C  2A57               	goto	l182
  1512  025D                     u470:
  1513  025D                     l185:
  1514  025D  0008               	return
  1515  025E                     __end_of_UART_Write_Char:
  1516                           
  1517                           	psect	text8
  1518  0203                     __ptext8:	
  1519 ;; *************** function _UART_Write *****************
  1520 ;; Defined at:
  1521 ;;		line 96 in file "Digital2_toolbox.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;  word            1    wreg     PTR unsigned char 
  1524 ;;		 -> STR_1(2), 
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;  word            1    4[COMMON] PTR unsigned char 
  1527 ;;		 -> STR_1(2), 
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1537 ;;      Params:         0       0       0       0       0
  1538 ;;      Locals:         1       0       0       0       0
  1539 ;;      Temps:          1       0       0       0       0
  1540 ;;      Totals:         2       0       0       0       0
  1541 ;;Total ram usage:        2 bytes
  1542 ;; Hardware stack levels used: 2
  1543 ;; Hardware stack levels required when called: 1
  1544 ;; This function calls:
  1545 ;;		Nothing
  1546 ;; This function is called by:
  1547 ;;		_main
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           
  1552                           ;psect for function _UART_Write
  1553  0203                     _UART_Write:
  1554                           
  1555                           ;incstack = 0
  1556                           ; Regs used in _UART_Write: [wreg-fsr0h+status,2+status,0+pclath]
  1557                           ;UART_Write@word stored from wreg
  1558  0203  00F4               	movwf	UART_Write@word
  1559  0204                     l1231:
  1560                           
  1561                           ;Digital2_toolbox.c: 97:     while (*word != 0){
  1562  0204  2A19               	goto	l1237
  1563  0205                     l1233:
  1564                           
  1565                           ;Digital2_toolbox.c: 98:         TXREG = (*word);
  1566  0205  0874               	movf	UART_Write@word,w
  1567  0206  0084               	movwf	4
  1568  0207  120A  118A  225E  120A  118A  	fcall	stringdir
  1569  020C  1283               	bcf	3,5	;RP0=0, select bank0
  1570  020D  1303               	bcf	3,6	;RP1=0, select bank0
  1571  020E  0099               	movwf	25	;volatile
  1572  020F                     l175:	
  1573                           ;Digital2_toolbox.c: 99:         while(!TXSTAbits.TRMT);
  1574                           
  1575  020F  1683               	bsf	3,5	;RP0=1, select bank1
  1576  0210  1303               	bcf	3,6	;RP1=0, select bank1
  1577  0211  1C98               	btfss	24,1	;volatile
  1578  0212  2A14               	goto	u481
  1579  0213  2A15               	goto	u480
  1580  0214                     u481:
  1581  0214  2A0F               	goto	l175
  1582  0215                     u480:
  1583  0215                     l1235:
  1584                           
  1585                           ;Digital2_toolbox.c: 100:         word++;
  1586  0215  3001               	movlw	1
  1587  0216  00F3               	movwf	??_UART_Write
  1588  0217  0873               	movf	??_UART_Write,w
  1589  0218  07F4               	addwf	UART_Write@word,f
  1590  0219                     l1237:
  1591                           
  1592                           ;Digital2_toolbox.c: 97:     while (*word != 0){
  1593  0219  0874               	movf	UART_Write@word,w
  1594  021A  0084               	movwf	4
  1595  021B  120A  118A  225E  120A  118A  	fcall	stringdir
  1596  0220  3A00               	xorlw	0
  1597  0221  1D03               	skipz
  1598  0222  2A24               	goto	u491
  1599  0223  2A25               	goto	u490
  1600  0224                     u491:
  1601  0224  2A05               	goto	l1233
  1602  0225                     u490:
  1603  0225                     l179:
  1604  0225  0008               	return
  1605  0226                     __end_of_UART_Write:
  1606                           
  1607                           	psect	text9
  1608  01DF                     __ptext9:	
  1609 ;; *************** function _isr *****************
  1610 ;; Defined at:
  1611 ;;		line 124 in file "main.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;		None
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;		None
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      void 
  1618 ;; Registers used:
  1619 ;;		wreg, status,2, status,0
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1625 ;;      Params:         0       0       0       0       0
  1626 ;;      Locals:         0       0       0       0       0
  1627 ;;      Temps:          3       0       0       0       0
  1628 ;;      Totals:         3       0       0       0       0
  1629 ;;Total ram usage:        3 bytes
  1630 ;; Hardware stack levels used: 1
  1631 ;; This function calls:
  1632 ;;		Nothing
  1633 ;; This function is called by:
  1634 ;;		Interrupt level 1
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           
  1639                           ;psect for function _isr
  1640  01DF                     _isr:
  1641  01DF                     i1l1263:
  1642                           
  1643                           ;main.c: 125:     if(RBIF){
  1644  01DF  1C0B               	btfss	11,0	;volatile
  1645  01E0  29E2               	goto	u54_21
  1646  01E1  29E3               	goto	u54_20
  1647  01E2                     u54_21:
  1648  01E2  29FC               	goto	i1l89
  1649  01E3                     u54_20:
  1650  01E3                     i1l1265:
  1651                           
  1652                           ;main.c: 126:         if(RB0==0 && RB1==1){
  1653  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1654  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1655  01E5  1806               	btfsc	6,0	;volatile
  1656  01E6  29E8               	goto	u55_21
  1657  01E7  29E9               	goto	u55_20
  1658  01E8                     u55_21:
  1659  01E8  29F1               	goto	i1l1271
  1660  01E9                     u55_20:
  1661  01E9                     i1l1267:
  1662  01E9  1C86               	btfss	6,1	;volatile
  1663  01EA  29EC               	goto	u56_21
  1664  01EB  29ED               	goto	u56_20
  1665  01EC                     u56_21:
  1666  01EC  29F1               	goto	i1l1271
  1667  01ED                     u56_20:
  1668  01ED                     i1l1269:
  1669                           
  1670                           ;main.c: 127:             counter++;
  1671  01ED  3001               	movlw	1
  1672  01EE  00F0               	movwf	??_isr
  1673  01EF  0870               	movf	??_isr,w
  1674  01F0  07BC               	addwf	_counter,f
  1675  01F1                     i1l1271:
  1676                           
  1677                           ;main.c: 129:         if(RB0==1 && RB1==0){
  1678  01F1  1C06               	btfss	6,0	;volatile
  1679  01F2  29F4               	goto	u57_21
  1680  01F3  29F5               	goto	u57_20
  1681  01F4                     u57_21:
  1682  01F4  29FB               	goto	i1l1277
  1683  01F5                     u57_20:
  1684  01F5                     i1l1273:
  1685  01F5  1886               	btfsc	6,1	;volatile
  1686  01F6  29F8               	goto	u58_21
  1687  01F7  29F9               	goto	u58_20
  1688  01F8                     u58_21:
  1689  01F8  29FB               	goto	i1l1277
  1690  01F9                     u58_20:
  1691  01F9                     i1l1275:
  1692                           
  1693                           ;main.c: 130:             counter--;
  1694  01F9  3001               	movlw	1
  1695  01FA  02BC               	subwf	_counter,f
  1696  01FB                     i1l1277:
  1697                           
  1698                           ;main.c: 132:         RBIF = 0;
  1699  01FB  100B               	bcf	11,0	;volatile
  1700  01FC                     i1l89:
  1701  01FC  0872               	movf	??_isr+2,w
  1702  01FD  008A               	movwf	10
  1703  01FE  0E71               	swapf	??_isr+1,w
  1704  01FF  0083               	movwf	3
  1705  0200  0EFE               	swapf	btemp,f
  1706  0201  0E7E               	swapf	btemp,w
  1707  0202  0009               	retfie
  1708  0203                     __end_of_isr:
  1709  007E                     btemp	set	126	;btemp
  1710  007E                     wtemp0	set	126
  1711                           
  1712                           	psect	intentry
  1713  0004                     __pintentry:	
  1714                           ;incstack = 0
  1715                           ; Regs used in _isr: [wreg+status,2+status,0]
  1716                           
  1717  0004                     interrupt_function:
  1718  007E                     saved_w	set	btemp
  1719  0004  00FE               	movwf	btemp
  1720  0005  0E03               	swapf	3,w
  1721  0006  00F1               	movwf	??_isr+1
  1722  0007  080A               	movf	10,w
  1723  0008  00F2               	movwf	??_isr+2
  1724  0009  120A  118A  29DF   	ljmp	_isr
  1725                           
  1726                           	psect	config
  1727                           
  1728                           ;Config register CONFIG1 @ 0x2007
  1729                           ;	Oscillator Selection bits
  1730                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1731                           ;	Watchdog Timer Enable bit
  1732                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1733                           ;	Power-up Timer Enable bit
  1734                           ;	PWRTE = OFF, PWRT disabled
  1735                           ;	RE3/MCLR pin function select bit
  1736                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1737                           ;	Code Protection bit
  1738                           ;	CP = OFF, Program memory code protection is disabled
  1739                           ;	Data Code Protection bit
  1740                           ;	CPD = OFF, Data memory code protection is disabled
  1741                           ;	Brown Out Reset Selection bits
  1742                           ;	BOREN = ON, BOR enabled
  1743                           ;	Internal External Switchover bit
  1744                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1745                           ;	Fail-Safe Clock Monitor Enabled bit
  1746                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1747                           ;	Low Voltage Programming Enable bit
  1748                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1749                           ;	In-Circuit Debugger Mode bit
  1750                           ;	DEBUG = 0x1, unprogrammed default
  1751  2007                     	org	8199
  1752  2007  3FF4               	dw	16372
  1753                           
  1754                           ;Config register CONFIG2 @ 0x2008
  1755                           ;	Brown-out Reset Selection bit
  1756                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1757                           ;	Flash Program Memory Self Write Enable bits
  1758                           ;	WRT = OFF, Write protection off
  1759  2008                     	org	8200
  1760  2008  3FFF               	dw	16383

Data Sizes:
    Strings     2
    Constant    0
    Data        0
    BSS         5
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     28      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    divide@unit	PTR unsigned char  size(1) Largest target is 1
		 -> uc(BANK0[1]), 

    divide@dec	PTR unsigned char  size(1) Largest target is 1
		 -> dc(BANK0[1]), 

    divide@cent	PTR unsigned char  size(1) Largest target is 1
		 -> cc(BANK0[1]), 

    divide@mil	PTR unsigned char  size(1) Largest target is 1
		 -> mc(BANK0[1]), 

    UART_Write@word	PTR unsigned char  size(1) Largest target is 2
		 -> STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    _divide->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_divide
    _divide->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    2274
                                             22 BANK0      6     6      0
                         _UART_Write
                    _UART_Write_Char
                             _divide
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              3 COMMON     1     1      0
                          _UART_Init
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _divide                                              15     9      6    2174
                                              7 BANK0     15     9      6
                             ___bmul
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     320
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Char                                      1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           2     2      0      78
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Write
   _UART_Write_Char
   _divide
     ___bmul
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _setup
     _UART_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      22       5       42.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2C      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Aug 13 10:31:48 2021

                       pc 0002            ___bmul@product 0075               _SSPSTATbits 0094  
                      l81 01B9                        l74 0132                        _cc 003F  
                      _dc 003E                        _mc 0040                        _uc 003D  
                      fsr 0004       ___wmul@multiplicand 0075               divide@value 0027  
                     l170 023C                       l325 01C6                       l182 0257  
                     l175 020F                       l351 0251                       l327 01DE  
                     l239 00E6                       l185 025D                       l179 0225  
                     l597 0192                       _GIE 005F                       _RB0 0030  
                     _RB1 0031                       _RE0 0048                       _RE1 0049  
                     u400 0157                       u401 0156                       u420 0169  
                     u340 01C0                       u500 00F6                       u421 0168  
                     u341 01BF                       u501 00F5                       u510 011D  
                     u415 015B                       u511 011C                       u440 017A  
                     u520 012B                       u441 0179                       u521 012A  
                     u370 01DA                       u530 0147                       u435 016A  
                     u371 01D9                       u355 01C7                       u531 0146  
                     u380 0243                       u460 018E                       u381 0242  
                     u461 018D                       u445 0176                       u365 01CE  
                     u470 025D                       u390 0250                       u471 025C  
                     u391 024F                       u455 0182                       u480 0215  
                     u481 0214                       u490 0225                       u491 0224  
                     _isr 01DF                       fsr0 0004                       indf 0000  
                    l1201 01A1                      l1131 0226                      l1211 01A8  
                    l1203 01A3                      l1141 01BC                      l1133 0234  
                    l1221 01B3                      l1213 01AD                      l1205 01A5  
                    l1231 0204                      l1143 01C0                      l1135 0237  
                    l1223 01B4                      l1215 01B0                      l1207 01A6  
                    l1233 0205                      l1161 0249                      l1153 023E  
                    l1145 01CD                      l1137 0239                      l1225 01B5  
                    l1217 01B1                      l1209 01A7                      l1241 00EC  
                    l1235 0215                      l1163 0250                      l1155 023F  
                    l1171 0157                      l1147 01D4                      l1139 01BA  
                    l1227 001A                      l1219 01B2                      l1251 011D  
                    l1243 00F0                      l1237 0219                      l1229 0253  
                    l1157 0243                      l1181 017A                      l1173 015A  
                    l1149 01DA                      l1261 0147                      l1253 0124  
                    l1245 00F6                      l1159 0247                      l1183 0180  
                    l1175 0161                      l1167 014D                      l1255 012B  
                    l1247 0112                      l1239 00E7                      l1185 0181  
                    l1177 0165                      l1169 0151                      l1193 0193  
                    l1257 013B                      l1249 0118                      l1187 0188  
                    l1179 0169                      l1195 019A                      l1259 0141  
                    l1189 018E                      l1197 019C                      l1199 01A0  
                    ?_isr 0070                      STR_1 0264                      _IOCB 0096  
                    _PEIE 005E                      _RBIE 005B                      _RBIF 0058  
                    _RCIF 0065                      i1l89 01FC                      _WPUB 0095  
                    _main 00E7                      btemp 007E                      start 000C  
       ___bmul@multiplier 0076   __end_of_UART_Write_Char 025E                     ??_isr 0070  
                   ?_main 0070                     _BRG16 0C3B                     _ANSEL 0188  
         __end_of___lwdiv 0193                     _RCREG 001A                     _SPBRG 0099  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009                     u54_20 01E3  
                   u54_21 01E2                     u55_20 01E9                     u55_21 01E8  
                   u56_20 01ED                     u56_21 01EC                     u57_20 01F5  
                   u57_21 01F4                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _SSPIE 0463  
                   _TRISE 0089                     u58_20 01F9                     _SSPIF 0063  
                   u58_21 01F8                     _TXREG 0019               ?_UART_Write 0070  
      __size_of_UART_Init 0017                     _setup 0193                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 000F  
            __end_of_main 014D                    ??_main 0036                    _ADRESH 001E  
                  _ADRESL 009E                    ?_setup 0070                    _ANSELH 0189  
                  i1l1271 01F1                    i1l1263 01DF                    i1l1273 01F5  
                  i1l1265 01E3                    i1l1275 01F9                    i1l1267 01E9  
                  i1l1277 01FB                    i1l1269 01ED                    _SPBRGH 009A  
                  _SSPADD 0093                    _TRISC3 043B                    _TRISC4 043C  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
       __end_of_UART_Init 023D                    ___bmul 023D          ?_UART_Write_Char 0070  
     __size_of_UART_Write 0023                    ___wmul 01BA                 ??___lwdiv 0079  
                  _divide 001A                    saved_w 007E   __end_of__initialization 0016  
     ___bmul@multiplicand 0073            __pcstackCOMMON 0070             __end_of_setup 01BA  
          _OPTION_REGbits 0081  UART_Write_Char@character 0073                   ??_setup 0073  
              __pbssBANK0 003C                __pmaintext 00E7                   ?___bmul 0073  
                 ?___wmul 0073                __pintentry 0004                   ?_divide 0027  
            ??_UART_Write 0073                   _SSPCON2 0091                   _SSPSTAT 0094  
              __stringtab 025E           __size_of___bmul 0015           __size_of___wmul 0025  
      __end_of_UART_Write 0226                   ___lwdiv 014D           __size_of_divide 00CD  
                 __ptext1 0193                   __ptext2 0226                   __ptext3 001A  
                 __ptext4 01BA                   __ptext5 014D                   __ptext6 023D  
                 __ptext7 0252                   __ptext8 0203                   __ptext9 01DF  
                 _counter 003C              __size_of_isr 0024      end_of_initialization 0016  
               _RCSTAbits 0018                 _UART_Init 0226            UART_Write@word 0074  
               _TRISCbits 0087                divide@cent 002A                divide@unit 002C  
               _TXSTAbits 0098            __end_of___bmul 0252            __end_of___wmul 01DF  
              ?_UART_Init 0070            __end_of_divide 00E7  __size_of_UART_Write_Char 000C  
     start_initialization 000F               __end_of_isr 0203              _counter_comp 0041  
                ??___bmul 0074                  ??___wmul 0077                  ??_divide 002D  
               ___latbits 0002             __pcstackBANK0 0020                 __pnvBANK0 0041  
        ___lwdiv@dividend 0022                  ?___lwdiv 0020               ??_UART_Init 0073  
               __pstrings 025E          ___lwdiv@quotient 0024         ??_UART_Write_Char 0073  
          __size_of_setup 0027         interrupt_function 0004            ___wmul@product 0077  
               divide@dec 002B               __stringbase 0263                 divide@mil 0029  
       ___wmul@multiplier 0073          __size_of___lwdiv 0046        __end_of__stringtab 0264  
         ___lwdiv@divisor 0020           ___lwdiv@counter 0026             __size_of_main 0066  
                intlevel1 0000                 stringcode 025E           _UART_Write_Char 0252  
                stringdir 025E                  stringtab 025E                _UART_Write 0203  
             _SSPCON2bits 0091  
