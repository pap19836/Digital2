

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jul 30 10:34:33 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0013                     _SSPBUF	set	19
   288  0014                     _SSPCON	set	20
   289  0019                     _TXREG	set	25
   290  0018                     _RCSTAbits	set	24
   291  001E                     _ADRESH	set	30
   292  0009                     _PORTE	set	9
   293  0007                     _PORTC	set	7
   294  0005                     _PORTA	set	5
   295  001F                     _ADCON0bits	set	31
   296  0008                     _PORTD	set	8
   297  0006                     _PORTB	set	6
   298  0049                     _RE1	set	73
   299  0066                     _ADIF	set	102
   300  00F8                     _ADON	set	248
   301  005E                     _PEIE	set	94
   302  005F                     _GIE	set	95
   303  0048                     _RE0	set	72
   304  0094                     _SSPSTATbits	set	148
   305  0094                     _SSPSTAT	set	148
   306  0087                     _TRISCbits	set	135
   307  0099                     _SPBRG	set	153
   308  009A                     _SPBRGH	set	154
   309  0098                     _TXSTAbits	set	152
   310  009E                     _ADRESL	set	158
   311  0089                     _TRISE	set	137
   312  0088                     _TRISD	set	136
   313  0087                     _TRISC	set	135
   314  0086                     _TRISB	set	134
   315  0085                     _TRISA	set	133
   316  043B                     _TRISC3	set	1083
   317  043D                     _TRISC5	set	1085
   318  0466                     _ADIE	set	1126
   319  0189                     _ANSELH	set	393
   320  0188                     _ANSEL	set	392
   321  0C3B                     _BRG16	set	3131
   322                           
   323                           	psect	cinit
   324  000F                     start_initialization:	
   325                           ; #config settings
   326                           
   327  000F                     __initialization:
   328                           
   329                           ; Clear objects allocated to COMMON
   330  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   331  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   332  0011                     end_of_initialization:	
   333                           ;End of C runtime variable initialization code
   334                           
   335  0011                     __end_of__initialization:
   336  0011  0183               	clrf	3
   337  0012  120A  118A  2815   	ljmp	_main	;jump to C main() function
   338                           
   339                           	psect	bssCOMMON
   340  0077                     __pbssCOMMON:
   341  0077                     _analog1:
   342  0077                     	ds	1
   343  0078                     _analog0:
   344  0078                     	ds	1
   345                           
   346                           	psect	cstackCOMMON
   347  0070                     __pcstackCOMMON:
   348  0070                     ?_setup:
   349  0070                     ?_spiWrite:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_spiRead:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?_UART_Init:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_main:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ?_isr:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ??_isr:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_spiReceiveWait:	
   368                           ; 1 bytes @ 0x0
   369                           
   370                           
   371                           ; 1 bytes @ 0x0
   372  0070                     	ds	2
   373  0072                     ??_spiWrite:
   374  0072                     ??_spiRead:	
   375                           ; 1 bytes @ 0x2
   376                           
   377  0072                     ??_UART_Init:	
   378                           ; 1 bytes @ 0x2
   379                           
   380  0072                     ?_spiInit:	
   381                           ; 1 bytes @ 0x2
   382                           
   383  0072                     ??_spiReceiveWait:	
   384                           ; 1 bytes @ 0x2
   385                           
   386  0072                     spiInit@sDataSample:	
   387                           ; 1 bytes @ 0x2
   388                           
   389  0072                     spiWrite@dat:	
   390                           ; 1 bytes @ 0x2
   391                           
   392                           
   393                           ; 1 bytes @ 0x2
   394  0072                     	ds	1
   395  0073                     spiInit@sClockIdle:
   396                           
   397                           ; 1 bytes @ 0x3
   398  0073                     	ds	1
   399  0074                     spiInit@sTransmitEdge:
   400                           
   401                           ; 1 bytes @ 0x4
   402  0074                     	ds	1
   403  0075                     ??_spiInit:
   404  0075                     spiInit@sType:	
   405                           ; 1 bytes @ 0x5
   406                           
   407                           
   408                           ; 1 bytes @ 0x5
   409  0075                     	ds	1
   410  0076                     ??_setup:
   411  0076                     ??_main:	
   412                           ; 1 bytes @ 0x6
   413                           
   414                           
   415                           ; 1 bytes @ 0x6
   416  0076                     	ds	1
   417                           
   418                           	psect	maintext
   419  0015                     __pmaintext:	
   420 ;;
   421 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   422 ;;
   423 ;; *************** function _main *****************
   424 ;; Defined at:
   425 ;;		line 58 in file "Main.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;		None
   428 ;; Auto vars:     Size  Location     Type
   429 ;;		None
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   434 ;; Tracked objects:
   435 ;;		On entry : B00/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   439 ;;      Params:         0       0       0       0       0
   440 ;;      Locals:         0       0       0       0       0
   441 ;;      Temps:          1       0       0       0       0
   442 ;;      Totals:         1       0       0       0       0
   443 ;;Total ram usage:        1 bytes
   444 ;; Hardware stack levels required when called: 3
   445 ;; This function calls:
   446 ;;		_setup
   447 ;;		_spiRead
   448 ;;		_spiWrite
   449 ;; This function is called by:
   450 ;;		Startup code after reset
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           
   455                           ;psect for function _main
   456  0015                     _main:
   457  0015                     l981:	
   458                           ;incstack = 0
   459                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   460                           
   461                           
   462                           ;Main.c: 59:     setup();
   463  0015  120A  118A  2050  120A  118A  	fcall	_setup
   464  001A                     l983:
   465                           
   466                           ;Main.c: 62:         _delay((unsigned long)((1)*(4000000/4000.0)));
   467  001A  30C7               	movlw	199
   468  001B  00F6               	movwf	??_main
   469  001C                     u97:
   470  001C  281D               	nop2
   471  001D  0BF6               	decfsz	??_main,f
   472  001E  281C               	goto	u97
   473  001F  2820               	nop2
   474  0020  2821               	nop2
   475  0021                     l985:
   476                           
   477                           ;Main.c: 63:         spiWrite(0b11111111);
   478  0021  30FF               	movlw	255
   479  0022  120A  118A  20C4  120A  118A  	fcall	_spiWrite
   480                           
   481                           ;Main.c: 64:         switch(RE0){
   482  0027  283A               	goto	l993
   483  0028                     l987:
   484                           
   485                           ;Main.c: 66:                 analog0 = spiRead();
   486  0028  120A  118A  20AD  120A  118A  	fcall	_spiRead
   487  002D  00F6               	movwf	??_main
   488  002E  0876               	movf	??_main,w
   489  002F  00F8               	movwf	_analog0
   490                           
   491                           ;Main.c: 67:                 break;
   492  0030  2846               	goto	l995
   493  0031                     l989:
   494                           
   495                           ;Main.c: 69:                 analog1 = spiRead();
   496  0031  120A  118A  20AD  120A  118A  	fcall	_spiRead
   497  0036  00F6               	movwf	??_main
   498  0037  0876               	movf	??_main,w
   499  0038  00F7               	movwf	_analog1
   500                           
   501                           ;Main.c: 70:                 break;
   502  0039  2846               	goto	l995
   503  003A                     l993:
   504  003A  3000               	movlw	0
   505  003B  1283               	bcf	3,5	;RP0=0, select bank0
   506  003C  1303               	bcf	3,6	;RP1=0, select bank0
   507  003D  1809               	btfsc	9,0	;volatile
   508  003E  3001               	movlw	1
   509                           
   510                           ; Switch size 1, requested type "simple"
   511                           ; Number of cases is 2, Range of values is 0 to 1
   512                           ; switch strategies available:
   513                           ; Name         Instructions Cycles
   514                           ; simple_byte            7     4 (average)
   515                           ; direct_byte           14     8 (fixed)
   516                           ; jumptable            260     6 (fixed)
   517                           ;	Chosen strategy is simple_byte
   518  003F  3A00               	xorlw	0	; case 0
   519  0040  1903               	skipnz
   520  0041  2828               	goto	l987
   521  0042  3A01               	xorlw	1	; case 1
   522  0043  1903               	skipnz
   523  0044  2831               	goto	l989
   524  0045  2846               	goto	l995
   525  0046                     l995:
   526                           
   527                           ;Main.c: 72:         PORTB = analog0;
   528  0046  0878               	movf	_analog0,w
   529  0047  1283               	bcf	3,5	;RP0=0, select bank0
   530  0048  1303               	bcf	3,6	;RP1=0, select bank0
   531  0049  0086               	movwf	6	;volatile
   532                           
   533                           ;Main.c: 73:         PORTD = analog1;
   534  004A  0877               	movf	_analog1,w
   535  004B  0088               	movwf	8	;volatile
   536  004C  281A               	goto	l983
   537  004D  120A  118A  280C   	ljmp	start
   538  0050                     __end_of_main:
   539                           
   540                           	psect	text1
   541  00C4                     __ptext1:	
   542 ;; *************** function _spiWrite *****************
   543 ;; Defined at:
   544 ;;		line 134 in file "Digital2_toolbox.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;  dat             1    wreg     unsigned char 
   547 ;; Auto vars:     Size  Location     Type
   548 ;;  dat             1    2[COMMON] unsigned char 
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      void 
   551 ;; Registers used:
   552 ;;		wreg
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   558 ;;      Params:         0       0       0       0       0
   559 ;;      Locals:         1       0       0       0       0
   560 ;;      Temps:          0       0       0       0       0
   561 ;;      Totals:         1       0       0       0       0
   562 ;;Total ram usage:        1 bytes
   563 ;; Hardware stack levels used: 1
   564 ;; Hardware stack levels required when called: 1
   565 ;; This function calls:
   566 ;;		Nothing
   567 ;; This function is called by:
   568 ;;		_main
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           
   573                           ;psect for function _spiWrite
   574  00C4                     _spiWrite:
   575                           
   576                           ;incstack = 0
   577                           ; Regs used in _spiWrite: [wreg]
   578                           ;spiWrite@dat stored from wreg
   579  00C4  00F2               	movwf	spiWrite@dat
   580  00C5                     l827:
   581                           
   582                           ;Digital2_toolbox.c: 134: void spiWrite(char dat);Digital2_toolbox.c: 135: {;Digital2_to
      +                          olbox.c: 136:     SSPBUF = dat;
   583  00C5  0872               	movf	spiWrite@dat,w
   584  00C6  1283               	bcf	3,5	;RP0=0, select bank0
   585  00C7  1303               	bcf	3,6	;RP1=0, select bank0
   586  00C8  0093               	movwf	19	;volatile
   587  00C9                     l168:
   588  00C9  0008               	return
   589  00CA                     __end_of_spiWrite:
   590                           
   591                           	psect	text2
   592  00AD                     __ptext2:	
   593 ;; *************** function _spiRead *****************
   594 ;; Defined at:
   595 ;;		line 147 in file "Digital2_toolbox.c"
   596 ;; Parameters:    Size  Location     Type
   597 ;;		None
   598 ;; Auto vars:     Size  Location     Type
   599 ;;		None
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      unsigned char 
   602 ;; Registers used:
   603 ;;		wreg, status,2, status,0, pclath, cstack
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   609 ;;      Params:         0       0       0       0       0
   610 ;;      Locals:         0       0       0       0       0
   611 ;;      Temps:          0       0       0       0       0
   612 ;;      Totals:         0       0       0       0       0
   613 ;;Total ram usage:        0 bytes
   614 ;; Hardware stack levels used: 1
   615 ;; Hardware stack levels required when called: 2
   616 ;; This function calls:
   617 ;;		_spiReceiveWait
   618 ;; This function is called by:
   619 ;;		_main
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           
   624                           ;psect for function _spiRead
   625  00AD                     _spiRead:
   626  00AD                     l829:	
   627                           ;incstack = 0
   628                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   629                           
   630                           
   631                           ;Digital2_toolbox.c: 149:     spiReceiveWait();
   632  00AD  120A  118A  20B6  120A  118A  	fcall	_spiReceiveWait
   633  00B2                     l831:
   634                           
   635                           ;Digital2_toolbox.c: 150:     return(SSPBUF);
   636  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   637  00B3  1303               	bcf	3,6	;RP1=0, select bank0
   638  00B4  0813               	movf	19,w	;volatile
   639  00B5                     l176:
   640  00B5  0008               	return
   641  00B6                     __end_of_spiRead:
   642                           
   643                           	psect	text3
   644  00B6                     __ptext3:	
   645 ;; *************** function _spiReceiveWait *****************
   646 ;; Defined at:
   647 ;;		line 129 in file "Digital2_toolbox.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;		None
   650 ;; Auto vars:     Size  Location     Type
   651 ;;		None
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      void 
   654 ;; Registers used:
   655 ;;		None
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   661 ;;      Params:         0       0       0       0       0
   662 ;;      Locals:         0       0       0       0       0
   663 ;;      Temps:          0       0       0       0       0
   664 ;;      Totals:         0       0       0       0       0
   665 ;;Total ram usage:        0 bytes
   666 ;; Hardware stack levels used: 1
   667 ;; Hardware stack levels required when called: 1
   668 ;; This function calls:
   669 ;;		Nothing
   670 ;; This function is called by:
   671 ;;		_spiRead
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           
   676                           ;psect for function _spiReceiveWait
   677  00B6                     _spiReceiveWait:
   678  00B6                     l791:	
   679                           ;incstack = 0
   680                           ; Regs used in _spiReceiveWait: []
   681                           
   682  00B6                     l162:	
   683                           ;Digital2_toolbox.c: 131:     while ( !SSPSTATbits.BF );
   684                           
   685  00B6  1683               	bsf	3,5	;RP0=1, select bank1
   686  00B7  1303               	bcf	3,6	;RP1=0, select bank1
   687  00B8  1C14               	btfss	20,0	;volatile
   688  00B9  28BB               	goto	u21
   689  00BA  28BC               	goto	u20
   690  00BB                     u21:
   691  00BB  28B6               	goto	l162
   692  00BC                     u20:
   693  00BC                     l165:
   694  00BC  0008               	return
   695  00BD                     __end_of_spiReceiveWait:
   696                           
   697                           	psect	text4
   698  0050                     __ptext4:	
   699 ;; *************** function _setup *****************
   700 ;; Defined at:
   701 ;;		line 80 in file "Main.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;		None
   704 ;; Auto vars:     Size  Location     Type
   705 ;;		None
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, status,2, status,0, pclath, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   715 ;;      Params:         0       0       0       0       0
   716 ;;      Locals:         0       0       0       0       0
   717 ;;      Temps:          0       0       0       0       0
   718 ;;      Totals:         0       0       0       0       0
   719 ;;Total ram usage:        0 bytes
   720 ;; Hardware stack levels used: 1
   721 ;; Hardware stack levels required when called: 2
   722 ;; This function calls:
   723 ;;		_UART_Init
   724 ;;		_spiInit
   725 ;; This function is called by:
   726 ;;		_main
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           
   731                           ;psect for function _setup
   732  0050                     _setup:
   733  0050                     l947:	
   734                           ;incstack = 0
   735                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   736                           
   737                           
   738                           ;Main.c: 82:     ANSEL = 0;
   739  0050  1683               	bsf	3,5	;RP0=1, select bank3
   740  0051  1703               	bsf	3,6	;RP1=1, select bank3
   741  0052  0188               	clrf	8	;volatile
   742                           
   743                           ;Main.c: 83:     ANSELH = 0;
   744  0053  0189               	clrf	9	;volatile
   745                           
   746                           ;Main.c: 84:     TRISA = 0;
   747  0054  1683               	bsf	3,5	;RP0=1, select bank1
   748  0055  1303               	bcf	3,6	;RP1=0, select bank1
   749  0056  0185               	clrf	5	;volatile
   750                           
   751                           ;Main.c: 85:     TRISB = 0;
   752  0057  0186               	clrf	6	;volatile
   753  0058                     l949:
   754                           
   755                           ;Main.c: 86:     TRISC = 0b10010000;
   756  0058  3090               	movlw	144
   757  0059  0087               	movwf	7	;volatile
   758  005A                     l951:
   759                           
   760                           ;Main.c: 87:     TRISD = 0;
   761  005A  0188               	clrf	8	;volatile
   762                           
   763                           ;Main.c: 88:     TRISE = 0b0001;
   764  005B  3001               	movlw	1
   765  005C  0089               	movwf	9	;volatile
   766  005D                     l953:
   767                           
   768                           ;Main.c: 91:     GIE = 1;
   769  005D  178B               	bsf	11,7	;volatile
   770  005E                     l955:
   771                           
   772                           ;Main.c: 92:     PEIE = 1;
   773  005E  170B               	bsf	11,6	;volatile
   774  005F                     l957:
   775                           
   776                           ;Main.c: 93:     ADIE = 1;
   777  005F  170C               	bsf	12,6	;volatile
   778  0060                     l959:
   779                           
   780                           ;Main.c: 96:     ADCON0bits.ADCS = 0b01;
   781  0060  1283               	bcf	3,5	;RP0=0, select bank0
   782  0061  1303               	bcf	3,6	;RP1=0, select bank0
   783  0062  081F               	movf	31,w	;volatile
   784  0063  393F               	andlw	-193
   785  0064  3840               	iorlw	64
   786  0065  009F               	movwf	31	;volatile
   787  0066                     l961:
   788                           
   789                           ;Main.c: 97:     ADCON0bits.CHS = 0b0000;
   790  0066  30C3               	movlw	-61
   791  0067  059F               	andwf	31,f	;volatile
   792  0068                     l963:
   793                           
   794                           ;Main.c: 98:     ADON = 1;
   795  0068  141F               	bsf	31,0	;volatile
   796  0069                     l965:
   797                           
   798                           ;Main.c: 99:     ADIF = 0;
   799  0069  130C               	bcf	12,6	;volatile
   800  006A                     l967:
   801                           
   802                           ;Main.c: 101:     UART_Init();
   803  006A  120A  118A  2080  120A  118A  	fcall	_UART_Init
   804  006F                     l969:
   805                           
   806                           ;Main.c: 104:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
   807  006F  01F2               	clrf	spiInit@sDataSample
   808  0070  01F3               	clrf	spiInit@sClockIdle
   809  0071  01F4               	clrf	spiInit@sTransmitEdge
   810  0072  3020               	movlw	32
   811  0073  120A  118A  2097  120A  118A  	fcall	_spiInit
   812  0078                     l971:
   813                           
   814                           ;Main.c: 106:     PORTA = 0;
   815  0078  1283               	bcf	3,5	;RP0=0, select bank0
   816  0079  1303               	bcf	3,6	;RP1=0, select bank0
   817  007A  0185               	clrf	5	;volatile
   818  007B                     l973:
   819                           
   820                           ;Main.c: 107:     PORTB = 0;
   821  007B  0186               	clrf	6	;volatile
   822  007C                     l975:
   823                           
   824                           ;Main.c: 108:     PORTC = 0;
   825  007C  0187               	clrf	7	;volatile
   826  007D                     l977:
   827                           
   828                           ;Main.c: 109:     PORTD = 0;
   829  007D  0188               	clrf	8	;volatile
   830  007E                     l979:
   831                           
   832                           ;Main.c: 110:     PORTE = 0;
   833  007E  0189               	clrf	9	;volatile
   834  007F                     l69:
   835  007F  0008               	return
   836  0080                     __end_of_setup:
   837                           
   838                           	psect	text5
   839  0097                     __ptext5:	
   840 ;; *************** function _spiInit *****************
   841 ;; Defined at:
   842 ;;		line 112 in file "Digital2_toolbox.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;  sType           1    wreg     enum E1308
   845 ;;  sDataSample     1    2[COMMON] enum E1316
   846 ;;  sClockIdle      1    3[COMMON] enum E1320
   847 ;;  sTransmitEdg    1    4[COMMON] enum E1324
   848 ;; Auto vars:     Size  Location     Type
   849 ;;  sType           1    5[COMMON] enum E1308
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, status,2, status,0
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   859 ;;      Params:         3       0       0       0       0
   860 ;;      Locals:         1       0       0       0       0
   861 ;;      Temps:          0       0       0       0       0
   862 ;;      Totals:         4       0       0       0       0
   863 ;;Total ram usage:        4 bytes
   864 ;; Hardware stack levels used: 1
   865 ;; Hardware stack levels required when called: 1
   866 ;; This function calls:
   867 ;;		Nothing
   868 ;; This function is called by:
   869 ;;		_setup
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           
   874                           ;psect for function _spiInit
   875  0097                     _spiInit:
   876                           
   877                           ;incstack = 0
   878                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   879                           ;spiInit@sType stored from wreg
   880  0097  00F5               	movwf	spiInit@sType
   881  0098                     l937:
   882                           
   883                           ;Digital2_toolbox.c: 112: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_
      +                          Clock_Idle sClockIdle, Spi_Transmit_Edge sTransmitEdge);Digital2_toolbox.c: 113: {;Digit
      +                          al2_toolbox.c: 114:     TRISC5 = 0;
   884  0098  1683               	bsf	3,5	;RP0=1, select bank1
   885  0099  1303               	bcf	3,6	;RP1=0, select bank1
   886  009A  1287               	bcf	7,5	;volatile
   887                           
   888                           ;Digital2_toolbox.c: 115:     if(sType & 0b00000100)
   889  009B  1D75               	btfss	spiInit@sType,2
   890  009C  289E               	goto	u81
   891  009D  289F               	goto	u80
   892  009E                     u81:
   893  009E  28A3               	goto	l943
   894  009F                     u80:
   895  009F                     l939:
   896                           
   897                           ;Digital2_toolbox.c: 116:     {;Digital2_toolbox.c: 117:         SSPSTAT = sTransmitEdge
      +                          ;
   898  009F  0874               	movf	spiInit@sTransmitEdge,w
   899  00A0  0094               	movwf	20	;volatile
   900  00A1                     l941:
   901                           
   902                           ;Digital2_toolbox.c: 118:         TRISC3 = 1;
   903  00A1  1587               	bsf	7,3	;volatile
   904                           
   905                           ;Digital2_toolbox.c: 119:     }
   906  00A2  28A7               	goto	l158
   907  00A3                     l943:
   908                           
   909                           ;Digital2_toolbox.c: 121:     {;Digital2_toolbox.c: 122:         SSPSTAT = sDataSample |
      +                           sTransmitEdge;
   910  00A3  0872               	movf	spiInit@sDataSample,w
   911  00A4  0474               	iorwf	spiInit@sTransmitEdge,w
   912  00A5  0094               	movwf	20	;volatile
   913  00A6                     l945:
   914                           
   915                           ;Digital2_toolbox.c: 123:         TRISC3 = 0;
   916  00A6  1187               	bcf	7,3	;volatile
   917  00A7                     l158:	
   918                           ;Digital2_toolbox.c: 124:     }
   919                           
   920                           
   921                           ;Digital2_toolbox.c: 126:     SSPCON = sType | sClockIdle;
   922  00A7  0875               	movf	spiInit@sType,w
   923  00A8  0473               	iorwf	spiInit@sClockIdle,w
   924  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   925  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   926  00AB  0094               	movwf	20	;volatile
   927  00AC                     l159:
   928  00AC  0008               	return
   929  00AD                     __end_of_spiInit:
   930                           
   931                           	psect	text6
   932  0080                     __ptext6:	
   933 ;; *************** function _UART_Init *****************
   934 ;; Defined at:
   935 ;;		line 80 in file "Digital2_toolbox.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;		None
   938 ;; Auto vars:     Size  Location     Type
   939 ;;		None
   940 ;; Return value:  Size  Location     Type
   941 ;;                  1    wreg      void 
   942 ;; Registers used:
   943 ;;		wreg, status,2
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   949 ;;      Params:         0       0       0       0       0
   950 ;;      Locals:         0       0       0       0       0
   951 ;;      Temps:          0       0       0       0       0
   952 ;;      Totals:         0       0       0       0       0
   953 ;;Total ram usage:        0 bytes
   954 ;; Hardware stack levels used: 1
   955 ;; Hardware stack levels required when called: 1
   956 ;; This function calls:
   957 ;;		Nothing
   958 ;; This function is called by:
   959 ;;		_setup
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           
   964                           ;psect for function _UART_Init
   965  0080                     _UART_Init:
   966  0080                     l771:	
   967                           ;incstack = 0
   968                           ; Regs used in _UART_Init: [wreg+status,2]
   969                           
   970                           
   971                           ;Digital2_toolbox.c: 82:     TXSTAbits.TXEN = 1;
   972  0080  1683               	bsf	3,5	;RP0=1, select bank1
   973  0081  1303               	bcf	3,6	;RP1=0, select bank1
   974  0082  1698               	bsf	24,5	;volatile
   975                           
   976                           ;Digital2_toolbox.c: 83:     TXSTAbits.SYNC = 0;
   977  0083  1218               	bcf	24,4	;volatile
   978                           
   979                           ;Digital2_toolbox.c: 84:     RCSTAbits.SPEN = 1;
   980  0084  1283               	bcf	3,5	;RP0=0, select bank0
   981  0085  1303               	bcf	3,6	;RP1=0, select bank0
   982  0086  1798               	bsf	24,7	;volatile
   983                           
   984                           ;Digital2_toolbox.c: 85:     TXSTAbits.BRGH = 1;
   985  0087  1683               	bsf	3,5	;RP0=1, select bank1
   986  0088  1303               	bcf	3,6	;RP1=0, select bank1
   987  0089  1518               	bsf	24,2	;volatile
   988                           
   989                           ;Digital2_toolbox.c: 86:     BRG16 = 0;
   990  008A  1683               	bsf	3,5	;RP0=1, select bank3
   991  008B  1703               	bsf	3,6	;RP1=1, select bank3
   992  008C  1187               	bcf	7,3	;volatile
   993  008D                     l773:
   994                           
   995                           ;Digital2_toolbox.c: 87:     SPBRGH = 0;
   996  008D  1683               	bsf	3,5	;RP0=1, select bank1
   997  008E  1303               	bcf	3,6	;RP1=0, select bank1
   998  008F  019A               	clrf	26	;volatile
   999  0090                     l775:
  1000                           
  1001                           ;Digital2_toolbox.c: 88:     SPBRG = 25;
  1002  0090  3019               	movlw	25
  1003  0091  0099               	movwf	25	;volatile
  1004  0092                     l777:
  1005                           
  1006                           ;Digital2_toolbox.c: 91:     TRISCbits.TRISC7 = 1;
  1007  0092  1787               	bsf	7,7	;volatile
  1008  0093                     l779:
  1009                           
  1010                           ;Digital2_toolbox.c: 92:     RCSTAbits.CREN = 1;
  1011  0093  1283               	bcf	3,5	;RP0=0, select bank0
  1012  0094  1303               	bcf	3,6	;RP1=0, select bank0
  1013  0095  1618               	bsf	24,4	;volatile
  1014  0096                     l139:
  1015  0096  0008               	return
  1016  0097                     __end_of_UART_Init:
  1017                           
  1018                           	psect	text7
  1019  00BD                     __ptext7:	
  1020 ;; *************** function _isr *****************
  1021 ;; Defined at:
  1022 ;;		line 121 in file "Main.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;		None
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;		None
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  1    wreg      void 
  1029 ;; Registers used:
  1030 ;;		None
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1036 ;;      Params:         0       0       0       0       0
  1037 ;;      Locals:         0       0       0       0       0
  1038 ;;      Temps:          2       0       0       0       0
  1039 ;;      Totals:         2       0       0       0       0
  1040 ;;Total ram usage:        2 bytes
  1041 ;; Hardware stack levels used: 1
  1042 ;; This function calls:
  1043 ;;		Nothing
  1044 ;; This function is called by:
  1045 ;;		Interrupt level 1
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           
  1050                           ;psect for function _isr
  1051  00BD                     _isr:
  1052  00BD                     i1l74:
  1053  00BD  0871               	movf	??_isr+1,w
  1054  00BE  008A               	movwf	10
  1055  00BF  0E70               	swapf	??_isr,w
  1056  00C0  0083               	movwf	3
  1057  00C1  0EFE               	swapf	btemp,f
  1058  00C2  0E7E               	swapf	btemp,w
  1059  00C3  0009               	retfie
  1060  00C4                     __end_of_isr:
  1061  007E                     btemp	set	126	;btemp
  1062  007E                     wtemp0	set	126
  1063                           
  1064                           	psect	intentry
  1065  0004                     __pintentry:	
  1066                           ;incstack = 0
  1067                           ; Regs used in _isr: []
  1068                           
  1069  0004                     interrupt_function:
  1070  007E                     saved_w	set	btemp
  1071  0004  00FE               	movwf	btemp
  1072  0005  0E03               	swapf	3,w
  1073  0006  00F0               	movwf	??_isr
  1074  0007  080A               	movf	10,w
  1075  0008  00F1               	movwf	??_isr+1
  1076  0009  120A  118A  28BD   	ljmp	_isr
  1077                           
  1078                           	psect	config
  1079                           
  1080                           ;Config register CONFIG1 @ 0x2007
  1081                           ;	Oscillator Selection bits
  1082                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1083                           ;	Watchdog Timer Enable bit
  1084                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1085                           ;	Power-up Timer Enable bit
  1086                           ;	PWRTE = OFF, PWRT disabled
  1087                           ;	RE3/MCLR pin function select bit
  1088                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1089                           ;	Code Protection bit
  1090                           ;	CP = OFF, Program memory code protection is disabled
  1091                           ;	Data Code Protection bit
  1092                           ;	CPD = OFF, Data memory code protection is disabled
  1093                           ;	Brown Out Reset Selection bits
  1094                           ;	BOREN = ON, BOR enabled
  1095                           ;	Internal External Switchover bit
  1096                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1097                           ;	Fail-Safe Clock Monitor Enabled bit
  1098                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1099                           ;	Low Voltage Programming Enable bit
  1100                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1101                           ;	In-Circuit Debugger Mode bit
  1102                           ;	DEBUG = 0x1, unprogrammed default
  1103  2007                     	org	8199
  1104  2007  3FF4               	dw	16372
  1105                           
  1106                           ;Config register CONFIG2 @ 0x2008
  1107                           ;	Brown-out Reset Selection bit
  1108                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1109                           ;	Flash Program Memory Self Write Enable bits
  1110                           ;	WRT = OFF, Write protection off
  1111  2008                     	org	8200
  1112  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     375
                                              6 COMMON     1     1      0
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                          _UART_Init
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _UART_Init
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jul 30 10:34:33 2021

            _SSPSTATbits 0094                       l69 007F                       u20 00BC  
                     u21 00BB                       u80 009F                       u81 009E  
                     u97 001C                      l162 00B6                      l139 0096  
                    l165 00BC                      l158 00A7                      l159 00AC  
                    l176 00B5                      l168 00C9                      l831 00B2  
                    l771 0080                      l827 00C5                      l773 008D  
                    l941 00A1                      l829 00AD                      l775 0090  
                    l943 00A3                      l951 005A                      l791 00B6  
                    l777 0092                      l945 00A6                      l937 0098  
                    l961 0066                      l953 005D                      l779 0093  
                    l939 009F                      l971 0078                      l963 0068  
                    l955 005E                      l947 0050                      l973 007B  
                    l965 0069                      l957 005F                      l949 0058  
                    l981 0015                      l975 007C                      l967 006A  
                    l959 0060                      l983 001A                      l977 007D  
                    l969 006F                      l993 003A                      l985 0021  
                    l979 007E                      l995 0046                      l987 0028  
                    _GIE 005F                      l989 0031                      _RE0 0048  
                    _RE1 0049                      _isr 00BD                     _ADIE 0466  
                   _ADIF 0066                     ?_isr 0070                     _ADON 00F8  
                   _PEIE 005E                     i1l74 00BD                     _main 0015  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070                    _BRG16 0C3B                    _ANSEL 0188  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _TXREG 0019  
     __size_of_UART_Init 0017                    _setup 0050                    pclath 000A  
        __end_of_spiInit 00AD          __end_of_spiRead 00B6                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0050  
                 ??_main 0076                   _ADRESH 001E                   _ADRESL 009E  
                 ?_setup 0070                   _ANSELH 0189                   _SPBRGH 009A  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013        __end_of_UART_Init 0097                   saved_w 007E  
       __end_of_spiWrite 00CA                ??_spiInit 0075                ??_spiRead 0072  
__end_of__initialization 0011           __pcstackCOMMON 0070            __end_of_setup 0080  
                ??_setup 0076               __pmaintext 0015               __pintentry 0004  
__size_of_spiReceiveWait 0007                  _SSPSTAT 0094                ?_spiWrite 0070  
                _analog0 0078                  _analog1 0077                  __ptext1 00C4  
                __ptext2 00AD                  __ptext3 00B6                  __ptext4 0050  
                __ptext5 0097                  __ptext6 0080                  __ptext7 00BD  
           __size_of_isr 0007                  _spiInit 0097                  _spiRead 00AD  
   end_of_initialization 0011                _RCSTAbits 0018               ??_spiWrite 0072  
              _UART_Init 0080                _TRISCbits 0087              spiWrite@dat 0072  
              _TXSTAbits 0098           _spiReceiveWait 00B6               ?_UART_Init 0070  
    start_initialization 000F              __end_of_isr 00C4   __end_of_spiReceiveWait 00BD  
            __pbssCOMMON 0077                ___latbits 0002          ?_spiReceiveWait 0070  
            ??_UART_Init 0072        __size_of_spiWrite 0006                 ?_spiInit 0072  
               ?_spiRead 0070           __size_of_setup 0030     spiInit@sTransmitEdge 0074  
      interrupt_function 0004       spiInit@sDataSample 0072               _ADCON0bits 001F  
       __size_of_spiInit 0016         __size_of_spiRead 0009            __size_of_main 003B  
               _spiWrite 00C4             spiInit@sType 0075        spiInit@sClockIdle 0073  
               intlevel1 0000         ??_spiReceiveWait 0072  
