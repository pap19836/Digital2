

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jul 30 10:34:38 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0013                     _SSPBUF	set	19
   288  0014                     _SSPCON	set	20
   289  0019                     _TXREG	set	25
   290  0018                     _RCSTAbits	set	24
   291  001E                     _ADRESH	set	30
   292  0009                     _PORTE	set	9
   293  0008                     _PORTD	set	8
   294  0007                     _PORTC	set	7
   295  0006                     _PORTB	set	6
   296  0005                     _PORTA	set	5
   297  001F                     _ADCON0bits	set	31
   298  0049                     _RE1	set	73
   299  0048                     _RE0	set	72
   300  0063                     _SSPIF	set	99
   301  0066                     _ADIF	set	102
   302  00F8                     _ADON	set	248
   303  005E                     _PEIE	set	94
   304  005F                     _GIE	set	95
   305  00F9                     _GO	set	249
   306  0094                     _SSPSTATbits	set	148
   307  0094                     _SSPSTAT	set	148
   308  0087                     _TRISCbits	set	135
   309  0099                     _SPBRG	set	153
   310  009A                     _SPBRGH	set	154
   311  0098                     _TXSTAbits	set	152
   312  009E                     _ADRESL	set	158
   313  0089                     _TRISE	set	137
   314  0088                     _TRISD	set	136
   315  0087                     _TRISC	set	135
   316  0086                     _TRISB	set	134
   317  0085                     _TRISA	set	133
   318  043B                     _TRISC3	set	1083
   319  043D                     _TRISC5	set	1085
   320  0463                     _SSPIE	set	1123
   321  0466                     _ADIE	set	1126
   322  0189                     _ANSELH	set	393
   323  0188                     _ANSEL	set	392
   324  0C3B                     _BRG16	set	3131
   325                           
   326                           	psect	cinit
   327  000F                     start_initialization:	
   328                           ; #config settings
   329                           
   330  000F                     __initialization:
   331                           
   332                           ; Clear objects allocated to COMMON
   333  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   334  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   335  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   336  0012                     end_of_initialization:	
   337                           ;End of C runtime variable initialization code
   338                           
   339  0012                     __end_of__initialization:
   340  0012  0183               	clrf	3
   341  0013  120A  118A  28E6   	ljmp	_main	;jump to C main() function
   342                           
   343                           	psect	bssCOMMON
   344  0076                     __pbssCOMMON:
   345  0076                     _selector:
   346  0076                     	ds	1
   347  0077                     _analog1:
   348  0077                     	ds	1
   349  0078                     _analog0:
   350  0078                     	ds	1
   351                           
   352                           	psect	cstackCOMMON
   353  0070                     __pcstackCOMMON:
   354  0070                     ?_setup:
   355  0070                     ?_UART_Init:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_EightBitAnalog:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ??_EightBitAnalog:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ?_spiWrite:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ??_spiWrite:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?_main:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_isr:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     spiWrite@dat:	
   377                           ; 1 bytes @ 0x0
   378                           
   379                           
   380                           ; 1 bytes @ 0x0
   381  0070                     	ds	1
   382  0071                     EightBitAnalog@a:
   383                           
   384                           ; 1 bytes @ 0x1
   385  0071                     	ds	1
   386  0072                     ??_isr:
   387                           
   388                           ; 1 bytes @ 0x2
   389  0072                     	ds	3
   390  0075                     ??_UART_Init:
   391  0075                     ??_spiInit:	
   392                           ; 1 bytes @ 0x5
   393                           
   394  0075                     spiInit@sType:	
   395                           ; 1 bytes @ 0x5
   396                           
   397                           
   398                           ; 1 bytes @ 0x5
   399  0075                     	ds	1
   400  0076                     ??_setup:
   401                           
   402                           	psect	cstackBANK0
   403  0020                     __pcstackBANK0:	
   404                           ; 1 bytes @ 0x6
   405                           
   406  0020                     ?_spiInit:
   407  0020                     spiInit@sDataSample:	
   408                           ; 1 bytes @ 0x0
   409                           
   410                           
   411                           ; 1 bytes @ 0x0
   412  0020                     	ds	1
   413  0021                     spiInit@sClockIdle:
   414                           
   415                           ; 1 bytes @ 0x1
   416  0021                     	ds	1
   417  0022                     spiInit@sTransmitEdge:
   418                           
   419                           ; 1 bytes @ 0x2
   420  0022                     	ds	1
   421  0023                     ??_main:
   422                           
   423                           ; 1 bytes @ 0x3
   424  0023                     	ds	1
   425                           
   426                           	psect	maintext
   427  00E6                     __pmaintext:	
   428 ;;
   429 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   430 ;;
   431 ;; *************** function _main *****************
   432 ;; Defined at:
   433 ;;		line 58 in file "mian.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;		None
   436 ;; Auto vars:     Size  Location     Type
   437 ;;		None
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, status,2, status,0, pclath, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : B00/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   447 ;;      Params:         0       0       0       0       0
   448 ;;      Locals:         0       0       0       0       0
   449 ;;      Temps:          0       1       0       0       0
   450 ;;      Totals:         0       1       0       0       0
   451 ;;Total ram usage:        1 bytes
   452 ;; Hardware stack levels required when called: 4
   453 ;; This function calls:
   454 ;;		_setup
   455 ;; This function is called by:
   456 ;;		Startup code after reset
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460                           
   461                           ;psect for function _main
   462  00E6                     _main:
   463  00E6                     l1089:	
   464                           ;incstack = 0
   465                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   466                           
   467                           
   468                           ;mian.c: 59:     setup();
   469  00E6  120A  118A  207B  120A  118A  	fcall	_setup
   470  00EB                     l1091:
   471                           
   472                           ;mian.c: 62:         GO = 1;
   473  00EB  1283               	bcf	3,5	;RP0=0, select bank0
   474  00EC  1303               	bcf	3,6	;RP1=0, select bank0
   475  00ED  149F               	bsf	31,1	;volatile
   476  00EE                     l1093:
   477                           
   478                           ;mian.c: 63:         _delay((unsigned long)((100)*(4000000/4000000.0)));
   479  00EE  3020               	movlw	32
   480  00EF  1283               	bcf	3,5	;RP0=0, select bank0
   481  00F0  1303               	bcf	3,6	;RP1=0, select bank0
   482  00F1  00A3               	movwf	??_main
   483  00F2                     u167:
   484  00F2  0BA3               	decfsz	??_main,f
   485  00F3  28F2               	goto	u167
   486  00F4  0000               	nop
   487  00F5  28EB               	goto	l1091
   488  00F6  120A  118A  280C   	ljmp	start
   489  00F9                     __end_of_main:
   490                           
   491                           	psect	text1
   492  007B                     __ptext1:	
   493 ;; *************** function _setup *****************
   494 ;; Defined at:
   495 ;;		line 71 in file "mian.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;		None
   498 ;; Auto vars:     Size  Location     Type
   499 ;;		None
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, status,2, status,0, pclath, cstack
   504 ;; Tracked objects:
   505 ;;		On entry : 0/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   509 ;;      Params:         0       0       0       0       0
   510 ;;      Locals:         0       0       0       0       0
   511 ;;      Temps:          0       0       0       0       0
   512 ;;      Totals:         0       0       0       0       0
   513 ;;Total ram usage:        0 bytes
   514 ;; Hardware stack levels used: 1
   515 ;; Hardware stack levels required when called: 3
   516 ;; This function calls:
   517 ;;		_UART_Init
   518 ;;		_spiInit
   519 ;; This function is called by:
   520 ;;		_main
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524                           
   525                           ;psect for function _setup
   526  007B                     _setup:
   527  007B                     l1047:	
   528                           ;incstack = 0
   529                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   530                           
   531                           
   532                           ;mian.c: 73:     ANSEL = 0b00000011;
   533  007B  3003               	movlw	3
   534  007C  1683               	bsf	3,5	;RP0=1, select bank3
   535  007D  1703               	bsf	3,6	;RP1=1, select bank3
   536  007E  0088               	movwf	8	;volatile
   537  007F                     l1049:
   538                           
   539                           ;mian.c: 74:     ANSELH = 0;
   540  007F  0189               	clrf	9	;volatile
   541  0080                     l1051:
   542                           
   543                           ;mian.c: 75:     TRISA = 0b00000011;
   544  0080  3003               	movlw	3
   545  0081  1683               	bsf	3,5	;RP0=1, select bank1
   546  0082  1303               	bcf	3,6	;RP1=0, select bank1
   547  0083  0085               	movwf	5	;volatile
   548                           
   549                           ;mian.c: 76:     TRISB = 0;
   550  0084  0186               	clrf	6	;volatile
   551  0085                     l1053:
   552                           
   553                           ;mian.c: 77:     TRISC = 0b00011000;
   554  0085  3018               	movlw	24
   555  0086  0087               	movwf	7	;volatile
   556  0087                     l1055:
   557                           
   558                           ;mian.c: 78:     TRISD = 0;
   559  0087  0188               	clrf	8	;volatile
   560  0088                     l1057:
   561                           
   562                           ;mian.c: 79:     TRISE = 0;
   563  0088  0189               	clrf	9	;volatile
   564  0089                     l1059:
   565                           
   566                           ;mian.c: 82:     GIE = 1;
   567  0089  178B               	bsf	11,7	;volatile
   568  008A                     l1061:
   569                           
   570                           ;mian.c: 83:     PEIE = 1;
   571  008A  170B               	bsf	11,6	;volatile
   572  008B                     l1063:
   573                           
   574                           ;mian.c: 84:     ADIE = 1;
   575  008B  170C               	bsf	12,6	;volatile
   576  008C                     l1065:
   577                           
   578                           ;mian.c: 87:     ADCON0bits.ADCS = 0b01;
   579  008C  1283               	bcf	3,5	;RP0=0, select bank0
   580  008D  1303               	bcf	3,6	;RP1=0, select bank0
   581  008E  081F               	movf	31,w	;volatile
   582  008F  393F               	andlw	-193
   583  0090  3840               	iorlw	64
   584  0091  009F               	movwf	31	;volatile
   585  0092                     l1067:
   586                           
   587                           ;mian.c: 88:     ADCON0bits.CHS = 0b0000;
   588  0092  30C3               	movlw	-61
   589  0093  059F               	andwf	31,f	;volatile
   590  0094                     l1069:
   591                           
   592                           ;mian.c: 89:     ADON = 1;
   593  0094  141F               	bsf	31,0	;volatile
   594  0095                     l1071:
   595                           
   596                           ;mian.c: 90:     ADIF = 0;
   597  0095  130C               	bcf	12,6	;volatile
   598  0096                     l1073:
   599                           
   600                           ;mian.c: 91:     SSPIE = 1;
   601  0096  1683               	bsf	3,5	;RP0=1, select bank1
   602  0097  1303               	bcf	3,6	;RP1=0, select bank1
   603  0098  158C               	bsf	12,3	;volatile
   604  0099                     l1075:
   605                           
   606                           ;mian.c: 93:     UART_Init();
   607  0099  120A  118A  20CF  120A  118A  	fcall	_UART_Init
   608  009E                     l1077:
   609                           
   610                           ;mian.c: 96:     spiInit(SPI_SLAVE_SS_DIS, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, S
      +                          PI_IDLE_2_ACTIVE);
   611  009E  1283               	bcf	3,5	;RP0=0, select bank0
   612  009F  1303               	bcf	3,6	;RP1=0, select bank0
   613  00A0  01A0               	clrf	spiInit@sDataSample
   614  00A1  01A1               	clrf	spiInit@sClockIdle
   615  00A2  01A2               	clrf	spiInit@sTransmitEdge
   616  00A3  3025               	movlw	37
   617  00A4  120A  118A  20B1  120A  118A  	fcall	_spiInit
   618  00A9                     l1079:
   619                           
   620                           ;mian.c: 99:     PORTA = 0;
   621  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   622  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   623  00AB  0185               	clrf	5	;volatile
   624  00AC                     l1081:
   625                           
   626                           ;mian.c: 100:     PORTB = 0;
   627  00AC  0186               	clrf	6	;volatile
   628  00AD                     l1083:
   629                           
   630                           ;mian.c: 101:     PORTC = 0;
   631  00AD  0187               	clrf	7	;volatile
   632  00AE                     l1085:
   633                           
   634                           ;mian.c: 102:     PORTD = 0;
   635  00AE  0188               	clrf	8	;volatile
   636  00AF                     l1087:
   637                           
   638                           ;mian.c: 103:     PORTE = 0;
   639  00AF  0189               	clrf	9	;volatile
   640  00B0                     l73:
   641  00B0  0008               	return
   642  00B1                     __end_of_setup:
   643                           
   644                           	psect	text2
   645  00B1                     __ptext2:	
   646 ;; *************** function _spiInit *****************
   647 ;; Defined at:
   648 ;;		line 112 in file "Digital2_toolbox.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;  sType           1    wreg     enum E1308
   651 ;;  sDataSample     1    0[BANK0 ] enum E1316
   652 ;;  sClockIdle      1    1[BANK0 ] enum E1320
   653 ;;  sTransmitEdg    1    2[BANK0 ] enum E1324
   654 ;; Auto vars:     Size  Location     Type
   655 ;;  sType           1    5[COMMON] enum E1308
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      void 
   658 ;; Registers used:
   659 ;;		wreg, status,2, status,0
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   665 ;;      Params:         0       3       0       0       0
   666 ;;      Locals:         1       0       0       0       0
   667 ;;      Temps:          0       0       0       0       0
   668 ;;      Totals:         1       3       0       0       0
   669 ;;Total ram usage:        4 bytes
   670 ;; Hardware stack levels used: 1
   671 ;; Hardware stack levels required when called: 2
   672 ;; This function calls:
   673 ;;		Nothing
   674 ;; This function is called by:
   675 ;;		_setup
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           
   680                           ;psect for function _spiInit
   681  00B1                     _spiInit:
   682                           
   683                           ;incstack = 0
   684                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   685                           ;spiInit@sType stored from wreg
   686  00B1  00F5               	movwf	spiInit@sType
   687  00B2                     l1037:
   688                           
   689                           ;Digital2_toolbox.c: 112: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_
      +                          Clock_Idle sClockIdle, Spi_Transmit_Edge sTransmitEdge);Digital2_toolbox.c: 113: {;Digit
      +                          al2_toolbox.c: 114:     TRISC5 = 0;
   690  00B2  1683               	bsf	3,5	;RP0=1, select bank1
   691  00B3  1303               	bcf	3,6	;RP1=0, select bank1
   692  00B4  1287               	bcf	7,5	;volatile
   693                           
   694                           ;Digital2_toolbox.c: 115:     if(sType & 0b00000100)
   695  00B5  1D75               	btfss	spiInit@sType,2
   696  00B6  28B8               	goto	u151
   697  00B7  28B9               	goto	u150
   698  00B8                     u151:
   699  00B8  28C1               	goto	l1043
   700  00B9                     u150:
   701  00B9                     l1039:
   702                           
   703                           ;Digital2_toolbox.c: 116:     {;Digital2_toolbox.c: 117:         SSPSTAT = sTransmitEdge
      +                          ;
   704  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   705  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   706  00BB  0822               	movf	spiInit@sTransmitEdge,w
   707  00BC  1683               	bsf	3,5	;RP0=1, select bank1
   708  00BD  1303               	bcf	3,6	;RP1=0, select bank1
   709  00BE  0094               	movwf	20	;volatile
   710  00BF                     l1041:
   711                           
   712                           ;Digital2_toolbox.c: 118:         TRISC3 = 1;
   713  00BF  1587               	bsf	7,3	;volatile
   714                           
   715                           ;Digital2_toolbox.c: 119:     }
   716  00C0  28C9               	goto	l170
   717  00C1                     l1043:
   718                           
   719                           ;Digital2_toolbox.c: 121:     {;Digital2_toolbox.c: 122:         SSPSTAT = sDataSample |
      +                           sTransmitEdge;
   720  00C1  1283               	bcf	3,5	;RP0=0, select bank0
   721  00C2  1303               	bcf	3,6	;RP1=0, select bank0
   722  00C3  0820               	movf	spiInit@sDataSample,w
   723  00C4  0422               	iorwf	spiInit@sTransmitEdge,w
   724  00C5  1683               	bsf	3,5	;RP0=1, select bank1
   725  00C6  1303               	bcf	3,6	;RP1=0, select bank1
   726  00C7  0094               	movwf	20	;volatile
   727  00C8                     l1045:
   728                           
   729                           ;Digital2_toolbox.c: 123:         TRISC3 = 0;
   730  00C8  1187               	bcf	7,3	;volatile
   731  00C9                     l170:	
   732                           ;Digital2_toolbox.c: 124:     }
   733                           
   734                           
   735                           ;Digital2_toolbox.c: 126:     SSPCON = sType | sClockIdle;
   736  00C9  0875               	movf	spiInit@sType,w
   737  00CA  1283               	bcf	3,5	;RP0=0, select bank0
   738  00CB  1303               	bcf	3,6	;RP1=0, select bank0
   739  00CC  0421               	iorwf	spiInit@sClockIdle,w
   740  00CD  0094               	movwf	20	;volatile
   741  00CE                     l171:
   742  00CE  0008               	return
   743  00CF                     __end_of_spiInit:
   744                           
   745                           	psect	text3
   746  00CF                     __ptext3:	
   747 ;; *************** function _UART_Init *****************
   748 ;; Defined at:
   749 ;;		line 80 in file "Digital2_toolbox.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, status,2
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   763 ;;      Params:         0       0       0       0       0
   764 ;;      Locals:         0       0       0       0       0
   765 ;;      Temps:          0       0       0       0       0
   766 ;;      Totals:         0       0       0       0       0
   767 ;;Total ram usage:        0 bytes
   768 ;; Hardware stack levels used: 1
   769 ;; Hardware stack levels required when called: 2
   770 ;; This function calls:
   771 ;;		Nothing
   772 ;; This function is called by:
   773 ;;		_setup
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           
   778                           ;psect for function _UART_Init
   779  00CF                     _UART_Init:
   780  00CF                     l783:	
   781                           ;incstack = 0
   782                           ; Regs used in _UART_Init: [wreg+status,2]
   783                           
   784                           
   785                           ;Digital2_toolbox.c: 82:     TXSTAbits.TXEN = 1;
   786  00CF  1683               	bsf	3,5	;RP0=1, select bank1
   787  00D0  1303               	bcf	3,6	;RP1=0, select bank1
   788  00D1  1698               	bsf	24,5	;volatile
   789                           
   790                           ;Digital2_toolbox.c: 83:     TXSTAbits.SYNC = 0;
   791  00D2  1218               	bcf	24,4	;volatile
   792                           
   793                           ;Digital2_toolbox.c: 84:     RCSTAbits.SPEN = 1;
   794  00D3  1283               	bcf	3,5	;RP0=0, select bank0
   795  00D4  1303               	bcf	3,6	;RP1=0, select bank0
   796  00D5  1798               	bsf	24,7	;volatile
   797                           
   798                           ;Digital2_toolbox.c: 85:     TXSTAbits.BRGH = 1;
   799  00D6  1683               	bsf	3,5	;RP0=1, select bank1
   800  00D7  1303               	bcf	3,6	;RP1=0, select bank1
   801  00D8  1518               	bsf	24,2	;volatile
   802                           
   803                           ;Digital2_toolbox.c: 86:     BRG16 = 0;
   804  00D9  1683               	bsf	3,5	;RP0=1, select bank3
   805  00DA  1703               	bsf	3,6	;RP1=1, select bank3
   806  00DB  1187               	bcf	7,3	;volatile
   807  00DC                     l785:
   808                           
   809                           ;Digital2_toolbox.c: 87:     SPBRGH = 0;
   810  00DC  1683               	bsf	3,5	;RP0=1, select bank1
   811  00DD  1303               	bcf	3,6	;RP1=0, select bank1
   812  00DE  019A               	clrf	26	;volatile
   813  00DF                     l787:
   814                           
   815                           ;Digital2_toolbox.c: 88:     SPBRG = 25;
   816  00DF  3019               	movlw	25
   817  00E0  0099               	movwf	25	;volatile
   818  00E1                     l789:
   819                           
   820                           ;Digital2_toolbox.c: 91:     TRISCbits.TRISC7 = 1;
   821  00E1  1787               	bsf	7,7	;volatile
   822  00E2                     l791:
   823                           
   824                           ;Digital2_toolbox.c: 92:     RCSTAbits.CREN = 1;
   825  00E2  1283               	bcf	3,5	;RP0=0, select bank0
   826  00E3  1303               	bcf	3,6	;RP1=0, select bank0
   827  00E4  1618               	bsf	24,4	;volatile
   828  00E5                     l151:
   829  00E5  0008               	return
   830  00E6                     __end_of_UART_Init:
   831                           
   832                           	psect	text4
   833  0016                     __ptext4:	
   834 ;; *************** function _isr *****************
   835 ;; Defined at:
   836 ;;		line 114 in file "mian.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;		None
   839 ;; Auto vars:     Size  Location     Type
   840 ;;		None
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg, status,2, status,0, pclath, cstack
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   850 ;;      Params:         0       0       0       0       0
   851 ;;      Locals:         0       0       0       0       0
   852 ;;      Temps:          3       0       0       0       0
   853 ;;      Totals:         3       0       0       0       0
   854 ;;Total ram usage:        3 bytes
   855 ;; Hardware stack levels used: 1
   856 ;; Hardware stack levels required when called: 1
   857 ;; This function calls:
   858 ;;		_EightBitAnalog
   859 ;;		_spiWrite
   860 ;; This function is called by:
   861 ;;		Interrupt level 1
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           
   866                           ;psect for function _isr
   867  0016                     _isr:
   868  0016                     i1l875:
   869                           
   870                           ;mian.c: 115:     if(ADIF){
   871  0016  1283               	bcf	3,5	;RP0=0, select bank0
   872  0017  1303               	bcf	3,6	;RP1=0, select bank0
   873  0018  1F0C               	btfss	12,6	;volatile
   874  0019  281B               	goto	u3_21
   875  001A  281C               	goto	u3_20
   876  001B                     u3_21:
   877  001B  284A               	goto	i1l891
   878  001C                     u3_20:
   879  001C                     i1l877:
   880                           
   881                           ;mian.c: 116:         if(ADCON0bits.CHS==0b0000){
   882  001C  0C1F               	rrf	31,w	;volatile
   883  001D  00F2               	movwf	??_isr
   884  001E  0C72               	rrf	??_isr,w
   885  001F  390F               	andlw	15
   886  0020  3A00               	xorlw	0
   887  0021  1D03               	skipz
   888  0022  2824               	goto	u4_21
   889  0023  2825               	goto	u4_20
   890  0024                     u4_21:
   891  0024  2834               	goto	i1l883
   892  0025                     u4_20:
   893  0025                     i1l879:
   894                           
   895                           ;mian.c: 117:             analog0 = EightBitAnalog();
   896  0025  120A  118A  20F9  120A  118A  	fcall	_EightBitAnalog
   897  002A  00F2               	movwf	??_isr
   898  002B  0872               	movf	??_isr,w
   899  002C  00F8               	movwf	_analog0
   900  002D                     i1l881:
   901                           
   902                           ;mian.c: 118:             ADCON0bits.CHS = 0b0001;
   903  002D  1283               	bcf	3,5	;RP0=0, select bank0
   904  002E  1303               	bcf	3,6	;RP1=0, select bank0
   905  002F  081F               	movf	31,w	;volatile
   906  0030  39C3               	andlw	-61
   907  0031  3804               	iorlw	4
   908  0032  009F               	movwf	31	;volatile
   909                           
   910                           ;mian.c: 119:         }
   911  0033  2849               	goto	i1l889
   912  0034                     i1l883:
   913  0034  0C1F               	rrf	31,w	;volatile
   914  0035  00F2               	movwf	??_isr
   915  0036  0C72               	rrf	??_isr,w
   916  0037  390F               	andlw	15
   917  0038  3A01               	xorlw	1
   918  0039  1D03               	skipz
   919  003A  283C               	goto	u5_21
   920  003B  283D               	goto	u5_20
   921  003C                     u5_21:
   922  003C  2849               	goto	i1l889
   923  003D                     u5_20:
   924  003D                     i1l885:
   925                           
   926                           ;mian.c: 121:             analog1 = EightBitAnalog();
   927  003D  120A  118A  20F9  120A  118A  	fcall	_EightBitAnalog
   928  0042  00F2               	movwf	??_isr
   929  0043  0872               	movf	??_isr,w
   930  0044  00F7               	movwf	_analog1
   931  0045                     i1l887:
   932                           
   933                           ;mian.c: 122:             ADCON0bits.CHS = 0b0000;
   934  0045  30C3               	movlw	-61
   935  0046  1283               	bcf	3,5	;RP0=0, select bank0
   936  0047  1303               	bcf	3,6	;RP1=0, select bank0
   937  0048  059F               	andwf	31,f	;volatile
   938  0049                     i1l889:
   939                           
   940                           ;mian.c: 124:         ADIF = 0;
   941  0049  130C               	bcf	12,6	;volatile
   942  004A                     i1l891:
   943                           
   944                           ;mian.c: 126:     if(SSPIF){
   945  004A  1D8C               	btfss	12,3	;volatile
   946  004B  284D               	goto	u6_21
   947  004C  284E               	goto	u6_20
   948  004D                     u6_21:
   949  004D  2874               	goto	i1l86
   950  004E                     u6_20:
   951  004E                     i1l893:
   952                           
   953                           ;mian.c: 127:         if(ADCON0bits.CHS==0b0000){
   954  004E  0C1F               	rrf	31,w	;volatile
   955  004F  00F2               	movwf	??_isr
   956  0050  0C72               	rrf	??_isr,w
   957  0051  390F               	andlw	15
   958  0052  3A00               	xorlw	0
   959  0053  1D03               	skipz
   960  0054  2856               	goto	u7_21
   961  0055  2857               	goto	u7_20
   962  0056                     u7_21:
   963  0056  2861               	goto	i1l899
   964  0057                     u7_20:
   965  0057                     i1l895:
   966                           
   967                           ;mian.c: 128:             spiWrite(analog0);
   968  0057  0878               	movf	_analog0,w
   969  0058  120A  118A  2101  120A  118A  	fcall	_spiWrite
   970  005D                     i1l897:
   971                           
   972                           ;mian.c: 129:             RE0 = 1;
   973  005D  1283               	bcf	3,5	;RP0=0, select bank0
   974  005E  1303               	bcf	3,6	;RP1=0, select bank0
   975  005F  1409               	bsf	9,0	;volatile
   976                           
   977                           ;mian.c: 130:         }
   978  0060  2873               	goto	i1l905
   979  0061                     i1l899:
   980  0061  0C1F               	rrf	31,w	;volatile
   981  0062  00F2               	movwf	??_isr
   982  0063  0C72               	rrf	??_isr,w
   983  0064  390F               	andlw	15
   984  0065  3A01               	xorlw	1
   985  0066  1D03               	skipz
   986  0067  2869               	goto	u8_21
   987  0068  286A               	goto	u8_20
   988  0069                     u8_21:
   989  0069  2873               	goto	i1l905
   990  006A                     u8_20:
   991  006A                     i1l901:
   992                           
   993                           ;mian.c: 132:             spiWrite(analog1);
   994  006A  0877               	movf	_analog1,w
   995  006B  120A  118A  2101  120A  118A  	fcall	_spiWrite
   996  0070                     i1l903:
   997                           
   998                           ;mian.c: 133:             RE0 = 0;
   999  0070  1283               	bcf	3,5	;RP0=0, select bank0
  1000  0071  1303               	bcf	3,6	;RP1=0, select bank0
  1001  0072  1009               	bcf	9,0	;volatile
  1002  0073                     i1l905:
  1003                           
  1004                           ;mian.c: 135:         SSPIF = 0;
  1005  0073  118C               	bcf	12,3	;volatile
  1006  0074                     i1l86:
  1007  0074  0874               	movf	??_isr+2,w
  1008  0075  008A               	movwf	10
  1009  0076  0E73               	swapf	??_isr+1,w
  1010  0077  0083               	movwf	3
  1011  0078  0EFE               	swapf	btemp,f
  1012  0079  0E7E               	swapf	btemp,w
  1013  007A  0009               	retfie
  1014  007B                     __end_of_isr:
  1015                           
  1016                           	psect	intentry
  1017  0004                     __pintentry:	
  1018                           ;incstack = 0
  1019                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1020                           
  1021  0004                     interrupt_function:
  1022  007E                     saved_w	set	btemp
  1023  0004  00FE               	movwf	btemp
  1024  0005  0E03               	swapf	3,w
  1025  0006  00F3               	movwf	??_isr+1
  1026  0007  080A               	movf	10,w
  1027  0008  00F4               	movwf	??_isr+2
  1028  0009  120A  118A  2816   	ljmp	_isr
  1029                           
  1030                           	psect	text5
  1031  0101                     __ptext5:	
  1032 ;; *************** function _spiWrite *****************
  1033 ;; Defined at:
  1034 ;;		line 134 in file "Digital2_toolbox.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;  dat             1    wreg     unsigned char 
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;  dat             1    0[COMMON] unsigned char 
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      void 
  1041 ;; Registers used:
  1042 ;;		wreg
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1048 ;;      Params:         0       0       0       0       0
  1049 ;;      Locals:         1       0       0       0       0
  1050 ;;      Temps:          0       0       0       0       0
  1051 ;;      Totals:         1       0       0       0       0
  1052 ;;Total ram usage:        1 bytes
  1053 ;; Hardware stack levels used: 1
  1054 ;; This function calls:
  1055 ;;		Nothing
  1056 ;; This function is called by:
  1057 ;;		_isr
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           
  1062                           ;psect for function _spiWrite
  1063  0101                     _spiWrite:
  1064                           
  1065                           ;incstack = 0
  1066                           ; Regs used in _spiWrite: [wreg]
  1067                           ;spiWrite@dat stored from wreg
  1068  0101  00F0               	movwf	spiWrite@dat
  1069  0102                     i1l849:
  1070                           
  1071                           ;Digital2_toolbox.c: 134: void spiWrite(char dat);Digital2_toolbox.c: 135: {;Digital2_to
      +                          olbox.c: 136:     SSPBUF = dat;
  1072  0102  0870               	movf	spiWrite@dat,w
  1073  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1074  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1075  0105  0093               	movwf	19	;volatile
  1076  0106                     i1l180:
  1077  0106  0008               	return
  1078  0107                     __end_of_spiWrite:
  1079                           
  1080                           	psect	text6
  1081  00F9                     __ptext6:	
  1082 ;; *************** function _EightBitAnalog *****************
  1083 ;; Defined at:
  1084 ;;		line 20 in file "Digital2_toolbox.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;		None
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  a               1    1[COMMON] unsigned char 
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      unsigned char 
  1091 ;; Registers used:
  1092 ;;		wreg
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1098 ;;      Params:         0       0       0       0       0
  1099 ;;      Locals:         1       0       0       0       0
  1100 ;;      Temps:          1       0       0       0       0
  1101 ;;      Totals:         2       0       0       0       0
  1102 ;;Total ram usage:        2 bytes
  1103 ;; Hardware stack levels used: 1
  1104 ;; This function calls:
  1105 ;;		Nothing
  1106 ;; This function is called by:
  1107 ;;		_isr
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           
  1112                           ;psect for function _EightBitAnalog
  1113  00F9                     _EightBitAnalog:
  1114  00F9                     i1l845:	
  1115                           ;incstack = 0
  1116                           ; Regs used in _EightBitAnalog: [wreg]
  1117                           
  1118                           
  1119                           ;Digital2_toolbox.c: 21:     uint8_t a = ADRESH;
  1120  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1121  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  1122  00FB  081E               	movf	30,w	;volatile
  1123  00FC  00F0               	movwf	??_EightBitAnalog
  1124  00FD  0870               	movf	??_EightBitAnalog,w
  1125  00FE  00F1               	movwf	EightBitAnalog@a
  1126                           
  1127                           ;Digital2_toolbox.c: 22:     return a;
  1128  00FF  0871               	movf	EightBitAnalog@a,w
  1129  0100                     i1l130:
  1130  0100  0008               	return
  1131  0101                     __end_of_EightBitAnalog:
  1132  007E                     btemp	set	126	;btemp
  1133  007E                     wtemp0	set	126
  1134                           
  1135                           	psect	config
  1136                           
  1137                           ;Config register CONFIG1 @ 0x2007
  1138                           ;	Oscillator Selection bits
  1139                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1140                           ;	Watchdog Timer Enable bit
  1141                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1142                           ;	Power-up Timer Enable bit
  1143                           ;	PWRTE = OFF, PWRT disabled
  1144                           ;	RE3/MCLR pin function select bit
  1145                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1146                           ;	Code Protection bit
  1147                           ;	CP = OFF, Program memory code protection is disabled
  1148                           ;	Data Code Protection bit
  1149                           ;	CPD = OFF, Data memory code protection is disabled
  1150                           ;	Brown Out Reset Selection bits
  1151                           ;	BOREN = ON, BOR enabled
  1152                           ;	Internal External Switchover bit
  1153                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1154                           ;	Fail-Safe Clock Monitor Enabled bit
  1155                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1156                           ;	Low Voltage Programming Enable bit
  1157                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1158                           ;	In-Circuit Debugger Mode bit
  1159                           ;	DEBUG = 0x1, unprogrammed default
  1160  2007                     	org	8199
  1161  2007  3FF4               	dw	16372
  1162                           
  1163                           ;Config register CONFIG2 @ 0x2008
  1164                           ;	Brown-out Reset Selection bit
  1165                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1166                           ;	Flash Program Memory Self Write Enable bits
  1167                           ;	WRT = OFF, Write protection off
  1168  2008                     	org	8200
  1169  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_EightBitAnalog

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     456
                                              3 BANK0      1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                          _UART_Init
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              5 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      30
                                              2 COMMON     3     3      0
                     _EightBitAnalog
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _EightBitAnalog                                       2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _UART_Init
     _spiInit

 _isr (ROOT)
   _EightBitAnalog
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jul 30 10:34:38 2021

            _SSPSTATbits 0094                       l73 00B0                       _GO 00F9  
                    l151 00E5                      l170 00C9                      l171 00CE  
                    l791 00E2                      l783 00CF                      l785 00DC  
                    l787 00DF                      l789 00E1                      _GIE 005F  
                    _RE0 0048                      _RE1 0049                      u150 00B9  
                    u151 00B8                      u167 00F2                      _isr 0016  
                   l1041 00BF                     l1043 00C1                     l1051 0080  
                   l1045 00C8                     l1037 00B2                     l1061 008A  
                   l1053 0085                     l1039 00B9                     l1071 0095  
                   l1063 008B                     l1055 0087                     l1047 007B  
                   l1081 00AC                     l1073 0096                     l1065 008C  
                   l1057 0088                     l1049 007F                     l1083 00AD  
                   l1075 0099                     l1067 0092                     l1059 0089  
                   l1091 00EB                     l1085 00AE                     l1077 009E  
                   l1069 0094                     l1093 00EE                     l1087 00AF  
                   l1079 00A9                     l1089 00E6                     _ADIE 0466  
                   _ADIF 0066                     ?_isr 0070                     _ADON 00F8  
                   _PEIE 005E                     i1l86 0074                     u3_20 001C  
                   u3_21 001B                     u4_20 0025                     u4_21 0024  
                   u5_20 003D                     u5_21 003C                     u6_20 004E  
                   u6_21 004D                     u7_20 0057                     u7_21 0056  
                   u8_20 006A                     u8_21 0069                     _main 00E6  
                   btemp 007E                     start 000C                    ??_isr 0072  
                  ?_main 0070                    _BRG16 0C3B                    _ANSEL 0188  
                  i1l130 0100                    i1l180 0106                    i1l901 006A  
                  i1l903 0070                    i1l905 0073                    i1l845 00F9  
                  i1l849 0102                    i1l881 002D                    i1l883 0034  
                  i1l891 004A                    i1l875 0016                    i1l893 004E  
                  i1l885 003D                    i1l877 001C                    i1l895 0057  
                  i1l887 0045                    i1l879 0025                    i1l897 005D  
                  i1l889 0049                    i1l899 0061                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _SSPIE 0463                    _TRISE 0089                    _SSPIF 0063  
                  _TXREG 0019       __size_of_UART_Init 0017                    _setup 007B  
                  pclath 000A          __end_of_spiInit 00CF                    status 0003  
                  wtemp0 007E           _EightBitAnalog 00F9          __initialization 000F  
           __end_of_main 00F9                   ??_main 0023                   _ADRESH 001E  
                 _ADRESL 009E                   ?_setup 0070                   _ANSELH 0189  
                 _SPBRGH 009A   __end_of_EightBitAnalog 0101                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
      __end_of_UART_Init 00E6                   saved_w 007E         __end_of_spiWrite 0107  
              ??_spiInit 0075  __end_of__initialization 0012          ?_EightBitAnalog 0070  
         __pcstackCOMMON 0070            __end_of_setup 00B1                  ??_setup 0076  
             __pmaintext 00E6               __pintentry 0004                  _SSPSTAT 0094  
              ?_spiWrite 0070                  _analog0 0078                  _analog1 0077  
                __ptext1 007B                  __ptext2 00B1                  __ptext3 00CF  
                __ptext4 0016                  __ptext5 0101                  __ptext6 00F9  
           __size_of_isr 0065                  _spiInit 00B1     end_of_initialization 0012  
              _RCSTAbits 0018               ??_spiWrite 0070                _UART_Init 00CF  
              _TRISCbits 0087         ??_EightBitAnalog 0070              spiWrite@dat 0070  
              _TXSTAbits 0098               ?_UART_Init 0070      start_initialization 000F  
            __end_of_isr 007B          EightBitAnalog@a 0071              __pbssCOMMON 0076  
              ___latbits 0002            __pcstackBANK0 0020              ??_UART_Init 0075  
      __size_of_spiWrite 0006                 ?_spiInit 0020           __size_of_setup 0036  
   spiInit@sTransmitEdge 0022        interrupt_function 0004       spiInit@sDataSample 0020  
             _ADCON0bits 001F         __size_of_spiInit 001E            __size_of_main 0013  
               _selector 0076                 _spiWrite 0101             spiInit@sType 0075  
      spiInit@sClockIdle 0021                 intlevel1 0000  __size_of_EightBitAnalog 0008  
