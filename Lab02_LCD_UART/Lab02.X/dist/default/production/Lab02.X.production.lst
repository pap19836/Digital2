

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jul 23 15:42:05 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  001E                     _ADRESH	set	30
   288  0009                     _PORTE	set	9
   289  0008                     _PORTD	set	8
   290  0007                     _PORTC	set	7
   291  0006                     _PORTB	set	6
   292  0005                     _PORTA	set	5
   293  001F                     _ADCON0bits	set	31
   294  0049                     _RE1	set	73
   295  0048                     _RE0	set	72
   296  0066                     _ADIF	set	102
   297  00F8                     _ADON	set	248
   298  005E                     _PEIE	set	94
   299  005F                     _GIE	set	95
   300  00F9                     _GO	set	249
   301  009E                     _ADRESL	set	158
   302  0089                     _TRISE	set	137
   303  0088                     _TRISD	set	136
   304  0087                     _TRISC	set	135
   305  0086                     _TRISB	set	134
   306  0085                     _TRISA	set	133
   307  0466                     _ADIE	set	1126
   308  0189                     _ANSELH	set	393
   309  0188                     _ANSEL	set	392
   310                           
   311                           	psect	cinit
   312  000F                     start_initialization:	
   313                           ; #config settings
   314                           
   315  000F                     __initialization:
   316                           
   317                           ; Clear objects allocated to BANK0
   318  000F  1283               	bcf	3,5	;RP0=0, select bank0
   319  0010  1303               	bcf	3,6	;RP1=0, select bank0
   320  0011  01A6               	clrf	__pbssBANK0& (0+127)
   321  0012  01A7               	clrf	(__pbssBANK0+1)& (0+127)
   322  0013  01A8               	clrf	(__pbssBANK0+2)& (0+127)
   323  0014  01A9               	clrf	(__pbssBANK0+3)& (0+127)
   324  0015                     end_of_initialization:	
   325                           ;End of C runtime variable initialization code
   326                           
   327  0015                     __end_of__initialization:
   328  0015  0183               	clrf	3
   329  0016  120A  118A  2911   	ljmp	_main	;jump to C main() function
   330                           
   331                           	psect	bssBANK0
   332  0026                     __pbssBANK0:
   333  0026                     _voltage2:
   334  0026                     	ds	2
   335  0028                     _voltage1:
   336  0028                     	ds	2
   337                           
   338                           	psect	cstackCOMMON
   339  0070                     __pcstackCOMMON:
   340  0070                     ?_setup:
   341  0070                     ?_Lcd_Write_Char:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_Lcd_Init:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_main:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_isr:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_Lcd_Cmd:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_readAnalog:	
   357                           ; 1 bytes @ 0x0
   358                           
   359                           
   360                           ; 2 bytes @ 0x0
   361  0070                     	ds	2
   362  0072                     ??_readAnalog:
   363                           
   364                           ; 1 bytes @ 0x2
   365  0072                     	ds	3
   366  0075                     readAnalog@a:
   367                           
   368                           ; 2 bytes @ 0x5
   369  0075                     	ds	2
   370  0077                     readAnalog@b:
   371                           
   372                           ; 2 bytes @ 0x7
   373  0077                     	ds	2
   374  0079                     readAnalog@result:
   375                           
   376                           ; 2 bytes @ 0x9
   377  0079                     	ds	2
   378  007B                     ??_isr:
   379                           
   380                           ; 1 bytes @ 0xB
   381  007B                     	ds	3
   382                           
   383                           	psect	cstackBANK0
   384  0020                     __pcstackBANK0:
   385  0020                     ??_Lcd_Write_Char:
   386  0020                     ??_Lcd_Cmd:	
   387                           ; 1 bytes @ 0x0
   388                           
   389                           
   390                           ; 1 bytes @ 0x0
   391  0020                     	ds	2
   392  0022                     Lcd_Cmd@a:
   393  0022                     Lcd_Write_Char@a:	
   394                           ; 1 bytes @ 0x2
   395                           
   396                           
   397                           ; 1 bytes @ 0x2
   398  0022                     	ds	1
   399  0023                     ??_Lcd_Init:
   400                           
   401                           ; 1 bytes @ 0x3
   402  0023                     	ds	2
   403  0025                     ??_setup:
   404  0025                     ??_main:	
   405                           ; 1 bytes @ 0x5
   406                           
   407                           
   408                           ; 1 bytes @ 0x5
   409  0025                     	ds	1
   410                           
   411                           	psect	maintext
   412  0111                     __pmaintext:	
   413 ;;
   414 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   415 ;;
   416 ;; *************** function _main *****************
   417 ;; Defined at:
   418 ;;		line 51 in file "main.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;		None
   421 ;; Auto vars:     Size  Location     Type
   422 ;;		None
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      void 
   425 ;; Registers used:
   426 ;;		wreg, status,2, status,0, pclath, cstack
   427 ;; Tracked objects:
   428 ;;		On entry : B00/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   432 ;;      Params:         0       0       0       0       0
   433 ;;      Locals:         0       0       0       0       0
   434 ;;      Temps:          0       1       0       0       0
   435 ;;      Totals:         0       1       0       0       0
   436 ;;Total ram usage:        1 bytes
   437 ;; Hardware stack levels required when called: 5
   438 ;; This function calls:
   439 ;;		_Lcd_Write_Char
   440 ;;		_setup
   441 ;; This function is called by:
   442 ;;		Startup code after reset
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446                           
   447                           ;psect for function _main
   448  0111                     _main:
   449  0111                     l916:	
   450                           ;incstack = 0
   451                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   452                           
   453                           
   454                           ;main.c: 52:     setup();
   455  0111  120A  118A  209F  120A  118A  	fcall	_setup
   456                           
   457                           ;main.c: 53:     Lcd_Write_Char(47);
   458  0116  302F               	movlw	47
   459  0117  120A  118A  20F5  120A  118A  	fcall	_Lcd_Write_Char
   460  011C                     l918:
   461                           
   462                           ;main.c: 55:         GO = 1;
   463  011C  1283               	bcf	3,5	;RP0=0, select bank0
   464  011D  1303               	bcf	3,6	;RP1=0, select bank0
   465  011E  149F               	bsf	31,1	;volatile
   466  011F                     l920:
   467                           
   468                           ;main.c: 56:         _delay((unsigned long)((100)*(4000000/4000000.0)));
   469  011F  3020               	movlw	32
   470  0120  1283               	bcf	3,5	;RP0=0, select bank0
   471  0121  1303               	bcf	3,6	;RP1=0, select bank0
   472  0122  00A5               	movwf	??_main
   473  0123                     u117:
   474  0123  0BA5               	decfsz	??_main,f
   475  0124  2923               	goto	u117
   476  0125  0000               	nop
   477  0126  291C               	goto	l918
   478  0127  120A  118A  280C   	ljmp	start
   479  012A                     __end_of_main:
   480                           
   481                           	psect	text1
   482  009F                     __ptext1:	
   483 ;; *************** function _setup *****************
   484 ;; Defined at:
   485 ;;		line 65 in file "main.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;		None
   488 ;; Auto vars:     Size  Location     Type
   489 ;;		None
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg, status,2, status,0, pclath, cstack
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   499 ;;      Params:         0       0       0       0       0
   500 ;;      Locals:         0       0       0       0       0
   501 ;;      Temps:          0       0       0       0       0
   502 ;;      Totals:         0       0       0       0       0
   503 ;;Total ram usage:        0 bytes
   504 ;; Hardware stack levels used: 1
   505 ;; Hardware stack levels required when called: 4
   506 ;; This function calls:
   507 ;;		_Lcd_Init
   508 ;; This function is called by:
   509 ;;		_main
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           
   514                           ;psect for function _setup
   515  009F                     _setup:
   516  009F                     l860:	
   517                           ;incstack = 0
   518                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   519                           
   520                           
   521                           ;main.c: 67:     ANSEL = 0b00000011;
   522  009F  3003               	movlw	3
   523  00A0  1683               	bsf	3,5	;RP0=1, select bank3
   524  00A1  1703               	bsf	3,6	;RP1=1, select bank3
   525  00A2  0088               	movwf	8	;volatile
   526  00A3                     l862:
   527                           
   528                           ;main.c: 68:     ANSELH = 0;
   529  00A3  0189               	clrf	9	;volatile
   530  00A4                     l864:
   531                           
   532                           ;main.c: 69:     TRISA = 0b00000011;
   533  00A4  3003               	movlw	3
   534  00A5  1683               	bsf	3,5	;RP0=1, select bank1
   535  00A6  1303               	bcf	3,6	;RP1=0, select bank1
   536  00A7  0085               	movwf	5	;volatile
   537                           
   538                           ;main.c: 70:     TRISB = 0;
   539  00A8  0186               	clrf	6	;volatile
   540                           
   541                           ;main.c: 71:     TRISC = 0;
   542  00A9  0187               	clrf	7	;volatile
   543                           
   544                           ;main.c: 72:     TRISD = 0;
   545  00AA  0188               	clrf	8	;volatile
   546                           
   547                           ;main.c: 73:     TRISE = 0;
   548  00AB  0189               	clrf	9	;volatile
   549  00AC                     l866:
   550                           
   551                           ;main.c: 76:     GIE = 1;
   552  00AC  178B               	bsf	11,7	;volatile
   553  00AD                     l868:
   554                           
   555                           ;main.c: 77:     PEIE = 1;
   556  00AD  170B               	bsf	11,6	;volatile
   557  00AE                     l870:
   558                           
   559                           ;main.c: 78:     ADIE = 1;
   560  00AE  170C               	bsf	12,6	;volatile
   561  00AF                     l872:
   562                           
   563                           ;main.c: 81:     ADCON0bits.ADCS = 0b01;
   564  00AF  1283               	bcf	3,5	;RP0=0, select bank0
   565  00B0  1303               	bcf	3,6	;RP1=0, select bank0
   566  00B1  081F               	movf	31,w	;volatile
   567  00B2  393F               	andlw	-193
   568  00B3  3840               	iorlw	64
   569  00B4  009F               	movwf	31	;volatile
   570  00B5                     l874:
   571                           
   572                           ;main.c: 82:     ADCON0bits.CHS = 0b0000;
   573  00B5  30C3               	movlw	-61
   574  00B6  059F               	andwf	31,f	;volatile
   575  00B7                     l876:
   576                           
   577                           ;main.c: 83:     ADON = 1;
   578  00B7  141F               	bsf	31,0	;volatile
   579  00B8                     l878:
   580                           
   581                           ;main.c: 84:     ADIF = 0;
   582  00B8  130C               	bcf	12,6	;volatile
   583  00B9                     l880:
   584                           
   585                           ;main.c: 86:     Lcd_Init();
   586  00B9  120A  118A  2019  120A  118A  	fcall	_Lcd_Init
   587  00BE                     l882:
   588                           
   589                           ;main.c: 89:     PORTA = 0;
   590  00BE  1283               	bcf	3,5	;RP0=0, select bank0
   591  00BF  1303               	bcf	3,6	;RP1=0, select bank0
   592  00C0  0185               	clrf	5	;volatile
   593  00C1                     l884:
   594                           
   595                           ;main.c: 90:     PORTB = 0;
   596  00C1  0186               	clrf	6	;volatile
   597  00C2                     l886:
   598                           
   599                           ;main.c: 91:     PORTC = 0;
   600  00C2  0187               	clrf	7	;volatile
   601  00C3                     l888:
   602                           
   603                           ;main.c: 92:     PORTD = 0;
   604  00C3  0188               	clrf	8	;volatile
   605  00C4                     l890:
   606                           
   607                           ;main.c: 93:     PORTE = 0;
   608  00C4  0189               	clrf	9	;volatile
   609  00C5                     l892:
   610                           
   611                           ;main.c: 96:     voltage1 = 0;
   612  00C5  01A8               	clrf	_voltage1
   613  00C6  01A9               	clrf	_voltage1+1
   614  00C7                     l894:
   615                           
   616                           ;main.c: 97:     voltage2 = 0;
   617  00C7  01A6               	clrf	_voltage2
   618  00C8  01A7               	clrf	_voltage2+1
   619  00C9                     l63:
   620  00C9  0008               	return
   621  00CA                     __end_of_setup:
   622                           
   623                           	psect	text2
   624  0019                     __ptext2:	
   625 ;; *************** function _Lcd_Init *****************
   626 ;; Defined at:
   627 ;;		line 38 in file "Digital2_toolbox.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, status,2, status,0, pclath, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   641 ;;      Params:         0       0       0       0       0
   642 ;;      Locals:         0       0       0       0       0
   643 ;;      Temps:          0       2       0       0       0
   644 ;;      Totals:         0       2       0       0       0
   645 ;;Total ram usage:        2 bytes
   646 ;; Hardware stack levels used: 1
   647 ;; Hardware stack levels required when called: 3
   648 ;; This function calls:
   649 ;;		_Lcd_Cmd
   650 ;; This function is called by:
   651 ;;		_setup
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           
   656                           ;psect for function _Lcd_Init
   657  0019                     _Lcd_Init:
   658  0019                     l834:	
   659                           ;incstack = 0
   660                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
   661                           
   662                           
   663                           ;Digital2_toolbox.c: 39:     PORTD = 0;
   664  0019  1283               	bcf	3,5	;RP0=0, select bank0
   665  001A  1303               	bcf	3,6	;RP1=0, select bank0
   666  001B  0188               	clrf	8	;volatile
   667  001C                     l836:
   668                           
   669                           ;Digital2_toolbox.c: 40:     _delay((unsigned long)((20)*(4000000/4000.0)));
   670  001C  301A               	movlw	26
   671  001D  1283               	bcf	3,5	;RP0=0, select bank0
   672  001E  1303               	bcf	3,6	;RP1=0, select bank0
   673  001F  00A4               	movwf	??_Lcd_Init+1
   674  0020  30F7               	movlw	247
   675  0021  00A3               	movwf	??_Lcd_Init
   676  0022                     u127:
   677  0022  0BA3               	decfsz	??_Lcd_Init,f
   678  0023  2822               	goto	u127
   679  0024  0BA4               	decfsz	??_Lcd_Init+1,f
   680  0025  2822               	goto	u127
   681  0026  2827               	nop2
   682  0027                     l838:
   683                           
   684                           ;Digital2_toolbox.c: 41:     Lcd_Cmd(0x03);
   685  0027  3003               	movlw	3
   686  0028  120A  118A  212A  120A  118A  	fcall	_Lcd_Cmd
   687  002D                     l840:
   688                           
   689                           ;Digital2_toolbox.c: 42:     _delay((unsigned long)((5)*(4000000/4000.0)));
   690  002D  3007               	movlw	7
   691  002E  1283               	bcf	3,5	;RP0=0, select bank0
   692  002F  1303               	bcf	3,6	;RP1=0, select bank0
   693  0030  00A4               	movwf	??_Lcd_Init+1
   694  0031  307C               	movlw	124
   695  0032  00A3               	movwf	??_Lcd_Init
   696  0033                     u137:
   697  0033  0BA3               	decfsz	??_Lcd_Init,f
   698  0034  2833               	goto	u137
   699  0035  0BA4               	decfsz	??_Lcd_Init+1,f
   700  0036  2833               	goto	u137
   701  0037  0000               	nop
   702  0038                     l842:
   703                           
   704                           ;Digital2_toolbox.c: 43:     Lcd_Cmd(0x03);
   705  0038  3003               	movlw	3
   706  0039  120A  118A  212A  120A  118A  	fcall	_Lcd_Cmd
   707  003E                     l844:
   708                           
   709                           ;Digital2_toolbox.c: 44:     _delay((unsigned long)((160)*(4000000/4000000.0)));
   710  003E  3034               	movlw	52
   711  003F  1283               	bcf	3,5	;RP0=0, select bank0
   712  0040  1303               	bcf	3,6	;RP1=0, select bank0
   713  0041  00A3               	movwf	??_Lcd_Init
   714  0042                     u147:
   715  0042  0BA3               	decfsz	??_Lcd_Init,f
   716  0043  2842               	goto	u147
   717  0044  0000               	nop
   718  0045                     l846:
   719                           
   720                           ;Digital2_toolbox.c: 45:     Lcd_Cmd(0x03);
   721  0045  3003               	movlw	3
   722  0046  120A  118A  212A  120A  118A  	fcall	_Lcd_Cmd
   723  004B                     l848:
   724                           
   725                           ;Digital2_toolbox.c: 47:     PORTD = 0b00111100;
   726  004B  303C               	movlw	60
   727  004C  1283               	bcf	3,5	;RP0=0, select bank0
   728  004D  1303               	bcf	3,6	;RP1=0, select bank0
   729  004E  0088               	movwf	8	;volatile
   730  004F                     l850:
   731                           
   732                           ;Digital2_toolbox.c: 48:     PORTD = 0x10;
   733  004F  3010               	movlw	16
   734  0050  0088               	movwf	8	;volatile
   735  0051                     l852:
   736                           
   737                           ;Digital2_toolbox.c: 49:     PORTD = 0x01;
   738  0051  3001               	movlw	1
   739  0052  0088               	movwf	8	;volatile
   740  0053                     l854:
   741                           
   742                           ;Digital2_toolbox.c: 50:     PORTD = 0x07;
   743  0053  3007               	movlw	7
   744  0054  0088               	movwf	8	;volatile
   745  0055                     l856:
   746                           
   747                           ;Digital2_toolbox.c: 51:     PORTD = 0x0F;
   748  0055  300F               	movlw	15
   749  0056  0088               	movwf	8	;volatile
   750  0057                     l858:
   751                           
   752                           ;Digital2_toolbox.c: 53:     _delay((unsigned long)((100)*(4000000/4000.0)));
   753  0057  3082               	movlw	130
   754  0058  1283               	bcf	3,5	;RP0=0, select bank0
   755  0059  1303               	bcf	3,6	;RP1=0, select bank0
   756  005A  00A4               	movwf	??_Lcd_Init+1
   757  005B  30DD               	movlw	221
   758  005C  00A3               	movwf	??_Lcd_Init
   759  005D                     u157:
   760  005D  0BA3               	decfsz	??_Lcd_Init,f
   761  005E  285D               	goto	u157
   762  005F  0BA4               	decfsz	??_Lcd_Init+1,f
   763  0060  285D               	goto	u157
   764  0061                     l99:
   765  0061  0008               	return
   766  0062                     __end_of_Lcd_Init:
   767                           
   768                           	psect	text3
   769  012A                     __ptext3:	
   770 ;; *************** function _Lcd_Cmd *****************
   771 ;; Defined at:
   772 ;;		line 24 in file "Digital2_toolbox.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;  a               1    wreg     unsigned char 
   775 ;; Auto vars:     Size  Location     Type
   776 ;;  a               1    2[BANK0 ] unsigned char 
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   786 ;;      Params:         0       0       0       0       0
   787 ;;      Locals:         0       1       0       0       0
   788 ;;      Temps:          0       2       0       0       0
   789 ;;      Totals:         0       3       0       0       0
   790 ;;Total ram usage:        3 bytes
   791 ;; Hardware stack levels used: 1
   792 ;; Hardware stack levels required when called: 2
   793 ;; This function calls:
   794 ;;		Nothing
   795 ;; This function is called by:
   796 ;;		_Lcd_Init
   797 ;;		_Lcd_Clear
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           
   802                           ;psect for function _Lcd_Cmd
   803  012A                     _Lcd_Cmd:
   804                           
   805                           ;incstack = 0
   806                           ; Regs used in _Lcd_Cmd: [wreg]
   807                           ;Lcd_Cmd@a stored from wreg
   808  012A  1283               	bcf	3,5	;RP0=0, select bank0
   809  012B  1303               	bcf	3,6	;RP1=0, select bank0
   810  012C  00A2               	movwf	Lcd_Cmd@a
   811  012D                     l826:
   812                           
   813                           ;Digital2_toolbox.c: 25:     RE0 = 0;
   814  012D  1009               	bcf	9,0	;volatile
   815  012E                     l828:
   816                           
   817                           ;Digital2_toolbox.c: 26:     PORTD = a;
   818  012E  0822               	movf	Lcd_Cmd@a,w
   819  012F  0088               	movwf	8	;volatile
   820  0130                     l830:
   821                           
   822                           ;Digital2_toolbox.c: 27:     RE1 = 1;
   823  0130  1489               	bsf	9,1	;volatile
   824                           
   825                           ;Digital2_toolbox.c: 28:     _delay((unsigned long)((4)*(4000000/4000.0)));
   826  0131  3006               	movlw	6
   827  0132  1283               	bcf	3,5	;RP0=0, select bank0
   828  0133  1303               	bcf	3,6	;RP1=0, select bank0
   829  0134  00A1               	movwf	??_Lcd_Cmd+1
   830  0135  302F               	movlw	47
   831  0136  00A0               	movwf	??_Lcd_Cmd
   832  0137                     u167:
   833  0137  0BA0               	decfsz	??_Lcd_Cmd,f
   834  0138  2937               	goto	u167
   835  0139  0BA1               	decfsz	??_Lcd_Cmd+1,f
   836  013A  2937               	goto	u167
   837  013B  293C               	nop2
   838  013C                     l832:
   839                           
   840                           ;Digital2_toolbox.c: 29:     RE1 = 0;
   841  013C  1283               	bcf	3,5	;RP0=0, select bank0
   842  013D  1303               	bcf	3,6	;RP1=0, select bank0
   843  013E  1089               	bcf	9,1	;volatile
   844  013F                     l93:
   845  013F  0008               	return
   846  0140                     __end_of_Lcd_Cmd:
   847                           
   848                           	psect	text4
   849  00F5                     __ptext4:	
   850 ;; *************** function _Lcd_Write_Char *****************
   851 ;; Defined at:
   852 ;;		line 56 in file "Digital2_toolbox.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;  a               1    wreg     unsigned char 
   855 ;; Auto vars:     Size  Location     Type
   856 ;;  a               1    2[BANK0 ] unsigned char 
   857 ;; Return value:  Size  Location     Type
   858 ;;                  1    wreg      void 
   859 ;; Registers used:
   860 ;;		wreg
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   866 ;;      Params:         0       0       0       0       0
   867 ;;      Locals:         0       1       0       0       0
   868 ;;      Temps:          0       2       0       0       0
   869 ;;      Totals:         0       3       0       0       0
   870 ;;Total ram usage:        3 bytes
   871 ;; Hardware stack levels used: 1
   872 ;; Hardware stack levels required when called: 2
   873 ;; This function calls:
   874 ;;		Nothing
   875 ;; This function is called by:
   876 ;;		_main
   877 ;;		_Lcd_Write_String
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           
   882                           ;psect for function _Lcd_Write_Char
   883  00F5                     _Lcd_Write_Char:
   884                           
   885                           ;incstack = 0
   886                           ; Regs used in _Lcd_Write_Char: [wreg]
   887                           ;Lcd_Write_Char@a stored from wreg
   888  00F5  1283               	bcf	3,5	;RP0=0, select bank0
   889  00F6  1303               	bcf	3,6	;RP1=0, select bank0
   890  00F7  00A2               	movwf	Lcd_Write_Char@a
   891  00F8                     l896:
   892                           
   893                           ;Digital2_toolbox.c: 57:     PORTD = a;
   894  00F8  0822               	movf	Lcd_Write_Char@a,w
   895  00F9  0088               	movwf	8	;volatile
   896  00FA                     l898:
   897                           
   898                           ;Digital2_toolbox.c: 58:     RE0 = 1;
   899  00FA  1409               	bsf	9,0	;volatile
   900  00FB                     l900:
   901                           
   902                           ;Digital2_toolbox.c: 59:     RE1 = 1;
   903  00FB  1489               	bsf	9,1	;volatile
   904                           
   905                           ;Digital2_toolbox.c: 60:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   906  00FC  3020               	movlw	32
   907  00FD  1283               	bcf	3,5	;RP0=0, select bank0
   908  00FE  1303               	bcf	3,6	;RP1=0, select bank0
   909  00FF  00A0               	movwf	??_Lcd_Write_Char
   910  0100                     u177:
   911  0100  0BA0               	decfsz	??_Lcd_Write_Char,f
   912  0101  2900               	goto	u177
   913  0102  0000               	nop
   914  0103                     l902:
   915                           
   916                           ;Digital2_toolbox.c: 61:     RE1 = 0;
   917  0103  1283               	bcf	3,5	;RP0=0, select bank0
   918  0104  1303               	bcf	3,6	;RP1=0, select bank0
   919  0105  1089               	bcf	9,1	;volatile
   920                           
   921                           ;Digital2_toolbox.c: 62:     _delay((unsigned long)((10)*(4000000/4000.0)));
   922  0106  300D               	movlw	13
   923  0107  1283               	bcf	3,5	;RP0=0, select bank0
   924  0108  1303               	bcf	3,6	;RP1=0, select bank0
   925  0109  00A1               	movwf	??_Lcd_Write_Char+1
   926  010A  30FB               	movlw	251
   927  010B  00A0               	movwf	??_Lcd_Write_Char
   928  010C                     u187:
   929  010C  0BA0               	decfsz	??_Lcd_Write_Char,f
   930  010D  290C               	goto	u187
   931  010E  0BA1               	decfsz	??_Lcd_Write_Char+1,f
   932  010F  290C               	goto	u187
   933  0110                     l102:
   934  0110  0008               	return
   935  0111                     __end_of_Lcd_Write_Char:
   936                           
   937                           	psect	text5
   938  0062                     __ptext5:	
   939 ;; *************** function _isr *****************
   940 ;; Defined at:
   941 ;;		line 106 in file "main.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;		None
   944 ;; Auto vars:     Size  Location     Type
   945 ;;		None
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      void 
   948 ;; Registers used:
   949 ;;		wreg, status,2, status,0, pclath, cstack
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   955 ;;      Params:         0       0       0       0       0
   956 ;;      Locals:         0       0       0       0       0
   957 ;;      Temps:          3       0       0       0       0
   958 ;;      Totals:         3       0       0       0       0
   959 ;;Total ram usage:        3 bytes
   960 ;; Hardware stack levels used: 1
   961 ;; Hardware stack levels required when called: 1
   962 ;; This function calls:
   963 ;;		_readAnalog
   964 ;; This function is called by:
   965 ;;		Interrupt level 1
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           
   970                           ;psect for function _isr
   971  0062                     _isr:
   972  0062                     i1l922:
   973                           
   974                           ;main.c: 107:     if(ADIF){
   975  0062  1283               	bcf	3,5	;RP0=0, select bank0
   976  0063  1303               	bcf	3,6	;RP1=0, select bank0
   977  0064  1F0C               	btfss	12,6	;volatile
   978  0065  2867               	goto	u7_21
   979  0066  2868               	goto	u7_20
   980  0067                     u7_21:
   981  0067  2898               	goto	i1l72
   982  0068                     u7_20:
   983  0068                     i1l924:
   984                           
   985                           ;main.c: 108:         if(ADCON0bits.CHS==0b0000){
   986  0068  0C1F               	rrf	31,w	;volatile
   987  0069  00FB               	movwf	??_isr
   988  006A  0C7B               	rrf	??_isr,w
   989  006B  390F               	andlw	15
   990  006C  3A00               	xorlw	0
   991  006D  1D03               	skipz
   992  006E  2870               	goto	u8_21
   993  006F  2871               	goto	u8_20
   994  0070                     u8_21:
   995  0070  2881               	goto	i1l930
   996  0071                     u8_20:
   997  0071                     i1l926:
   998                           
   999                           ;main.c: 109:             voltage1 = readAnalog();
  1000  0071  120A  118A  20CA  120A  118A  	fcall	_readAnalog
  1001  0076  0871               	movf	?_readAnalog+1,w
  1002  0077  1283               	bcf	3,5	;RP0=0, select bank0
  1003  0078  1303               	bcf	3,6	;RP1=0, select bank0
  1004  0079  00A9               	movwf	_voltage1+1
  1005  007A  0870               	movf	?_readAnalog,w
  1006  007B  00A8               	movwf	_voltage1
  1007  007C                     i1l928:
  1008                           
  1009                           ;main.c: 110:             ADCON0bits.CHS = 0b0001;
  1010  007C  081F               	movf	31,w	;volatile
  1011  007D  39C3               	andlw	-61
  1012  007E  3804               	iorlw	4
  1013  007F  009F               	movwf	31	;volatile
  1014                           
  1015                           ;main.c: 111:         }
  1016  0080  2897               	goto	i1l936
  1017  0081                     i1l930:
  1018  0081  0C1F               	rrf	31,w	;volatile
  1019  0082  00FB               	movwf	??_isr
  1020  0083  0C7B               	rrf	??_isr,w
  1021  0084  390F               	andlw	15
  1022  0085  3A01               	xorlw	1
  1023  0086  1D03               	skipz
  1024  0087  2889               	goto	u9_21
  1025  0088  288A               	goto	u9_20
  1026  0089                     u9_21:
  1027  0089  2897               	goto	i1l936
  1028  008A                     u9_20:
  1029  008A                     i1l932:
  1030                           
  1031                           ;main.c: 113:             voltage2 = readAnalog();
  1032  008A  120A  118A  20CA  120A  118A  	fcall	_readAnalog
  1033  008F  0871               	movf	?_readAnalog+1,w
  1034  0090  1283               	bcf	3,5	;RP0=0, select bank0
  1035  0091  1303               	bcf	3,6	;RP1=0, select bank0
  1036  0092  00A7               	movwf	_voltage2+1
  1037  0093  0870               	movf	?_readAnalog,w
  1038  0094  00A6               	movwf	_voltage2
  1039  0095                     i1l934:
  1040                           
  1041                           ;main.c: 114:             ADCON0bits.CHS = 0b0000;
  1042  0095  30C3               	movlw	-61
  1043  0096  059F               	andwf	31,f	;volatile
  1044  0097                     i1l936:
  1045                           
  1046                           ;main.c: 116:         ADIF = 0;
  1047  0097  130C               	bcf	12,6	;volatile
  1048  0098                     i1l72:
  1049  0098  087D               	movf	??_isr+2,w
  1050  0099  008A               	movwf	10
  1051  009A  0E7C               	swapf	??_isr+1,w
  1052  009B  0083               	movwf	3
  1053  009C  0EFE               	swapf	btemp,f
  1054  009D  0E7E               	swapf	btemp,w
  1055  009E  0009               	retfie
  1056  009F                     __end_of_isr:
  1057                           
  1058                           	psect	intentry
  1059  0004                     __pintentry:	
  1060                           ;incstack = 0
  1061                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1062                           
  1063  0004                     interrupt_function:
  1064  007E                     saved_w	set	btemp
  1065  0004  00FE               	movwf	btemp
  1066  0005  0E03               	swapf	3,w
  1067  0006  00FC               	movwf	??_isr+1
  1068  0007  080A               	movf	10,w
  1069  0008  00FD               	movwf	??_isr+2
  1070  0009  120A  118A  2862   	ljmp	_isr
  1071                           
  1072                           	psect	text6
  1073  00CA                     __ptext6:	
  1074 ;; *************** function _readAnalog *****************
  1075 ;; Defined at:
  1076 ;;		line 6 in file "Digital2_toolbox.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;		None
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;  result          2    9[COMMON] unsigned int 
  1081 ;;  b               2    7[COMMON] unsigned int 
  1082 ;;  a               2    5[COMMON] unsigned int 
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  2    0[COMMON] unsigned int 
  1085 ;; Registers used:
  1086 ;;		wreg, status,2, status,0
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1092 ;;      Params:         2       0       0       0       0
  1093 ;;      Locals:         6       0       0       0       0
  1094 ;;      Temps:          3       0       0       0       0
  1095 ;;      Totals:        11       0       0       0       0
  1096 ;;Total ram usage:       11 bytes
  1097 ;; Hardware stack levels used: 1
  1098 ;; This function calls:
  1099 ;;		Nothing
  1100 ;; This function is called by:
  1101 ;;		_isr
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           
  1106                           ;psect for function _readAnalog
  1107  00CA                     _readAnalog:
  1108  00CA                     i1l904:	
  1109                           ;incstack = 0
  1110                           ; Regs used in _readAnalog: [wreg+status,2+status,0]
  1111                           
  1112  00CA                     i1l906:
  1113                           
  1114                           ;Digital2_toolbox.c: 8:     uint16_t a;;Digital2_toolbox.c: 9:     uint16_t b;;Digital2_
      +                          toolbox.c: 10:     a = ADRESL>>6;
  1115  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  1116  00CB  1303               	bcf	3,6	;RP1=0, select bank1
  1117  00CC  081E               	movf	30,w	;volatile
  1118  00CD  00F2               	movwf	??_readAnalog
  1119  00CE  3006               	movlw	6
  1120  00CF                     u6_25:
  1121  00CF  1003               	clrc
  1122  00D0  0CF2               	rrf	??_readAnalog,f
  1123  00D1  3EFF               	addlw	-1
  1124  00D2  1D03               	skipz
  1125  00D3  28CF               	goto	u6_25
  1126  00D4  0872               	movf	??_readAnalog,w
  1127  00D5  00F3               	movwf	??_readAnalog+1
  1128  00D6  01F4               	clrf	??_readAnalog+2
  1129  00D7  0873               	movf	??_readAnalog+1,w
  1130  00D8  00F5               	movwf	readAnalog@a
  1131  00D9  0874               	movf	??_readAnalog+2,w
  1132  00DA  00F6               	movwf	readAnalog@a+1
  1133  00DB                     i1l908:
  1134                           
  1135                           ;Digital2_toolbox.c: 11:     b = ADRESH<<2;
  1136  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1137  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1138  00DD  081E               	movf	30,w	;volatile
  1139  00DE  00F2               	movwf	??_readAnalog
  1140  00DF  01F3               	clrf	??_readAnalog+1
  1141  00E0  1003               	clrc
  1142  00E1  0DF2               	rlf	??_readAnalog,f
  1143  00E2  0DF3               	rlf	??_readAnalog+1,f
  1144  00E3  1003               	clrc
  1145  00E4  0DF2               	rlf	??_readAnalog,f
  1146  00E5  0DF3               	rlf	??_readAnalog+1,f
  1147  00E6  0872               	movf	??_readAnalog,w
  1148  00E7  00F7               	movwf	readAnalog@b
  1149  00E8  0873               	movf	??_readAnalog+1,w
  1150  00E9  00F8               	movwf	readAnalog@b+1
  1151  00EA                     i1l910:
  1152                           
  1153                           ;Digital2_toolbox.c: 12:     result = b|a;
  1154  00EA  0875               	movf	readAnalog@a,w
  1155  00EB  0477               	iorwf	readAnalog@b,w
  1156  00EC  00F9               	movwf	readAnalog@result
  1157  00ED  0876               	movf	readAnalog@a+1,w
  1158  00EE  0478               	iorwf	readAnalog@b+1,w
  1159  00EF  00FA               	movwf	readAnalog@result+1
  1160  00F0                     i1l912:
  1161                           
  1162                           ;Digital2_toolbox.c: 13:     return result;
  1163  00F0  087A               	movf	readAnalog@result+1,w
  1164  00F1  00F1               	movwf	?_readAnalog+1
  1165  00F2  0879               	movf	readAnalog@result,w
  1166  00F3  00F0               	movwf	?_readAnalog
  1167  00F4                     i1l87:
  1168  00F4  0008               	return
  1169  00F5                     __end_of_readAnalog:
  1170  007E                     btemp	set	126	;btemp
  1171  007E                     wtemp0	set	126
  1172                           
  1173                           	psect	config
  1174                           
  1175                           ;Config register CONFIG1 @ 0x2007
  1176                           ;	Oscillator Selection bits
  1177                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1178                           ;	Watchdog Timer Enable bit
  1179                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1180                           ;	Power-up Timer Enable bit
  1181                           ;	PWRTE = OFF, PWRT disabled
  1182                           ;	RE3/MCLR pin function select bit
  1183                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1184                           ;	Code Protection bit
  1185                           ;	CP = OFF, Program memory code protection is disabled
  1186                           ;	Data Code Protection bit
  1187                           ;	CPD = OFF, Data memory code protection is disabled
  1188                           ;	Brown Out Reset Selection bits
  1189                           ;	BOREN = ON, BOR enabled
  1190                           ;	Internal External Switchover bit
  1191                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1192                           ;	Fail-Safe Clock Monitor Enabled bit
  1193                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1194                           ;	Low Voltage Programming Enable bit
  1195                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1196                           ;	In-Circuit Debugger Mode bit
  1197                           ;	DEBUG = 0x1, unprogrammed default
  1198  2007                     	org	8199
  1199  2007  3FF4               	dw	16372
  1200                           
  1201                           ;Config register CONFIG2 @ 0x2008
  1202                           ;	Brown-out Reset Selection bit
  1203                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1204                           ;	Flash Program Memory Self Write Enable bits
  1205                           ;	WRT = OFF, Write protection off
  1206  2008                     	org	8200
  1207  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      6      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_readAnalog

Critical Paths under _main in BANK0

    _setup->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      44
                                              5 BANK0      1     1      0
                     _Lcd_Write_Char
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                           _Lcd_Init
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      22
                                              3 BANK0      2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Char                                       3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0      70
                                             11 COMMON     3     3      0
                         _readAnalog
 ---------------------------------------------------------------------------------
 (5) _readAnalog                                          11     9      2      70
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Write_Char
   _setup
     _Lcd_Init
       _Lcd_Cmd

 _isr (ROOT)
   _readAnalog

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      18       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      18      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jul 23 15:42:05 2021

                     l63 00C9                       l93 013F                       _GO 00F9  
                     l99 0061                      l102 0110                      l900 00FB  
                    l902 0103                      l830 0130                      l832 013C  
                    l840 002D                      l920 011F                      l826 012D  
                    l850 004F                      l842 0038                      l834 0019  
                    l828 012E                      l852 0051                      l844 003E  
                    l836 001C                      l860 009F                      l916 0111  
                    l854 0053                      l846 0045                      l838 0027  
                    l870 00AE                      l862 00A3                      l918 011C  
                    l856 0055                      l848 004B                      l880 00B9  
                    l872 00AF                      l864 00A4                      l858 0057  
                    l890 00C4                      l882 00BE                      l874 00B5  
                    l866 00AC                      l892 00C5                      l884 00C1  
                    l876 00B7                      l868 00AD                      l894 00C7  
                    l886 00C2                      l878 00B8                      l896 00F8  
                    l888 00C3                      l898 00FA                      _GIE 005F  
                    _RE0 0048                      _RE1 0049                      u117 0123  
                    u127 0022                      u137 0033                      u147 0042  
                    u157 005D                      u167 0137                      u177 0100  
                    u187 010C                      _isr 0062                     _ADIE 0466  
                   _ADIF 0066                     ?_isr 0070                     _ADON 00F8  
                   _PEIE 005E                     i1l72 0098                     i1l87 00F4  
                   u6_25 00CF                     u7_20 0068                     u7_21 0067  
                   u8_20 0071                     u8_21 0070                     u9_20 008A  
                   u9_21 0089                     _main 0111                     btemp 007E  
                   start 000C          __end_of_Lcd_Cmd 0140                    ??_isr 007B  
                  ?_main 0070                    _ANSEL 0188                    i1l910 00EA  
                  i1l912 00F0                    i1l904 00CA                    i1l906 00CA  
                  i1l930 0081                    i1l922 0062                    i1l908 00DB  
                  i1l932 008A                    i1l924 0068                    i1l934 0095  
                  i1l926 0071                    i1l936 0097                    i1l928 007C  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _setup 009F                    pclath 000A  
                  status 0003                    wtemp0 007E         __end_of_Lcd_Init 0062  
        __initialization 000F             __end_of_main 012A                   ??_main 0025  
                 _ADRESH 001E                   _ADRESL 009E              readAnalog@a 0075  
            readAnalog@b 0077                   ?_setup 0070                   _ANSELH 0189  
              ??_Lcd_Cmd 0020  __size_of_Lcd_Write_Char 001C                   saved_w 007E  
__end_of__initialization 0015           __pcstackCOMMON 0070            __end_of_setup 00CA  
              ?_Lcd_Init 0070                  ??_setup 0025               __pbssBANK0 0026  
             __pmaintext 0111               __pintentry 0004               ??_Lcd_Init 0023  
         _Lcd_Write_Char 00F5                  _Lcd_Cmd 012A               _readAnalog 00CA  
                __ptext1 009F                  __ptext2 0019                  __ptext3 012A  
                __ptext4 00F5                  __ptext5 0062                  __ptext6 00CA  
           __size_of_isr 003D   __end_of_Lcd_Write_Char 0111     end_of_initialization 0015  
        ?_Lcd_Write_Char 0070              ?_readAnalog 0070      start_initialization 000F  
            __end_of_isr 009F        __size_of_Lcd_Init 0049         readAnalog@result 0079  
        Lcd_Write_Char@a 0022                ___latbits 0002            __pcstackBANK0 0020  
    __size_of_readAnalog 002B                 ?_Lcd_Cmd 0070           __size_of_setup 002B  
      interrupt_function 0004                 Lcd_Cmd@a 0022               _ADCON0bits 001F  
       ??_Lcd_Write_Char 0020                 _Lcd_Init 0019         __size_of_Lcd_Cmd 0016  
           ??_readAnalog 0072       __end_of_readAnalog 00F5            __size_of_main 0019  
               _voltage1 0028                 _voltage2 0026                 intlevel1 0000  
