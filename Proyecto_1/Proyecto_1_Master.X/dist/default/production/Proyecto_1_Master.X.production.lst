

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Aug 31 19:18:11 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  000E                     _TMR1	set	14
   299  0009                     _PORTE	set	9
   300  0008                     _PORTD	set	8
   301  0007                     _PORTC	set	7
   302  0006                     _PORTB	set	6
   303  0012                     _T2CONbits	set	18
   304  0012                     _T2CON	set	18
   305  0010                     _T1CONbits	set	16
   306  0015                     _CCPR1L	set	21
   307  0013                     _SSPBUF	set	19
   308  0014                     _SSPCON	set	20
   309  0019                     _TXREG	set	25
   310  0018                     _RCSTAbits	set	24
   311  0005                     _PORTA	set	5
   312  001E                     _ADRESH	set	30
   313  0061                     _TMR2IF	set	97
   314  00BA                     _CCP1M2	set	186
   315  00BB                     _CCP1M3	set	187
   316  0060                     _TMR1IF	set	96
   317  0080                     _TMR1ON	set	128
   318  0041                     _RD1	set	65
   319  0040                     _RD0	set	64
   320  0063                     _SSPIF	set	99
   321  005E                     _PEIE	set	94
   322  005F                     _GIE	set	95
   323  0049                     _RE1	set	73
   324  0048                     _RE0	set	72
   325  0092                     _PR2	set	146
   326  0089                     _TRISE	set	137
   327  0088                     _TRISD	set	136
   328  0087                     _TRISC	set	135
   329  0086                     _TRISB	set	134
   330  0085                     _TRISA	set	133
   331  0091                     _SSPCON2bits	set	145
   332  0093                     _SSPADD	set	147
   333  0091                     _SSPCON2	set	145
   334  0094                     _SSPSTATbits	set	148
   335  0094                     _SSPSTAT	set	148
   336  0099                     _SPBRG	set	153
   337  009A                     _SPBRGH	set	154
   338  0098                     _TXSTAbits	set	152
   339  0087                     _TRISCbits	set	135
   340  009E                     _ADRESL	set	158
   341  0460                     _TMR1IE	set	1120
   342  0463                     _SSPIE	set	1123
   343  043C                     _TRISC4	set	1084
   344  043B                     _TRISC3	set	1083
   345  043D                     _TRISC5	set	1085
   346  0189                     _ANSELH	set	393
   347  0188                     _ANSEL	set	392
   348  0C3B                     _BRG16	set	3131
   349                           
   350                           	psect	strings
   351  031A                     __pstrings:
   352  031A                     stringtab:
   353  031A                     __stringtab:
   354  031A                     stringcode:	
   355                           ;	String table - string pointers are 1 byte each
   356                           
   357  031A                     stringdir:
   358  031A  3003               	movlw	high stringdir
   359  031B  008A               	movwf	10
   360  031C  0804               	movf	4,w
   361  031D  0A84               	incf	4,f
   362  031E  0782               	addwf	2,f
   363  031F                     __stringbase:
   364  031F  3400               	retlw	0
   365  0320                     __end_of__stringtab:
   366  0320                     STR_1:
   367  0320  3420               	retlw	32	;' '
   368  0321  344C               	retlw	76	;'L'
   369  0322  346F               	retlw	111	;'o'
   370  0323  3463               	retlw	99	;'c'
   371  0324  346B               	retlw	107	;'k'
   372  0325  3420               	retlw	32	;' '
   373  0326  3444               	retlw	68	;'D'
   374  0327  346F               	retlw	111	;'o'
   375  0328  346F               	retlw	111	;'o'
   376  0329  3472               	retlw	114	;'r'
   377  032A  3420               	retlw	32	;' '
   378  032B  344C               	retlw	76	;'L'
   379  032C  3469               	retlw	105	;'i'
   380  032D  3467               	retlw	103	;'g'
   381  032E  3468               	retlw	104	;'h'
   382  032F  3474               	retlw	116	;'t'
   383  0330  3473               	retlw	115	;'s'
   384  0331  3400               	retlw	0
   385  0332                     STR_3:
   386  0332  3420               	retlw	32	;' '
   387  0333  344E               	retlw	78	;'N'
   388  0334  344F               	retlw	79	;'O'
   389  0335  3420               	retlw	32	;' '
   390  0336  3400               	retlw	0
   391  0337                     STR_5:
   392  0337  344F               	retlw	79	;'O'
   393  0338  3450               	retlw	80	;'P'
   394  0339  3445               	retlw	69	;'E'
   395  033A  344E               	retlw	78	;'N'
   396  033B  3400               	retlw	0
   397  033C                     STR_4:
   398  033C  344F               	retlw	79	;'O'
   399  033D  3446               	retlw	70	;'F'
   400  033E  3446               	retlw	70	;'F'
   401  033F  3400               	retlw	0
   402  0340                     STR_2:
   403  0340  3420               	retlw	32	;' '
   404  0341  344F               	retlw	79	;'O'
   405  0342  344E               	retlw	78	;'N'
   406  0343  3400               	retlw	0
   407  0332                     
   408                           	psect	cinit
   409  000F                     start_initialization:	
   410                           ; #config settings
   411                           
   412  000F                     __initialization:
   413                           
   414                           ; Clear objects allocated to COMMON
   415  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   416  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   417  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   418                           
   419                           ; Clear objects allocated to BANK0
   420  0012  1283               	bcf	3,5	;RP0=0, select bank0
   421  0013  1303               	bcf	3,6	;RP1=0, select bank0
   422  0014  01B4               	clrf	__pbssBANK0& (0+127)
   423  0015  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   424  0016  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   425  0017  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   426  0018  01B8               	clrf	(__pbssBANK0+4)& (0+127)
   427  0019  01B9               	clrf	(__pbssBANK0+5)& (0+127)
   428  001A  01BA               	clrf	(__pbssBANK0+6)& (0+127)
   429  001B  01BB               	clrf	(__pbssBANK0+7)& (0+127)
   430  001C  01BC               	clrf	(__pbssBANK0+8)& (0+127)
   431  001D  01BD               	clrf	(__pbssBANK0+9)& (0+127)
   432  001E  01BE               	clrf	(__pbssBANK0+10)& (0+127)
   433  001F                     end_of_initialization:	
   434                           ;End of C runtime variable initialization code
   435                           
   436  001F                     __end_of__initialization:
   437  001F  0183               	clrf	3
   438  0020  120A  118A  2823   	ljmp	_main	;jump to C main() function
   439                           
   440                           	psect	bssCOMMON
   441  0078                     __pbssCOMMON:
   442  0078                     _cL:
   443  0078                     	ds	1
   444  0079                     _mL:
   445  0079                     	ds	1
   446  007A                     _light_compare:
   447  007A                     	ds	1
   448                           
   449                           	psect	bssBANK0
   450  0034                     __pbssBANK0:
   451  0034                     _close:
   452  0034                     	ds	1
   453  0035                     _time:
   454  0035                     	ds	1
   455  0036                     _in_sensor:
   456  0036                     	ds	1
   457  0037                     _keep_door_open:
   458  0037                     	ds	1
   459  0038                     _door:
   460  0038                     	ds	1
   461  0039                     _keep_lock_off:
   462  0039                     	ds	1
   463  003A                     _lock:
   464  003A                     	ds	1
   465  003B                     _out_flag:
   466  003B                     	ds	1
   467  003C                     _uL:
   468  003C                     	ds	1
   469  003D                     _dL:
   470  003D                     	ds	1
   471  003E                     _light:
   472  003E                     	ds	1
   473                           
   474                           	psect	cstackCOMMON
   475  0070                     __pcstackCOMMON:
   476  0070                     ?_setup:
   477  0070                     ?_Lcd_Cmd:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0070                     ?_Lcd_Init:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ?_Lcd_Write_Char:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ?_Lcd_Write_String:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_UART_Init:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ?_UART_Write_Char:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ?_I2C_Master_Wait:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ?_I2C_Master_Start:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_I2C_Master_Stop:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ?_main:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?_isr:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ??_isr:	
   511                           ; 1 bytes @ 0x0
   512                           
   513                           
   514                           ; 1 bytes @ 0x0
   515  0070                     	ds	3
   516  0073                     ??_Lcd_Cmd:
   517  0073                     ??_Lcd_Write_Char:	
   518                           ; 1 bytes @ 0x3
   519                           
   520  0073                     ??_UART_Init:	
   521                           ; 1 bytes @ 0x3
   522                           
   523  0073                     ??_UART_Write_Char:	
   524                           ; 1 bytes @ 0x3
   525                           
   526  0073                     ??_I2C_Master_Wait:	
   527                           ; 1 bytes @ 0x3
   528                           
   529  0073                     ??_I2C_Master_Start:	
   530                           ; 1 bytes @ 0x3
   531                           
   532  0073                     ??_I2C_Master_Stop:	
   533                           ; 1 bytes @ 0x3
   534                           
   535  0073                     ?_I2C_Master_Write:	
   536                           ; 1 bytes @ 0x3
   537                           
   538  0073                     ??___lldiv:	
   539                           ; 1 bytes @ 0x3
   540                           
   541  0073                     ?_I2C_Master_Read:	
   542                           ; 1 bytes @ 0x3
   543                           
   544  0073                     UART_Write_Char@character:	
   545                           ; 2 bytes @ 0x3
   546                           
   547  0073                     I2C_Master_Write@d:	
   548                           ; 1 bytes @ 0x3
   549                           
   550  0073                     I2C_Master_Read@a:	
   551                           ; 2 bytes @ 0x3
   552                           
   553                           
   554                           ; 2 bytes @ 0x3
   555  0073                     	ds	1
   556  0074                     ??_I2C_Master_Init:
   557                           
   558                           ; 1 bytes @ 0x4
   559  0074                     	ds	1
   560  0075                     ??_I2C_Master_Write:
   561  0075                     ??_I2C_Master_Read:	
   562                           ; 1 bytes @ 0x5
   563                           
   564  0075                     Lcd_Cmd@a:	
   565                           ; 1 bytes @ 0x5
   566                           
   567  0075                     Lcd_Write_Char@a:	
   568                           ; 1 bytes @ 0x5
   569                           
   570                           
   571                           ; 1 bytes @ 0x5
   572  0075                     	ds	1
   573  0076                     ??_Lcd_Init:
   574  0076                     ??_Lcd_Write_String:	
   575                           ; 1 bytes @ 0x6
   576                           
   577                           
   578                           ; 1 bytes @ 0x6
   579  0076                     	ds	2
   580  0078                     ??_setup:
   581                           
   582                           	psect	cstackBANK0
   583  0020                     __pcstackBANK0:	
   584                           ; 1 bytes @ 0x8
   585                           
   586  0020                     ?___lldiv:
   587  0020                     Lcd_Write_String@i:	
   588                           ; 4 bytes @ 0x0
   589                           
   590  0020                     I2C_Master_Read@temp:	
   591                           ; 2 bytes @ 0x0
   592                           
   593  0020                     ___lldiv@divisor:	
   594                           ; 2 bytes @ 0x0
   595                           
   596                           
   597                           ; 4 bytes @ 0x0
   598  0020                     	ds	2
   599  0022                     Lcd_Write_String@a:
   600                           
   601                           ; 1 bytes @ 0x2
   602  0022                     	ds	2
   603  0024                     ___lldiv@dividend:
   604                           
   605                           ; 4 bytes @ 0x4
   606  0024                     	ds	4
   607  0028                     ___lldiv@quotient:
   608                           
   609                           ; 4 bytes @ 0x8
   610  0028                     	ds	4
   611  002C                     ___lldiv@counter:
   612                           
   613                           ; 1 bytes @ 0xC
   614  002C                     	ds	1
   615  002D                     ?_I2C_Master_Init:
   616  002D                     I2C_Master_Init@c:	
   617                           ; 1 bytes @ 0xD
   618                           
   619                           
   620                           ; 4 bytes @ 0xD
   621  002D                     	ds	4
   622  0031                     ??_main:
   623                           
   624                           ; 1 bytes @ 0x11
   625  0031                     	ds	3
   626                           
   627                           	psect	maintext
   628  0023                     __pmaintext:	
   629 ;;
   630 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   631 ;;
   632 ;; *************** function _main *****************
   633 ;; Defined at:
   634 ;;		line 70 in file "main.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;		None
   637 ;; Auto vars:     Size  Location     Type
   638 ;;		None
   639 ;; Return value:  Size  Location     Type
   640 ;;                  1    wreg      void 
   641 ;; Registers used:
   642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   643 ;; Tracked objects:
   644 ;;		On entry : B00/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   648 ;;      Params:         0       0       0       0       0
   649 ;;      Locals:         0       0       0       0       0
   650 ;;      Temps:          0       3       0       0       0
   651 ;;      Totals:         0       3       0       0       0
   652 ;;Total ram usage:        3 bytes
   653 ;; Hardware stack levels required when called: 4
   654 ;; This function calls:
   655 ;;		_I2C_Master_Read
   656 ;;		_I2C_Master_Start
   657 ;;		_I2C_Master_Stop
   658 ;;		_I2C_Master_Write
   659 ;;		_Lcd_Cmd
   660 ;;		_Lcd_Write_String
   661 ;;		_UART_Write_Char
   662 ;;		_setup
   663 ;; This function is called by:
   664 ;;		Startup code after reset
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           
   669                           ;psect for function _main
   670  0023                     _main:
   671  0023                     l1647:	
   672                           ;incstack = 0
   673                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   674                           
   675                           
   676                           ;main.c: 71:     setup();
   677  0023  120A  118A  225E  120A  118A  	fcall	_setup
   678  0028                     l1649:
   679                           
   680                           ;main.c: 72:     Lcd_Write_String(" Lock Door Lights");
   681  0028  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   682  0029  120A  118A  2344  120A  118A  	fcall	_Lcd_Write_String
   683  002E                     l1651:
   684                           
   685                           ;main.c: 73:     Lcd_Cmd(0b11000000);
   686  002E  30C0               	movlw	192
   687  002F  120A  118A  239C  120A  118A  	fcall	_Lcd_Cmd
   688                           
   689                           ;main.c: 74:     Lcd_Write_String(" ON");
   690  0034  3021               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   691  0035  120A  118A  2344  120A  118A  	fcall	_Lcd_Write_String
   692  003A                     l1653:
   693                           
   694                           ;main.c: 75:     Lcd_Cmd(0b11000100);
   695  003A  30C4               	movlw	196
   696  003B  120A  118A  239C  120A  118A  	fcall	_Lcd_Cmd
   697  0040                     l1655:
   698                           
   699                           ;main.c: 76:     Lcd_Write_String(" NO ");
   700  0040  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   701  0041  120A  118A  2344  120A  118A  	fcall	_Lcd_Write_String
   702  0046                     l265:	
   703                           ;main.c: 85:     while(1){
   704                           
   705                           
   706                           ;main.c: 87:         I2C_Master_Start();
   707  0046  120A  118A  23F0  120A  118A  	fcall	_I2C_Master_Start
   708                           
   709                           ;main.c: 88:         I2C_Master_Write(0b00000001);
   710  004B  3001               	movlw	1
   711  004C  00F3               	movwf	I2C_Master_Write@d
   712  004D  3000               	movlw	0
   713  004E  00F4               	movwf	I2C_Master_Write@d+1
   714  004F  120A  118A  23DD  120A  118A  	fcall	_I2C_Master_Write
   715                           
   716                           ;main.c: 89:         out_flag = I2C_Master_Read(0);
   717  0054  3000               	movlw	0
   718  0055  00F3               	movwf	I2C_Master_Read@a
   719  0056  00F4               	movwf	I2C_Master_Read@a+1
   720  0057  120A  118A  22EA  120A  118A  	fcall	_I2C_Master_Read
   721  005C  0873               	movf	?_I2C_Master_Read,w
   722  005D  1283               	bcf	3,5	;RP0=0, select bank0
   723  005E  1303               	bcf	3,6	;RP1=0, select bank0
   724  005F  00B1               	movwf	??_main
   725  0060  0831               	movf	??_main,w
   726  0061  00BB               	movwf	_out_flag
   727                           
   728                           ;main.c: 90:         I2C_Master_Stop();
   729  0062  120A  118A  23E7  120A  118A  	fcall	_I2C_Master_Stop
   730  0067                     l1657:
   731                           
   732                           ;main.c: 91:         _delay((unsigned long)((200)*(4000000/4000.0)));
   733  0067  3002               	movlw	2
   734  0068  1283               	bcf	3,5	;RP0=0, select bank0
   735  0069  1303               	bcf	3,6	;RP1=0, select bank0
   736  006A  00B3               	movwf	??_main+2
   737  006B  3004               	movlw	4
   738  006C  00B2               	movwf	??_main+1
   739  006D  30B9               	movlw	185
   740  006E  00B1               	movwf	??_main
   741  006F                     u827:
   742  006F  0BB1               	decfsz	??_main,f
   743  0070  286F               	goto	u827
   744  0071  0BB2               	decfsz	??_main+1,f
   745  0072  286F               	goto	u827
   746  0073  0BB3               	decfsz	??_main+2,f
   747  0074  286F               	goto	u827
   748  0075  2876               	nop2
   749  0076                     l1659:
   750                           
   751                           ;main.c: 92:         lock = out_flag & 0b00000001;
   752  0076  1283               	bcf	3,5	;RP0=0, select bank0
   753  0077  1303               	bcf	3,6	;RP1=0, select bank0
   754  0078  083B               	movf	_out_flag,w
   755  0079  3901               	andlw	1
   756  007A  00B1               	movwf	??_main
   757  007B  0831               	movf	??_main,w
   758  007C  00BA               	movwf	_lock
   759  007D                     l1661:
   760                           
   761                           ;main.c: 93:         door = out_flag & 0b00000010;
   762  007D  083B               	movf	_out_flag,w
   763  007E  3902               	andlw	2
   764  007F  00B1               	movwf	??_main
   765  0080  0831               	movf	??_main,w
   766  0081  00B8               	movwf	_door
   767  0082                     l1663:
   768                           
   769                           ;main.c: 96:         I2C_Master_Start();
   770  0082  120A  118A  23F0  120A  118A  	fcall	_I2C_Master_Start
   771  0087                     l1665:
   772                           
   773                           ;main.c: 97:         I2C_Master_Write(0b00000011);
   774  0087  3003               	movlw	3
   775  0088  00F3               	movwf	I2C_Master_Write@d
   776  0089  3000               	movlw	0
   777  008A  00F4               	movwf	I2C_Master_Write@d+1
   778  008B  120A  118A  23DD  120A  118A  	fcall	_I2C_Master_Write
   779  0090                     l1667:
   780                           
   781                           ;main.c: 98:         in_sensor = I2C_Master_Read(0);
   782  0090  3000               	movlw	0
   783  0091  00F3               	movwf	I2C_Master_Read@a
   784  0092  00F4               	movwf	I2C_Master_Read@a+1
   785  0093  120A  118A  22EA  120A  118A  	fcall	_I2C_Master_Read
   786  0098  0873               	movf	?_I2C_Master_Read,w
   787  0099  1283               	bcf	3,5	;RP0=0, select bank0
   788  009A  1303               	bcf	3,6	;RP1=0, select bank0
   789  009B  00B1               	movwf	??_main
   790  009C  0831               	movf	??_main,w
   791  009D  00B6               	movwf	_in_sensor
   792  009E                     l1669:
   793                           
   794                           ;main.c: 99:         I2C_Master_Stop();
   795  009E  120A  118A  23E7  120A  118A  	fcall	_I2C_Master_Stop
   796  00A3                     l1671:
   797                           
   798                           ;main.c: 100:         _delay((unsigned long)((200)*(4000000/4000.0)));
   799  00A3  3002               	movlw	2
   800  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   801  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   802  00A6  00B3               	movwf	??_main+2
   803  00A7  3004               	movlw	4
   804  00A8  00B2               	movwf	??_main+1
   805  00A9  30B9               	movlw	185
   806  00AA  00B1               	movwf	??_main
   807  00AB                     u837:
   808  00AB  0BB1               	decfsz	??_main,f
   809  00AC  28AB               	goto	u837
   810  00AD  0BB2               	decfsz	??_main+1,f
   811  00AE  28AB               	goto	u837
   812  00AF  0BB3               	decfsz	??_main+2,f
   813  00B0  28AB               	goto	u837
   814  00B1  28B2               	nop2
   815                           
   816                           ;main.c: 103:         UART_Write_Char(91);
   817  00B2  305B               	movlw	91
   818  00B3  120A  118A  23D1  120A  118A  	fcall	_UART_Write_Char
   819                           
   820                           ;main.c: 104:         UART_Write_Char(lock+48);
   821  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   822  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   823  00BA  083A               	movf	_lock,w
   824  00BB  3E30               	addlw	48
   825  00BC  120A  118A  23D1  120A  118A  	fcall	_UART_Write_Char
   826                           
   827                           ;main.c: 105:         UART_Write_Char(44);
   828  00C1  302C               	movlw	44
   829  00C2  120A  118A  23D1  120A  118A  	fcall	_UART_Write_Char
   830                           
   831                           ;main.c: 106:         UART_Write_Char(door+48);
   832  00C7  1283               	bcf	3,5	;RP0=0, select bank0
   833  00C8  1303               	bcf	3,6	;RP1=0, select bank0
   834  00C9  0838               	movf	_door,w
   835  00CA  3E30               	addlw	48
   836  00CB  120A  118A  23D1  120A  118A  	fcall	_UART_Write_Char
   837                           
   838                           ;main.c: 107:         UART_Write_Char(44);
   839  00D0  302C               	movlw	44
   840  00D1  120A  118A  23D1  120A  118A  	fcall	_UART_Write_Char
   841                           
   842                           ;main.c: 108:         UART_Write_Char(light+48);
   843  00D6  1283               	bcf	3,5	;RP0=0, select bank0
   844  00D7  1303               	bcf	3,6	;RP1=0, select bank0
   845  00D8  083E               	movf	_light,w
   846  00D9  3E30               	addlw	48
   847  00DA  120A  118A  23D1  120A  118A  	fcall	_UART_Write_Char
   848                           
   849                           ;main.c: 109:         UART_Write_Char(44);
   850  00DF  302C               	movlw	44
   851  00E0  120A  118A  23D1  120A  118A  	fcall	_UART_Write_Char
   852                           
   853                           ;main.c: 110:         UART_Write_Char(93);
   854  00E5  305D               	movlw	93
   855  00E6  120A  118A  23D1  120A  118A  	fcall	_UART_Write_Char
   856  00EB                     l1673:
   857                           
   858                           ;main.c: 113:         if(lock != 0 && keep_lock_off == 0){
   859  00EB  1283               	bcf	3,5	;RP0=0, select bank0
   860  00EC  1303               	bcf	3,6	;RP1=0, select bank0
   861  00ED  083A               	movf	_lock,w
   862  00EE  1903               	btfsc	3,2
   863  00EF  28F1               	goto	u711
   864  00F0  28F2               	goto	u710
   865  00F1                     u711:
   866  00F1  2909               	goto	l1685
   867  00F2                     u710:
   868  00F2                     l1675:
   869  00F2  0839               	movf	_keep_lock_off,w
   870  00F3  1D03               	btfss	3,2
   871  00F4  28F6               	goto	u721
   872  00F5  28F7               	goto	u720
   873  00F6                     u721:
   874  00F6  2909               	goto	l1685
   875  00F7                     u720:
   876  00F7                     l1677:
   877                           
   878                           ;main.c: 114:             CCPR1L = 128;
   879  00F7  3080               	movlw	128
   880  00F8  0095               	movwf	21	;volatile
   881  00F9                     l1679:
   882                           
   883                           ;main.c: 115:             Lcd_Cmd(0b11000000);
   884  00F9  30C0               	movlw	192
   885  00FA  120A  118A  239C  120A  118A  	fcall	_Lcd_Cmd
   886  00FF                     l1681:
   887                           
   888                           ;main.c: 116:             Lcd_Write_String("OFF");
   889  00FF  301D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   890  0100  120A  118A  2344  120A  118A  	fcall	_Lcd_Write_String
   891  0105                     l1683:
   892                           
   893                           ;main.c: 117:             keep_lock_off = 1;
   894  0105  1283               	bcf	3,5	;RP0=0, select bank0
   895  0106  1303               	bcf	3,6	;RP1=0, select bank0
   896  0107  01B9               	clrf	_keep_lock_off
   897  0108  0AB9               	incf	_keep_lock_off,f
   898  0109                     l1685:
   899                           
   900                           ;main.c: 120:         if (door != 0 && keep_door_open == 0){
   901  0109  0838               	movf	_door,w
   902  010A  1903               	btfsc	3,2
   903  010B  290D               	goto	u731
   904  010C  290E               	goto	u730
   905  010D                     u731:
   906  010D  2933               	goto	l1703
   907  010E                     u730:
   908  010E                     l1687:
   909  010E  0837               	movf	_keep_door_open,w
   910  010F  1D03               	btfss	3,2
   911  0110  2912               	goto	u741
   912  0111  2913               	goto	u740
   913  0112                     u741:
   914  0112  2933               	goto	l1703
   915  0113                     u740:
   916  0113                     l1689:
   917                           
   918                           ;main.c: 121:             Lcd_Cmd(0b11000101);
   919  0113  30C5               	movlw	197
   920  0114  120A  118A  239C  120A  118A  	fcall	_Lcd_Cmd
   921  0119                     l1691:
   922                           
   923                           ;main.c: 122:             Lcd_Write_String("OPEN");
   924  0119  3018               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   925  011A  120A  118A  2344  120A  118A  	fcall	_Lcd_Write_String
   926  011F                     l1693:
   927                           
   928                           ;main.c: 123:             RD0 = 0;
   929  011F  1283               	bcf	3,5	;RP0=0, select bank0
   930  0120  1303               	bcf	3,6	;RP1=0, select bank0
   931  0121  1008               	bcf	8,0	;volatile
   932  0122                     l1695:
   933                           
   934                           ;main.c: 124:             RD1 = 1;
   935  0122  1488               	bsf	8,1	;volatile
   936  0123                     l1697:
   937                           
   938                           ;main.c: 125:             _delay((unsigned long)((150)*(4000000/4000.0)));
   939  0123  30C3               	movlw	195
   940  0124  1283               	bcf	3,5	;RP0=0, select bank0
   941  0125  1303               	bcf	3,6	;RP1=0, select bank0
   942  0126  00B2               	movwf	??_main+1
   943  0127  30CC               	movlw	204
   944  0128  00B1               	movwf	??_main
   945  0129                     u847:
   946  0129  0BB1               	decfsz	??_main,f
   947  012A  2929               	goto	u847
   948  012B  0BB2               	decfsz	??_main+1,f
   949  012C  2929               	goto	u847
   950  012D  0000               	nop
   951  012E                     l1699:
   952                           
   953                           ;main.c: 126:             RD1 = 0;
   954  012E  1283               	bcf	3,5	;RP0=0, select bank0
   955  012F  1303               	bcf	3,6	;RP1=0, select bank0
   956  0130  1088               	bcf	8,1	;volatile
   957  0131                     l1701:
   958                           
   959                           ;main.c: 127:             keep_door_open = 1;
   960  0131  01B7               	clrf	_keep_door_open
   961  0132  0AB7               	incf	_keep_door_open,f
   962  0133                     l1703:
   963                           
   964                           ;main.c: 130:         if(in_sensor!=0){
   965  0133  0836               	movf	_in_sensor,w
   966  0134  1903               	btfsc	3,2
   967  0135  2937               	goto	u751
   968  0136  2938               	goto	u750
   969  0137                     u751:
   970  0137  293B               	goto	l1709
   971  0138                     u750:
   972  0138                     l1705:
   973                           
   974                           ;main.c: 131:             TMR1 = 0;
   975  0138  018E               	clrf	14	;volatile
   976  0139  018F               	clrf	15	;volatile
   977  013A                     l1707:
   978                           
   979                           ;main.c: 132:             TMR1ON = 1;
   980  013A  1410               	bsf	16,0	;volatile
   981  013B                     l1709:
   982                           
   983                           ;main.c: 135:         if(time>=4 && keep_lock_off && keep_door_open){
   984  013B  3004               	movlw	4
   985  013C  0235               	subwf	_time,w
   986  013D  1C03               	skipc
   987  013E  2940               	goto	u761
   988  013F  2941               	goto	u760
   989  0140                     u761:
   990  0140  294F               	goto	l1721
   991  0141                     u760:
   992  0141                     l1711:
   993  0141  0839               	movf	_keep_lock_off,w
   994  0142  1903               	btfsc	3,2
   995  0143  2945               	goto	u771
   996  0144  2946               	goto	u770
   997  0145                     u771:
   998  0145  294F               	goto	l1721
   999  0146                     u770:
  1000  0146                     l1713:
  1001  0146  0837               	movf	_keep_door_open,w
  1002  0147  1903               	btfsc	3,2
  1003  0148  294A               	goto	u781
  1004  0149  294B               	goto	u780
  1005  014A                     u781:
  1006  014A  294F               	goto	l1721
  1007  014B                     u780:
  1008  014B                     l1715:
  1009                           
  1010                           ;main.c: 136:             time = 0;
  1011  014B  01B5               	clrf	_time
  1012  014C                     l1717:
  1013                           
  1014                           ;main.c: 137:             TMR1ON = 0;
  1015  014C  1010               	bcf	16,0	;volatile
  1016  014D                     l1719:
  1017                           
  1018                           ;main.c: 138:             close = 1;
  1019  014D  01B4               	clrf	_close
  1020  014E  0AB4               	incf	_close,f
  1021  014F                     l1721:
  1022                           
  1023                           ;main.c: 141:         if(close == 1 && keep_door_open == 1 && keep_lock_off == 1){
  1024  014F  0334               	decf	_close,w
  1025  0150  1D03               	btfss	3,2
  1026  0151  2953               	goto	u791
  1027  0152  2954               	goto	u790
  1028  0153                     u791:
  1029  0153  2846               	goto	l265
  1030  0154                     u790:
  1031  0154                     l1723:
  1032  0154  0337               	decf	_keep_door_open,w
  1033  0155  1D03               	btfss	3,2
  1034  0156  2958               	goto	u801
  1035  0157  2959               	goto	u800
  1036  0158                     u801:
  1037  0158  2846               	goto	l265
  1038  0159                     u800:
  1039  0159                     l1725:
  1040  0159  0339               	decf	_keep_lock_off,w
  1041  015A  1D03               	btfss	3,2
  1042  015B  295D               	goto	u811
  1043  015C  295E               	goto	u810
  1044  015D                     u811:
  1045  015D  2846               	goto	l265
  1046  015E                     u810:
  1047  015E                     l1727:
  1048                           
  1049                           ;main.c: 142:             close = 0;
  1050  015E  01B4               	clrf	_close
  1051                           
  1052                           ;main.c: 143:             keep_door_open = 0;
  1053  015F  01B7               	clrf	_keep_door_open
  1054                           
  1055                           ;main.c: 144:             keep_lock_off = 0;
  1056  0160  01B9               	clrf	_keep_lock_off
  1057  0161                     l1729:
  1058                           
  1059                           ;main.c: 145:             Lcd_Cmd(0b11000101);
  1060  0161  30C5               	movlw	197
  1061  0162  120A  118A  239C  120A  118A  	fcall	_Lcd_Cmd
  1062  0167                     l1731:
  1063                           
  1064                           ;main.c: 146:             Lcd_Write_String(" NO ");
  1065  0167  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1066  0168  120A  118A  2344  120A  118A  	fcall	_Lcd_Write_String
  1067  016D                     l1733:
  1068                           
  1069                           ;main.c: 147:             RD0=1;
  1070  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1071  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1072  016F  1408               	bsf	8,0	;volatile
  1073  0170                     l1735:
  1074                           
  1075                           ;main.c: 148:             RD1=0;
  1076  0170  1088               	bcf	8,1	;volatile
  1077  0171                     l1737:
  1078                           
  1079                           ;main.c: 149:             _delay((unsigned long)((150)*(4000000/4000.0)));
  1080  0171  30C3               	movlw	195
  1081  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1082  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1083  0174  00B2               	movwf	??_main+1
  1084  0175  30CC               	movlw	204
  1085  0176  00B1               	movwf	??_main
  1086  0177                     u857:
  1087  0177  0BB1               	decfsz	??_main,f
  1088  0178  2977               	goto	u857
  1089  0179  0BB2               	decfsz	??_main+1,f
  1090  017A  2977               	goto	u857
  1091  017B  0000               	nop
  1092  017C                     l1739:
  1093                           
  1094                           ;main.c: 150:             RD0=0;
  1095  017C  1283               	bcf	3,5	;RP0=0, select bank0
  1096  017D  1303               	bcf	3,6	;RP1=0, select bank0
  1097  017E  1008               	bcf	8,0	;volatile
  1098  017F                     l1741:
  1099                           
  1100                           ;main.c: 151:             _delay((unsigned long)((150)*(4000000/4000.0)));
  1101  017F  30C3               	movlw	195
  1102  0180  1283               	bcf	3,5	;RP0=0, select bank0
  1103  0181  1303               	bcf	3,6	;RP1=0, select bank0
  1104  0182  00B2               	movwf	??_main+1
  1105  0183  30CC               	movlw	204
  1106  0184  00B1               	movwf	??_main
  1107  0185                     u867:
  1108  0185  0BB1               	decfsz	??_main,f
  1109  0186  2985               	goto	u867
  1110  0187  0BB2               	decfsz	??_main+1,f
  1111  0188  2985               	goto	u867
  1112  0189  0000               	nop
  1113  018A                     l1743:
  1114                           
  1115                           ;main.c: 152:             CCPR1L = 32;
  1116  018A  3020               	movlw	32
  1117  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1118  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1119  018D  0095               	movwf	21	;volatile
  1120  018E                     l1745:
  1121                           
  1122                           ;main.c: 153:             Lcd_Cmd(0b11000000);
  1123  018E  30C0               	movlw	192
  1124  018F  120A  118A  239C  120A  118A  	fcall	_Lcd_Cmd
  1125  0194                     l1747:
  1126                           
  1127                           ;main.c: 154:             Lcd_Write_String(" ON");
  1128  0194  3021               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1129  0195  120A  118A  2344  120A  118A  	fcall	_Lcd_Write_String
  1130  019A  2846               	goto	l265
  1131  019B  120A  118A  280C   	ljmp	start
  1132  019E                     __end_of_main:
  1133                           
  1134                           	psect	text1
  1135  025E                     __ptext1:	
  1136 ;; *************** function _setup *****************
  1137 ;; Defined at:
  1138 ;;		line 162 in file "main.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;		None
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;		None
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      void 
  1145 ;; Registers used:
  1146 ;;		wreg, status,2, status,0, pclath, cstack
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1152 ;;      Params:         0       0       0       0       0
  1153 ;;      Locals:         0       0       0       0       0
  1154 ;;      Temps:          0       0       0       0       0
  1155 ;;      Totals:         0       0       0       0       0
  1156 ;;Total ram usage:        0 bytes
  1157 ;; Hardware stack levels used: 1
  1158 ;; Hardware stack levels required when called: 3
  1159 ;; This function calls:
  1160 ;;		_I2C_Master_Init
  1161 ;;		_Lcd_Init
  1162 ;;		_UART_Init
  1163 ;; This function is called by:
  1164 ;;		_main
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           
  1169                           ;psect for function _setup
  1170  025E                     _setup:
  1171  025E                     l1601:	
  1172                           ;incstack = 0
  1173                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1174                           
  1175                           
  1176                           ;main.c: 164:     ANSEL = 0;
  1177  025E  1683               	bsf	3,5	;RP0=1, select bank3
  1178  025F  1703               	bsf	3,6	;RP1=1, select bank3
  1179  0260  0188               	clrf	8	;volatile
  1180                           
  1181                           ;main.c: 165:     ANSELH = 0;
  1182  0261  0189               	clrf	9	;volatile
  1183                           
  1184                           ;main.c: 166:     TRISA = 0;
  1185  0262  1683               	bsf	3,5	;RP0=1, select bank1
  1186  0263  1303               	bcf	3,6	;RP1=0, select bank1
  1187  0264  0185               	clrf	5	;volatile
  1188                           
  1189                           ;main.c: 167:     TRISB = 0;
  1190  0265  0186               	clrf	6	;volatile
  1191  0266                     l1603:
  1192                           
  1193                           ;main.c: 168:     TRISC = 0b10010000;
  1194  0266  3090               	movlw	144
  1195  0267  0087               	movwf	7	;volatile
  1196  0268                     l1605:
  1197                           
  1198                           ;main.c: 169:     TRISD = 0;
  1199  0268  0188               	clrf	8	;volatile
  1200  0269                     l1607:
  1201                           
  1202                           ;main.c: 170:     TRISE = 0;
  1203  0269  0189               	clrf	9	;volatile
  1204  026A                     l1609:
  1205                           
  1206                           ;main.c: 174:     GIE = 1;
  1207  026A  178B               	bsf	11,7	;volatile
  1208  026B                     l1611:
  1209                           
  1210                           ;main.c: 175:     PEIE = 1;
  1211  026B  170B               	bsf	11,6	;volatile
  1212  026C                     l1613:
  1213                           
  1214                           ;main.c: 176:     TMR1IE = 1;
  1215  026C  140C               	bsf	12,0	;volatile
  1216  026D                     l1615:
  1217                           
  1218                           ;main.c: 177:     TMR1IF = 0;
  1219  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1220  026E  1303               	bcf	3,6	;RP1=0, select bank0
  1221  026F  100C               	bcf	12,0	;volatile
  1222  0270                     l1617:
  1223                           
  1224                           ;main.c: 181:     T1CONbits.T1CKPS = 3;
  1225  0270  3030               	movlw	48
  1226  0271  0490               	iorwf	16,f	;volatile
  1227  0272                     l1619:
  1228                           
  1229                           ;main.c: 183:     Lcd_Init();
  1230  0272  120A  118A  2206  120A  118A  	fcall	_Lcd_Init
  1231  0277                     l1621:
  1232                           
  1233                           ;main.c: 185:     UART_Init();
  1234  0277  120A  118A  2385  120A  118A  	fcall	_UART_Init
  1235  027C                     l1623:
  1236                           
  1237                           ;main.c: 187:     I2C_Master_Init(100000);
  1238  027C  3000               	movlw	0
  1239  027D  1283               	bcf	3,5	;RP0=0, select bank0
  1240  027E  1303               	bcf	3,6	;RP1=0, select bank0
  1241  027F  00B0               	movwf	I2C_Master_Init@c+3
  1242  0280  3001               	movlw	1
  1243  0281  00AF               	movwf	I2C_Master_Init@c+2
  1244  0282  3086               	movlw	134
  1245  0283  00AE               	movwf	I2C_Master_Init@c+1
  1246  0284  30A0               	movlw	160
  1247  0285  00AD               	movwf	I2C_Master_Init@c
  1248  0286  120A  118A  22B0  120A  118A  	fcall	_I2C_Master_Init
  1249  028B                     l1625:
  1250                           
  1251                           ;main.c: 191:     TRISCbits.TRISC2 = 1;
  1252  028B  1683               	bsf	3,5	;RP0=1, select bank1
  1253  028C  1303               	bcf	3,6	;RP1=0, select bank1
  1254  028D  1507               	bsf	7,2	;volatile
  1255  028E                     l1627:
  1256                           
  1257                           ;main.c: 192:     PR2 = 249;
  1258  028E  30F9               	movlw	249
  1259  028F  0092               	movwf	18	;volatile
  1260  0290                     l1629:
  1261                           
  1262                           ;main.c: 193:     CCP1M3 = 1;
  1263  0290  1283               	bcf	3,5	;RP0=0, select bank0
  1264  0291  1303               	bcf	3,6	;RP1=0, select bank0
  1265  0292  1597               	bsf	23,3	;volatile
  1266  0293                     l1631:
  1267                           
  1268                           ;main.c: 194:     CCP1M2 = 1;
  1269  0293  1517               	bsf	23,2	;volatile
  1270  0294                     l1633:
  1271                           
  1272                           ;main.c: 195:     CCPR1L = 32;
  1273  0294  3020               	movlw	32
  1274  0295  0095               	movwf	21	;volatile
  1275  0296                     l1635:
  1276                           
  1277                           ;main.c: 197:     TMR2IF = 0;
  1278  0296  108C               	bcf	12,1	;volatile
  1279  0297                     l1637:
  1280                           
  1281                           ;main.c: 198:     T2CON = 3;
  1282  0297  3003               	movlw	3
  1283  0298  0092               	movwf	18	;volatile
  1284  0299                     l1639:
  1285                           
  1286                           ;main.c: 199:     T2CONbits.TMR2ON = 1;
  1287  0299  1512               	bsf	18,2	;volatile
  1288  029A                     l276:	
  1289                           ;main.c: 201:     }
  1290                           
  1291                           
  1292                           ;main.c: 200:     while(TMR2IF==0){
  1293  029A  1C8C               	btfss	12,1	;volatile
  1294  029B  2A9D               	goto	u701
  1295  029C  2A9E               	goto	u700
  1296  029D                     u701:
  1297  029D  2A9A               	goto	l276
  1298  029E                     u700:
  1299  029E                     l278:
  1300                           
  1301                           ;main.c: 202:     TRISCbits.TRISC2 = 0;
  1302  029E  1683               	bsf	3,5	;RP0=1, select bank1
  1303  029F  1303               	bcf	3,6	;RP1=0, select bank1
  1304  02A0  1107               	bcf	7,2	;volatile
  1305  02A1                     l1641:
  1306                           
  1307                           ;main.c: 205:     PORTA = 0;
  1308  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  1309  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  1310  02A3  0185               	clrf	5	;volatile
  1311                           
  1312                           ;main.c: 206:     PORTB = 0;
  1313  02A4  0186               	clrf	6	;volatile
  1314                           
  1315                           ;main.c: 207:     PORTC = 0;
  1316  02A5  0187               	clrf	7	;volatile
  1317                           
  1318                           ;main.c: 208:     PORTD = 0;
  1319  02A6  0188               	clrf	8	;volatile
  1320                           
  1321                           ;main.c: 209:     PORTE = 0;
  1322  02A7  0189               	clrf	9	;volatile
  1323                           
  1324                           ;main.c: 212:     light = 0;
  1325  02A8  01BE               	clrf	_light
  1326                           
  1327                           ;main.c: 213:     door = 0;
  1328  02A9  01B8               	clrf	_door
  1329                           
  1330                           ;main.c: 214:     keep_door_open = 0;
  1331  02AA  01B7               	clrf	_keep_door_open
  1332                           
  1333                           ;main.c: 215:     lock = 0;
  1334  02AB  01BA               	clrf	_lock
  1335                           
  1336                           ;main.c: 216:     keep_lock_off = 0;
  1337  02AC  01B9               	clrf	_keep_lock_off
  1338                           
  1339                           ;main.c: 217:     in_sensor = 0;
  1340  02AD  01B6               	clrf	_in_sensor
  1341                           
  1342                           ;main.c: 218:     close = 0;
  1343  02AE  01B4               	clrf	_close
  1344  02AF                     l279:
  1345  02AF  0008               	return
  1346  02B0                     __end_of_setup:
  1347                           
  1348                           	psect	text2
  1349  0385                     __ptext2:	
  1350 ;; *************** function _UART_Init *****************
  1351 ;; Defined at:
  1352 ;;		line 80 in file "Digital2_toolbox.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;		None
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;		None
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      void 
  1359 ;; Registers used:
  1360 ;;		wreg, status,2
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1366 ;;      Params:         0       0       0       0       0
  1367 ;;      Locals:         0       0       0       0       0
  1368 ;;      Temps:          0       0       0       0       0
  1369 ;;      Totals:         0       0       0       0       0
  1370 ;;Total ram usage:        0 bytes
  1371 ;; Hardware stack levels used: 1
  1372 ;; Hardware stack levels required when called: 1
  1373 ;; This function calls:
  1374 ;;		Nothing
  1375 ;; This function is called by:
  1376 ;;		_setup
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           
  1381                           ;psect for function _UART_Init
  1382  0385                     _UART_Init:
  1383  0385                     l1297:	
  1384                           ;incstack = 0
  1385                           ; Regs used in _UART_Init: [wreg+status,2]
  1386                           
  1387                           
  1388                           ;Digital2_toolbox.c: 81:     TRISCbits.TRISC7 = 1;
  1389  0385  1683               	bsf	3,5	;RP0=1, select bank1
  1390  0386  1303               	bcf	3,6	;RP1=0, select bank1
  1391  0387  1787               	bsf	7,7	;volatile
  1392                           
  1393                           ;Digital2_toolbox.c: 83:     TXSTAbits.TXEN = 1;
  1394  0388  1698               	bsf	24,5	;volatile
  1395                           
  1396                           ;Digital2_toolbox.c: 84:     TXSTAbits.SYNC = 0;
  1397  0389  1218               	bcf	24,4	;volatile
  1398                           
  1399                           ;Digital2_toolbox.c: 85:     RCSTAbits.SPEN = 1;
  1400  038A  1283               	bcf	3,5	;RP0=0, select bank0
  1401  038B  1303               	bcf	3,6	;RP1=0, select bank0
  1402  038C  1798               	bsf	24,7	;volatile
  1403                           
  1404                           ;Digital2_toolbox.c: 86:     TXSTAbits.BRGH = 1;
  1405  038D  1683               	bsf	3,5	;RP0=1, select bank1
  1406  038E  1303               	bcf	3,6	;RP1=0, select bank1
  1407  038F  1518               	bsf	24,2	;volatile
  1408                           
  1409                           ;Digital2_toolbox.c: 87:     BRG16 = 0;
  1410  0390  1683               	bsf	3,5	;RP0=1, select bank3
  1411  0391  1703               	bsf	3,6	;RP1=1, select bank3
  1412  0392  1187               	bcf	7,3	;volatile
  1413  0393                     l1299:
  1414                           
  1415                           ;Digital2_toolbox.c: 88:     SPBRGH = 0;
  1416  0393  1683               	bsf	3,5	;RP0=1, select bank1
  1417  0394  1303               	bcf	3,6	;RP1=0, select bank1
  1418  0395  019A               	clrf	26	;volatile
  1419  0396                     l1301:
  1420                           
  1421                           ;Digital2_toolbox.c: 89:     SPBRG = 25;
  1422  0396  3019               	movlw	25
  1423  0397  0099               	movwf	25	;volatile
  1424  0398                     l1303:
  1425                           
  1426                           ;Digital2_toolbox.c: 93:     RCSTAbits.CREN = 1;
  1427  0398  1283               	bcf	3,5	;RP0=0, select bank0
  1428  0399  1303               	bcf	3,6	;RP1=0, select bank0
  1429  039A  1618               	bsf	24,4	;volatile
  1430  039B                     l81:
  1431  039B  0008               	return
  1432  039C                     __end_of_UART_Init:
  1433                           
  1434                           	psect	text3
  1435  0206                     __ptext3:	
  1436 ;; *************** function _Lcd_Init *****************
  1437 ;; Defined at:
  1438 ;;		line 42 in file "Digital2_toolbox.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;		None
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;		None
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      void 
  1445 ;; Registers used:
  1446 ;;		wreg, status,2, status,0, pclath, cstack
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1452 ;;      Params:         0       0       0       0       0
  1453 ;;      Locals:         0       0       0       0       0
  1454 ;;      Temps:          2       0       0       0       0
  1455 ;;      Totals:         2       0       0       0       0
  1456 ;;Total ram usage:        2 bytes
  1457 ;; Hardware stack levels used: 1
  1458 ;; Hardware stack levels required when called: 2
  1459 ;; This function calls:
  1460 ;;		_Lcd_Cmd
  1461 ;; This function is called by:
  1462 ;;		_setup
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           
  1467                           ;psect for function _Lcd_Init
  1468  0206                     _Lcd_Init:
  1469  0206                     l1261:	
  1470                           ;incstack = 0
  1471                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1472                           
  1473                           
  1474                           ;Digital2_toolbox.c: 43:     PORTA = 0;
  1475  0206  1283               	bcf	3,5	;RP0=0, select bank0
  1476  0207  1303               	bcf	3,6	;RP1=0, select bank0
  1477  0208  0185               	clrf	5	;volatile
  1478  0209                     l1263:
  1479                           
  1480                           ;Digital2_toolbox.c: 44:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1481  0209  301A               	movlw	26
  1482  020A  00F7               	movwf	??_Lcd_Init+1
  1483  020B  30F8               	movlw	248
  1484  020C  00F6               	movwf	??_Lcd_Init
  1485  020D                     u877:
  1486  020D  0BF6               	decfsz	??_Lcd_Init,f
  1487  020E  2A0D               	goto	u877
  1488  020F  0BF7               	decfsz	??_Lcd_Init+1,f
  1489  0210  2A0D               	goto	u877
  1490  0211  0000               	nop
  1491  0212                     l1265:
  1492                           
  1493                           ;Digital2_toolbox.c: 45:     Lcd_Cmd(0x030);
  1494  0212  3030               	movlw	48
  1495  0213  120A  118A  239C  120A  118A  	fcall	_Lcd_Cmd
  1496  0218                     l1267:
  1497                           
  1498                           ;Digital2_toolbox.c: 46:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1499  0218  3007               	movlw	7
  1500  0219  00F7               	movwf	??_Lcd_Init+1
  1501  021A  307D               	movlw	125
  1502  021B  00F6               	movwf	??_Lcd_Init
  1503  021C                     u887:
  1504  021C  0BF6               	decfsz	??_Lcd_Init,f
  1505  021D  2A1C               	goto	u887
  1506  021E  0BF7               	decfsz	??_Lcd_Init+1,f
  1507  021F  2A1C               	goto	u887
  1508  0220                     l1269:
  1509                           
  1510                           ;Digital2_toolbox.c: 47:     Lcd_Cmd(0x030);
  1511  0220  3030               	movlw	48
  1512  0221  120A  118A  239C  120A  118A  	fcall	_Lcd_Cmd
  1513  0226                     l1271:
  1514                           
  1515                           ;Digital2_toolbox.c: 48:     _delay((unsigned long)((160)*(4000000/4000000.0)));
  1516  0226  3035               	movlw	53
  1517  0227  00F6               	movwf	??_Lcd_Init
  1518  0228                     u897:
  1519  0228  0BF6               	decfsz	??_Lcd_Init,f
  1520  0229  2A28               	goto	u897
  1521  022A                     l1273:
  1522                           
  1523                           ;Digital2_toolbox.c: 49:     Lcd_Cmd(0x030);
  1524  022A  3030               	movlw	48
  1525  022B  120A  118A  239C  120A  118A  	fcall	_Lcd_Cmd
  1526  0230                     l1275:
  1527                           
  1528                           ;Digital2_toolbox.c: 51:     Lcd_Cmd(0b00111000);
  1529  0230  3038               	movlw	56
  1530  0231  120A  118A  239C  120A  118A  	fcall	_Lcd_Cmd
  1531  0236                     l1277:
  1532                           
  1533                           ;Digital2_toolbox.c: 52:     Lcd_Cmd(0x10);
  1534  0236  3010               	movlw	16
  1535  0237  120A  118A  239C  120A  118A  	fcall	_Lcd_Cmd
  1536  023C                     l1279:
  1537                           
  1538                           ;Digital2_toolbox.c: 53:     Lcd_Cmd(0x01);
  1539  023C  3001               	movlw	1
  1540  023D  120A  118A  239C  120A  118A  	fcall	_Lcd_Cmd
  1541  0242                     l1281:
  1542                           
  1543                           ;Digital2_toolbox.c: 54:     Lcd_Cmd(0b00000110);
  1544  0242  3006               	movlw	6
  1545  0243  120A  118A  239C  120A  118A  	fcall	_Lcd_Cmd
  1546  0248                     l1283:
  1547                           
  1548                           ;Digital2_toolbox.c: 55:     Lcd_Cmd(0x10);
  1549  0248  3010               	movlw	16
  1550  0249  120A  118A  239C  120A  118A  	fcall	_Lcd_Cmd
  1551  024E                     l1285:
  1552                           
  1553                           ;Digital2_toolbox.c: 56:     Lcd_Cmd(0b00001100);
  1554  024E  300C               	movlw	12
  1555  024F  120A  118A  239C  120A  118A  	fcall	_Lcd_Cmd
  1556  0254                     l1287:
  1557                           
  1558                           ;Digital2_toolbox.c: 57:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1559  0254  3082               	movlw	130
  1560  0255  00F7               	movwf	??_Lcd_Init+1
  1561  0256  30DD               	movlw	221
  1562  0257  00F6               	movwf	??_Lcd_Init
  1563  0258                     u907:
  1564  0258  0BF6               	decfsz	??_Lcd_Init,f
  1565  0259  2A58               	goto	u907
  1566  025A  0BF7               	decfsz	??_Lcd_Init+1,f
  1567  025B  2A58               	goto	u907
  1568  025C  2A5D               	nop2
  1569  025D                     l69:
  1570  025D  0008               	return
  1571  025E                     __end_of_Lcd_Init:
  1572                           
  1573                           	psect	text4
  1574  039C                     __ptext4:	
  1575 ;; *************** function _Lcd_Cmd *****************
  1576 ;; Defined at:
  1577 ;;		line 28 in file "Digital2_toolbox.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;  a               1    wreg     unsigned char 
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;  a               1    5[COMMON] unsigned char 
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  1    wreg      void 
  1584 ;; Registers used:
  1585 ;;		wreg
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1591 ;;      Params:         0       0       0       0       0
  1592 ;;      Locals:         1       0       0       0       0
  1593 ;;      Temps:          2       0       0       0       0
  1594 ;;      Totals:         3       0       0       0       0
  1595 ;;Total ram usage:        3 bytes
  1596 ;; Hardware stack levels used: 1
  1597 ;; Hardware stack levels required when called: 1
  1598 ;; This function calls:
  1599 ;;		Nothing
  1600 ;; This function is called by:
  1601 ;;		_Lcd_Init
  1602 ;;		_main
  1603 ;;		_Lcd_Clear
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           
  1608                           ;psect for function _Lcd_Cmd
  1609  039C                     _Lcd_Cmd:
  1610                           
  1611                           ;incstack = 0
  1612                           ; Regs used in _Lcd_Cmd: [wreg]
  1613                           ;Lcd_Cmd@a stored from wreg
  1614  039C  00F5               	movwf	Lcd_Cmd@a
  1615  039D                     l1229:
  1616                           
  1617                           ;Digital2_toolbox.c: 29:     RE0 = 0;
  1618  039D  1283               	bcf	3,5	;RP0=0, select bank0
  1619  039E  1303               	bcf	3,6	;RP1=0, select bank0
  1620  039F  1009               	bcf	9,0	;volatile
  1621  03A0                     l1231:
  1622                           
  1623                           ;Digital2_toolbox.c: 30:     PORTA = a;
  1624  03A0  0875               	movf	Lcd_Cmd@a,w
  1625  03A1  0085               	movwf	5	;volatile
  1626  03A2                     l1233:
  1627                           
  1628                           ;Digital2_toolbox.c: 31:     RE1 = 1;
  1629  03A2  1489               	bsf	9,1	;volatile
  1630                           
  1631                           ;Digital2_toolbox.c: 32:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1632  03A3  3006               	movlw	6
  1633  03A4  00F4               	movwf	??_Lcd_Cmd+1
  1634  03A5  3030               	movlw	48
  1635  03A6  00F3               	movwf	??_Lcd_Cmd
  1636  03A7                     u917:
  1637  03A7  0BF3               	decfsz	??_Lcd_Cmd,f
  1638  03A8  2BA7               	goto	u917
  1639  03A9  0BF4               	decfsz	??_Lcd_Cmd+1,f
  1640  03AA  2BA7               	goto	u917
  1641  03AB  0000               	nop
  1642  03AC                     l1235:
  1643                           
  1644                           ;Digital2_toolbox.c: 33:     RE1 = 0;
  1645  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  1646  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  1647  03AE  1089               	bcf	9,1	;volatile
  1648  03AF                     l63:
  1649  03AF  0008               	return
  1650  03B0                     __end_of_Lcd_Cmd:
  1651                           
  1652                           	psect	text5
  1653  02B0                     __ptext5:	
  1654 ;; *************** function _I2C_Master_Init *****************
  1655 ;; Defined at:
  1656 ;;		line 171 in file "Digital2_toolbox.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  c               4   13[BANK0 ] const unsigned long 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;		None
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		wreg, status,2, status,0, pclath, cstack
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1670 ;;      Params:         0       4       0       0       0
  1671 ;;      Locals:         0       0       0       0       0
  1672 ;;      Temps:          4       0       0       0       0
  1673 ;;      Totals:         4       4       0       0       0
  1674 ;;Total ram usage:        8 bytes
  1675 ;; Hardware stack levels used: 1
  1676 ;; Hardware stack levels required when called: 2
  1677 ;; This function calls:
  1678 ;;		___lldiv
  1679 ;; This function is called by:
  1680 ;;		_setup
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           
  1685                           ;psect for function _I2C_Master_Init
  1686  02B0                     _I2C_Master_Init:
  1687  02B0                     l1549:	
  1688                           ;incstack = 0
  1689                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1690                           
  1691                           
  1692                           ;Digital2_toolbox.c: 171: void I2C_Master_Init(const unsigned long c);Digital2_toolbox.c
      +                          : 172: {;Digital2_toolbox.c: 173:     SSPCON = 0b00101000;
  1693  02B0  3028               	movlw	40
  1694  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  1695  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  1696  02B3  0094               	movwf	20	;volatile
  1697  02B4                     l1551:
  1698                           
  1699                           ;Digital2_toolbox.c: 174:     SSPCON2 = 0;
  1700  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  1701  02B5  1303               	bcf	3,6	;RP1=0, select bank1
  1702  02B6  0191               	clrf	17	;volatile
  1703  02B7                     l1553:
  1704                           
  1705                           ;Digital2_toolbox.c: 175:     SSPADD = (4000000/(4*c))-1;
  1706  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  1707  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  1708  02B9  082D               	movf	I2C_Master_Init@c,w
  1709  02BA  00F4               	movwf	??_I2C_Master_Init
  1710  02BB  082E               	movf	I2C_Master_Init@c+1,w
  1711  02BC  00F5               	movwf	??_I2C_Master_Init+1
  1712  02BD  082F               	movf	I2C_Master_Init@c+2,w
  1713  02BE  00F6               	movwf	??_I2C_Master_Init+2
  1714  02BF  0830               	movf	I2C_Master_Init@c+3,w
  1715  02C0  00F7               	movwf	??_I2C_Master_Init+3
  1716  02C1  3002               	movlw	2
  1717  02C2                     u655:
  1718  02C2  1003               	clrc
  1719  02C3  0DF4               	rlf	??_I2C_Master_Init,f
  1720  02C4  0DF5               	rlf	??_I2C_Master_Init+1,f
  1721  02C5  0DF6               	rlf	??_I2C_Master_Init+2,f
  1722  02C6  0DF7               	rlf	??_I2C_Master_Init+3,f
  1723  02C7                     u650:
  1724  02C7  3EFF               	addlw	-1
  1725  02C8  1D03               	skipz
  1726  02C9  2AC2               	goto	u655
  1727  02CA  0877               	movf	??_I2C_Master_Init+3,w
  1728  02CB  00A3               	movwf	___lldiv@divisor+3
  1729  02CC  0876               	movf	??_I2C_Master_Init+2,w
  1730  02CD  00A2               	movwf	___lldiv@divisor+2
  1731  02CE  0875               	movf	??_I2C_Master_Init+1,w
  1732  02CF  00A1               	movwf	___lldiv@divisor+1
  1733  02D0  0874               	movf	??_I2C_Master_Init,w
  1734  02D1  00A0               	movwf	___lldiv@divisor
  1735  02D2  3000               	movlw	0
  1736  02D3  00A7               	movwf	___lldiv@dividend+3
  1737  02D4  303D               	movlw	61
  1738  02D5  00A6               	movwf	___lldiv@dividend+2
  1739  02D6  3009               	movlw	9
  1740  02D7  00A5               	movwf	___lldiv@dividend+1
  1741  02D8  3000               	movlw	0
  1742  02D9  00A4               	movwf	___lldiv@dividend
  1743  02DA  120A  118A  219E  120A  118A  	fcall	___lldiv
  1744  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  1745  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  1746  02E1  0820               	movf	?___lldiv,w
  1747  02E2  3EFF               	addlw	255
  1748  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  1749  02E4  1303               	bcf	3,6	;RP1=0, select bank1
  1750  02E5  0093               	movwf	19	;volatile
  1751  02E6                     l1555:
  1752                           
  1753                           ;Digital2_toolbox.c: 176:     SSPSTAT = 0;
  1754  02E6  0194               	clrf	20	;volatile
  1755  02E7                     l1557:
  1756                           
  1757                           ;Digital2_toolbox.c: 177:     TRISCbits.TRISC3 = 1;
  1758  02E7  1587               	bsf	7,3	;volatile
  1759  02E8                     l1559:
  1760                           
  1761                           ;Digital2_toolbox.c: 178:     TRISCbits.TRISC4 = 1;
  1762  02E8  1607               	bsf	7,4	;volatile
  1763  02E9                     l121:
  1764  02E9  0008               	return
  1765  02EA                     __end_of_I2C_Master_Init:
  1766                           
  1767                           	psect	text6
  1768  019E                     __ptext6:	
  1769 ;; *************** function ___lldiv *****************
  1770 ;; Defined at:
  1771 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  divisor         4    0[BANK0 ] unsigned long 
  1774 ;;  dividend        4    4[BANK0 ] unsigned long 
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;  quotient        4    8[BANK0 ] unsigned long 
  1777 ;;  counter         1   12[BANK0 ] unsigned char 
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  4    0[BANK0 ] unsigned long 
  1780 ;; Registers used:
  1781 ;;		wreg, status,2, status,0
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1787 ;;      Params:         0       8       0       0       0
  1788 ;;      Locals:         0       5       0       0       0
  1789 ;;      Temps:          1       0       0       0       0
  1790 ;;      Totals:         1      13       0       0       0
  1791 ;;Total ram usage:       14 bytes
  1792 ;; Hardware stack levels used: 1
  1793 ;; Hardware stack levels required when called: 1
  1794 ;; This function calls:
  1795 ;;		Nothing
  1796 ;; This function is called by:
  1797 ;;		_I2C_Master_Init
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           
  1802                           ;psect for function ___lldiv
  1803  019E                     ___lldiv:
  1804  019E                     l1517:	
  1805                           ;incstack = 0
  1806                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1807                           
  1808  019E  3000               	movlw	0
  1809  019F  1283               	bcf	3,5	;RP0=0, select bank0
  1810  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  1811  01A1  00AB               	movwf	___lldiv@quotient+3
  1812  01A2  3000               	movlw	0
  1813  01A3  00AA               	movwf	___lldiv@quotient+2
  1814  01A4  3000               	movlw	0
  1815  01A5  00A9               	movwf	___lldiv@quotient+1
  1816  01A6  3000               	movlw	0
  1817  01A7  00A8               	movwf	___lldiv@quotient
  1818  01A8  0823               	movf	___lldiv@divisor+3,w
  1819  01A9  0422               	iorwf	___lldiv@divisor+2,w
  1820  01AA  0421               	iorwf	___lldiv@divisor+1,w
  1821  01AB  0420               	iorwf	___lldiv@divisor,w
  1822  01AC  1903               	skipnz
  1823  01AD  29AF               	goto	u581
  1824  01AE  29B0               	goto	u580
  1825  01AF                     u581:
  1826  01AF  29FD               	goto	l1537
  1827  01B0                     u580:
  1828  01B0                     l1519:
  1829  01B0  01AC               	clrf	___lldiv@counter
  1830  01B1  0AAC               	incf	___lldiv@counter,f
  1831  01B2  29C0               	goto	l1523
  1832  01B3                     l1521:
  1833  01B3  3001               	movlw	1
  1834  01B4  00F3               	movwf	??___lldiv
  1835  01B5                     u595:
  1836  01B5  1003               	clrc
  1837  01B6  0DA0               	rlf	___lldiv@divisor,f
  1838  01B7  0DA1               	rlf	___lldiv@divisor+1,f
  1839  01B8  0DA2               	rlf	___lldiv@divisor+2,f
  1840  01B9  0DA3               	rlf	___lldiv@divisor+3,f
  1841  01BA  0BF3               	decfsz	??___lldiv,f
  1842  01BB  29B5               	goto	u595
  1843  01BC  3001               	movlw	1
  1844  01BD  00F3               	movwf	??___lldiv
  1845  01BE  0873               	movf	??___lldiv,w
  1846  01BF  07AC               	addwf	___lldiv@counter,f
  1847  01C0                     l1523:
  1848  01C0  1FA3               	btfss	___lldiv@divisor+3,7
  1849  01C1  29C3               	goto	u601
  1850  01C2  29C4               	goto	u600
  1851  01C3                     u601:
  1852  01C3  29B3               	goto	l1521
  1853  01C4                     u600:
  1854  01C4                     l1525:
  1855  01C4  3001               	movlw	1
  1856  01C5  00F3               	movwf	??___lldiv
  1857  01C6                     u615:
  1858  01C6  1003               	clrc
  1859  01C7  0DA8               	rlf	___lldiv@quotient,f
  1860  01C8  0DA9               	rlf	___lldiv@quotient+1,f
  1861  01C9  0DAA               	rlf	___lldiv@quotient+2,f
  1862  01CA  0DAB               	rlf	___lldiv@quotient+3,f
  1863  01CB  0BF3               	decfsz	??___lldiv,f
  1864  01CC  29C6               	goto	u615
  1865  01CD                     l1527:
  1866  01CD  0823               	movf	___lldiv@divisor+3,w
  1867  01CE  0227               	subwf	___lldiv@dividend+3,w
  1868  01CF  1D03               	skipz
  1869  01D0  29DB               	goto	u625
  1870  01D1  0822               	movf	___lldiv@divisor+2,w
  1871  01D2  0226               	subwf	___lldiv@dividend+2,w
  1872  01D3  1D03               	skipz
  1873  01D4  29DB               	goto	u625
  1874  01D5  0821               	movf	___lldiv@divisor+1,w
  1875  01D6  0225               	subwf	___lldiv@dividend+1,w
  1876  01D7  1D03               	skipz
  1877  01D8  29DB               	goto	u625
  1878  01D9  0820               	movf	___lldiv@divisor,w
  1879  01DA  0224               	subwf	___lldiv@dividend,w
  1880  01DB                     u625:
  1881  01DB  1C03               	skipc
  1882  01DC  29DE               	goto	u621
  1883  01DD  29DF               	goto	u620
  1884  01DE                     u621:
  1885  01DE  29EE               	goto	l1533
  1886  01DF                     u620:
  1887  01DF                     l1529:
  1888  01DF  0820               	movf	___lldiv@divisor,w
  1889  01E0  02A4               	subwf	___lldiv@dividend,f
  1890  01E1  0821               	movf	___lldiv@divisor+1,w
  1891  01E2  1C03               	skipc
  1892  01E3  0F21               	incfsz	___lldiv@divisor+1,w
  1893  01E4  02A5               	subwf	___lldiv@dividend+1,f
  1894  01E5  0822               	movf	___lldiv@divisor+2,w
  1895  01E6  1C03               	skipc
  1896  01E7  0F22               	incfsz	___lldiv@divisor+2,w
  1897  01E8  02A6               	subwf	___lldiv@dividend+2,f
  1898  01E9  0823               	movf	___lldiv@divisor+3,w
  1899  01EA  1C03               	skipc
  1900  01EB  0F23               	incfsz	___lldiv@divisor+3,w
  1901  01EC  02A7               	subwf	___lldiv@dividend+3,f
  1902  01ED                     l1531:
  1903  01ED  1428               	bsf	___lldiv@quotient,0
  1904  01EE                     l1533:
  1905  01EE  3001               	movlw	1
  1906  01EF                     u635:
  1907  01EF  1003               	clrc
  1908  01F0  0CA3               	rrf	___lldiv@divisor+3,f
  1909  01F1  0CA2               	rrf	___lldiv@divisor+2,f
  1910  01F2  0CA1               	rrf	___lldiv@divisor+1,f
  1911  01F3  0CA0               	rrf	___lldiv@divisor,f
  1912  01F4  3EFF               	addlw	-1
  1913  01F5  1D03               	skipz
  1914  01F6  29EF               	goto	u635
  1915  01F7                     l1535:
  1916  01F7  3001               	movlw	1
  1917  01F8  02AC               	subwf	___lldiv@counter,f
  1918  01F9  1D03               	btfss	3,2
  1919  01FA  29FC               	goto	u641
  1920  01FB  29FD               	goto	u640
  1921  01FC                     u641:
  1922  01FC  29C4               	goto	l1525
  1923  01FD                     u640:
  1924  01FD                     l1537:
  1925  01FD  082B               	movf	___lldiv@quotient+3,w
  1926  01FE  00A3               	movwf	?___lldiv+3
  1927  01FF  082A               	movf	___lldiv@quotient+2,w
  1928  0200  00A2               	movwf	?___lldiv+2
  1929  0201  0829               	movf	___lldiv@quotient+1,w
  1930  0202  00A1               	movwf	?___lldiv+1
  1931  0203  0828               	movf	___lldiv@quotient,w
  1932  0204  00A0               	movwf	?___lldiv
  1933  0205                     l407:
  1934  0205  0008               	return
  1935  0206                     __end_of___lldiv:
  1936                           
  1937                           	psect	text7
  1938  03D1                     __ptext7:	
  1939 ;; *************** function _UART_Write_Char *****************
  1940 ;; Defined at:
  1941 ;;		line 104 in file "Digital2_toolbox.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;  character       1    wreg     unsigned char 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  character       1    3[COMMON] unsigned char 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1955 ;;      Params:         0       0       0       0       0
  1956 ;;      Locals:         1       0       0       0       0
  1957 ;;      Temps:          0       0       0       0       0
  1958 ;;      Totals:         1       0       0       0       0
  1959 ;;Total ram usage:        1 bytes
  1960 ;; Hardware stack levels used: 1
  1961 ;; Hardware stack levels required when called: 1
  1962 ;; This function calls:
  1963 ;;		Nothing
  1964 ;; This function is called by:
  1965 ;;		_main
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           
  1970                           ;psect for function _UART_Write_Char
  1971  03D1                     _UART_Write_Char:
  1972                           
  1973                           ;incstack = 0
  1974                           ; Regs used in _UART_Write_Char: [wreg]
  1975                           ;UART_Write_Char@character stored from wreg
  1976  03D1  00F3               	movwf	UART_Write_Char@character
  1977  03D2                     l1329:
  1978                           
  1979                           ;Digital2_toolbox.c: 105:     TXREG = character;
  1980  03D2  0873               	movf	UART_Write_Char@character,w
  1981  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  1982  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  1983  03D5  0099               	movwf	25	;volatile
  1984  03D6                     l93:	
  1985                           ;Digital2_toolbox.c: 106:     while (!TXSTAbits.TRMT);
  1986                           
  1987  03D6  1683               	bsf	3,5	;RP0=1, select bank1
  1988  03D7  1303               	bcf	3,6	;RP1=0, select bank1
  1989  03D8  1C98               	btfss	24,1	;volatile
  1990  03D9  2BDB               	goto	u431
  1991  03DA  2BDC               	goto	u430
  1992  03DB                     u431:
  1993  03DB  2BD6               	goto	l93
  1994  03DC                     u430:
  1995  03DC                     l96:
  1996  03DC  0008               	return
  1997  03DD                     __end_of_UART_Write_Char:
  1998                           
  1999                           	psect	text8
  2000  0344                     __ptext8:	
  2001 ;; *************** function _Lcd_Write_String *****************
  2002 ;; Defined at:
  2003 ;;		line 69 in file "Digital2_toolbox.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;  a               1    wreg     PTR unsigned char 
  2006 ;;		 -> STR_7(4), STR_6(5), STR_5(5), STR_4(4), 
  2007 ;;		 -> STR_3(5), STR_2(4), STR_1(18), 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2010 ;;		 -> STR_7(4), STR_6(5), STR_5(5), STR_4(4), 
  2011 ;;		 -> STR_3(5), STR_2(4), STR_1(18), 
  2012 ;;  i               2    0[BANK0 ] int 
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      void 
  2015 ;; Registers used:
  2016 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2022 ;;      Params:         0       0       0       0       0
  2023 ;;      Locals:         0       3       0       0       0
  2024 ;;      Temps:          0       0       0       0       0
  2025 ;;      Totals:         0       3       0       0       0
  2026 ;;Total ram usage:        3 bytes
  2027 ;; Hardware stack levels used: 1
  2028 ;; Hardware stack levels required when called: 2
  2029 ;; This function calls:
  2030 ;;		_Lcd_Write_Char
  2031 ;; This function is called by:
  2032 ;;		_main
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           
  2037                           ;psect for function _Lcd_Write_String
  2038  0344                     _Lcd_Write_String:
  2039                           
  2040                           ;incstack = 0
  2041                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2042                           ;Lcd_Write_String@a stored from wreg
  2043  0344  1283               	bcf	3,5	;RP0=0, select bank0
  2044  0345  1303               	bcf	3,6	;RP1=0, select bank0
  2045  0346  00A2               	movwf	Lcd_Write_String@a
  2046  0347                     l1565:
  2047                           
  2048                           ;Digital2_toolbox.c: 70:     int i;;Digital2_toolbox.c: 71:     for (i = 0; a[i] != '\0'
      +                          ; i++){
  2049  0347  01A0               	clrf	Lcd_Write_String@i
  2050  0348  01A1               	clrf	Lcd_Write_String@i+1
  2051  0349  2B5F               	goto	l1571
  2052  034A                     l1567:
  2053                           
  2054                           ;Digital2_toolbox.c: 72:         Lcd_Write_Char(a[i]);
  2055  034A  0820               	movf	Lcd_Write_String@i,w
  2056  034B  0722               	addwf	Lcd_Write_String@a,w
  2057  034C  0084               	movwf	4
  2058  034D  120A  118A  231A  120A  118A  	fcall	stringdir
  2059  0352  120A  118A  236D  120A  118A  	fcall	_Lcd_Write_Char
  2060  0357                     l1569:
  2061                           
  2062                           ;Digital2_toolbox.c: 73:     }
  2063  0357  3001               	movlw	1
  2064  0358  1283               	bcf	3,5	;RP0=0, select bank0
  2065  0359  1303               	bcf	3,6	;RP1=0, select bank0
  2066  035A  07A0               	addwf	Lcd_Write_String@i,f
  2067  035B  1803               	skipnc
  2068  035C  0AA1               	incf	Lcd_Write_String@i+1,f
  2069  035D  3000               	movlw	0
  2070  035E  07A1               	addwf	Lcd_Write_String@i+1,f
  2071  035F                     l1571:
  2072  035F  0820               	movf	Lcd_Write_String@i,w
  2073  0360  0722               	addwf	Lcd_Write_String@a,w
  2074  0361  0084               	movwf	4
  2075  0362  120A  118A  231A  120A  118A  	fcall	stringdir
  2076  0367  3A00               	xorlw	0
  2077  0368  1D03               	skipz
  2078  0369  2B6B               	goto	u681
  2079  036A  2B6C               	goto	u680
  2080  036B                     u681:
  2081  036B  2B4A               	goto	l1567
  2082  036C                     u680:
  2083  036C                     l78:
  2084  036C  0008               	return
  2085  036D                     __end_of_Lcd_Write_String:
  2086                           
  2087                           	psect	text9
  2088  036D                     __ptext9:	
  2089 ;; *************** function _Lcd_Write_Char *****************
  2090 ;; Defined at:
  2091 ;;		line 60 in file "Digital2_toolbox.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  a               1    wreg     unsigned char 
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  a               1    5[COMMON] unsigned char 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1    wreg      void 
  2098 ;; Registers used:
  2099 ;;		wreg
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2105 ;;      Params:         0       0       0       0       0
  2106 ;;      Locals:         1       0       0       0       0
  2107 ;;      Temps:          2       0       0       0       0
  2108 ;;      Totals:         3       0       0       0       0
  2109 ;;Total ram usage:        3 bytes
  2110 ;; Hardware stack levels used: 1
  2111 ;; Hardware stack levels required when called: 1
  2112 ;; This function calls:
  2113 ;;		Nothing
  2114 ;; This function is called by:
  2115 ;;		_Lcd_Write_String
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           
  2120                           ;psect for function _Lcd_Write_Char
  2121  036D                     _Lcd_Write_Char:
  2122                           
  2123                           ;incstack = 0
  2124                           ; Regs used in _Lcd_Write_Char: [wreg]
  2125                           ;Lcd_Write_Char@a stored from wreg
  2126  036D  00F5               	movwf	Lcd_Write_Char@a
  2127  036E                     l1541:
  2128                           
  2129                           ;Digital2_toolbox.c: 61:     PORTA = a;
  2130  036E  0875               	movf	Lcd_Write_Char@a,w
  2131  036F  1283               	bcf	3,5	;RP0=0, select bank0
  2132  0370  1303               	bcf	3,6	;RP1=0, select bank0
  2133  0371  0085               	movwf	5	;volatile
  2134  0372                     l1543:
  2135                           
  2136                           ;Digital2_toolbox.c: 62:     RE0 = 1;
  2137  0372  1409               	bsf	9,0	;volatile
  2138  0373                     l1545:
  2139                           
  2140                           ;Digital2_toolbox.c: 63:     RE1 = 1;
  2141  0373  1489               	bsf	9,1	;volatile
  2142                           
  2143                           ;Digital2_toolbox.c: 64:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  2144  0374  3021               	movlw	33
  2145  0375  00F3               	movwf	??_Lcd_Write_Char
  2146  0376                     u927:
  2147  0376  0BF3               	decfsz	??_Lcd_Write_Char,f
  2148  0377  2B76               	goto	u927
  2149  0378                     l1547:
  2150                           
  2151                           ;Digital2_toolbox.c: 65:     RE1 = 0;
  2152  0378  1283               	bcf	3,5	;RP0=0, select bank0
  2153  0379  1303               	bcf	3,6	;RP1=0, select bank0
  2154  037A  1089               	bcf	9,1	;volatile
  2155                           
  2156                           ;Digital2_toolbox.c: 66:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2157  037B  300D               	movlw	13
  2158  037C  00F4               	movwf	??_Lcd_Write_Char+1
  2159  037D  30FB               	movlw	251
  2160  037E  00F3               	movwf	??_Lcd_Write_Char
  2161  037F                     u937:
  2162  037F  0BF3               	decfsz	??_Lcd_Write_Char,f
  2163  0380  2B7F               	goto	u937
  2164  0381  0BF4               	decfsz	??_Lcd_Write_Char+1,f
  2165  0382  2B7F               	goto	u937
  2166  0383  2B84               	nop2
  2167  0384                     l72:
  2168  0384  0008               	return
  2169  0385                     __end_of_Lcd_Write_Char:
  2170                           
  2171                           	psect	text10
  2172  03DD                     __ptext10:	
  2173 ;; *************** function _I2C_Master_Write *****************
  2174 ;; Defined at:
  2175 ;;		line 220 in file "Digital2_toolbox.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  d               2    3[COMMON] unsigned int 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;		None
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      void 
  2182 ;; Registers used:
  2183 ;;		wreg, status,2, status,0, pclath, cstack
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2189 ;;      Params:         2       0       0       0       0
  2190 ;;      Locals:         0       0       0       0       0
  2191 ;;      Temps:          0       0       0       0       0
  2192 ;;      Totals:         2       0       0       0       0
  2193 ;;Total ram usage:        2 bytes
  2194 ;; Hardware stack levels used: 1
  2195 ;; Hardware stack levels required when called: 2
  2196 ;; This function calls:
  2197 ;;		_I2C_Master_Wait
  2198 ;; This function is called by:
  2199 ;;		_main
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           
  2204                           ;psect for function _I2C_Master_Write
  2205  03DD                     _I2C_Master_Write:
  2206  03DD                     l1581:	
  2207                           ;incstack = 0
  2208                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2209                           
  2210                           
  2211                           ;Digital2_toolbox.c: 220: void I2C_Master_Write(unsigned d);Digital2_toolbox.c: 221: {;D
      +                          igital2_toolbox.c: 222:     I2C_Master_Wait();
  2212  03DD  120A  118A  23C4  120A  118A  	fcall	_I2C_Master_Wait
  2213  03E2                     l1583:
  2214                           
  2215                           ;Digital2_toolbox.c: 223:     SSPBUF = d;
  2216  03E2  0873               	movf	I2C_Master_Write@d,w
  2217  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2218  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  2219  03E5  0093               	movwf	19	;volatile
  2220  03E6                     l139:
  2221  03E6  0008               	return
  2222  03E7                     __end_of_I2C_Master_Write:
  2223                           
  2224                           	psect	text11
  2225  03E7                     __ptext11:	
  2226 ;; *************** function _I2C_Master_Stop *****************
  2227 ;; Defined at:
  2228 ;;		line 210 in file "Digital2_toolbox.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;		None
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;		None
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      void 
  2235 ;; Registers used:
  2236 ;;		wreg, status,2, status,0, pclath, cstack
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2242 ;;      Params:         0       0       0       0       0
  2243 ;;      Locals:         0       0       0       0       0
  2244 ;;      Temps:          0       0       0       0       0
  2245 ;;      Totals:         0       0       0       0       0
  2246 ;;Total ram usage:        0 bytes
  2247 ;; Hardware stack levels used: 1
  2248 ;; Hardware stack levels required when called: 2
  2249 ;; This function calls:
  2250 ;;		_I2C_Master_Wait
  2251 ;; This function is called by:
  2252 ;;		_main
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           
  2257                           ;psect for function _I2C_Master_Stop
  2258  03E7                     _I2C_Master_Stop:
  2259  03E7                     l1577:	
  2260                           ;incstack = 0
  2261                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2262                           
  2263                           
  2264                           ;Digital2_toolbox.c: 212:     I2C_Master_Wait();
  2265  03E7  120A  118A  23C4  120A  118A  	fcall	_I2C_Master_Wait
  2266  03EC                     l1579:
  2267                           
  2268                           ;Digital2_toolbox.c: 213:     SSPCON2bits.PEN = 1;
  2269  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  2270  03ED  1303               	bcf	3,6	;RP1=0, select bank1
  2271  03EE  1511               	bsf	17,2	;volatile
  2272  03EF                     l136:
  2273  03EF  0008               	return
  2274  03F0                     __end_of_I2C_Master_Stop:
  2275                           
  2276                           	psect	text12
  2277  03F0                     __ptext12:	
  2278 ;; *************** function _I2C_Master_Start *****************
  2279 ;; Defined at:
  2280 ;;		line 194 in file "Digital2_toolbox.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;		None
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;		None
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      void 
  2287 ;; Registers used:
  2288 ;;		wreg, status,2, status,0, pclath, cstack
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2294 ;;      Params:         0       0       0       0       0
  2295 ;;      Locals:         0       0       0       0       0
  2296 ;;      Temps:          0       0       0       0       0
  2297 ;;      Totals:         0       0       0       0       0
  2298 ;;Total ram usage:        0 bytes
  2299 ;; Hardware stack levels used: 1
  2300 ;; Hardware stack levels required when called: 2
  2301 ;; This function calls:
  2302 ;;		_I2C_Master_Wait
  2303 ;; This function is called by:
  2304 ;;		_main
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           
  2309                           ;psect for function _I2C_Master_Start
  2310  03F0                     _I2C_Master_Start:
  2311  03F0                     l1573:	
  2312                           ;incstack = 0
  2313                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2314                           
  2315                           
  2316                           ;Digital2_toolbox.c: 196:     I2C_Master_Wait();
  2317  03F0  120A  118A  23C4  120A  118A  	fcall	_I2C_Master_Wait
  2318  03F5                     l1575:
  2319                           
  2320                           ;Digital2_toolbox.c: 197:     SSPCON2bits.SEN = 1;
  2321  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  2322  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  2323  03F7  1411               	bsf	17,0	;volatile
  2324  03F8                     l130:
  2325  03F8  0008               	return
  2326  03F9                     __end_of_I2C_Master_Start:
  2327                           
  2328                           	psect	text13
  2329  02EA                     __ptext13:	
  2330 ;; *************** function _I2C_Master_Read *****************
  2331 ;; Defined at:
  2332 ;;		line 229 in file "Digital2_toolbox.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;  a               2    3[COMMON] unsigned short 
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;  temp            2    0[BANK0 ] unsigned short 
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  2    3[COMMON] unsigned short 
  2339 ;; Registers used:
  2340 ;;		wreg, status,2, status,0, pclath, cstack
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2346 ;;      Params:         2       0       0       0       0
  2347 ;;      Locals:         0       2       0       0       0
  2348 ;;      Temps:          2       0       0       0       0
  2349 ;;      Totals:         4       2       0       0       0
  2350 ;;Total ram usage:        6 bytes
  2351 ;; Hardware stack levels used: 1
  2352 ;; Hardware stack levels required when called: 2
  2353 ;; This function calls:
  2354 ;;		_I2C_Master_Wait
  2355 ;; This function is called by:
  2356 ;;		_main
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           
  2361                           ;psect for function _I2C_Master_Read
  2362  02EA                     _I2C_Master_Read:
  2363  02EA                     l1585:	
  2364                           ;incstack = 0
  2365                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2366                           
  2367                           
  2368                           ;Digital2_toolbox.c: 229: unsigned short I2C_Master_Read(unsigned short a);Digital2_tool
      +                          box.c: 230: {;Digital2_toolbox.c: 231:     unsigned short temp;;Digital2_toolbox.c: 232:
      +                               I2C_Master_Wait();
  2369  02EA  120A  118A  23C4  120A  118A  	fcall	_I2C_Master_Wait
  2370  02EF                     l1587:
  2371                           
  2372                           ;Digital2_toolbox.c: 233:     SSPCON2bits.RCEN = 1;
  2373  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  2374  02F0  1303               	bcf	3,6	;RP1=0, select bank1
  2375  02F1  1591               	bsf	17,3	;volatile
  2376                           
  2377                           ;Digital2_toolbox.c: 234:     I2C_Master_Wait();
  2378  02F2  120A  118A  23C4  120A  118A  	fcall	_I2C_Master_Wait
  2379  02F7                     l1589:
  2380                           
  2381                           ;Digital2_toolbox.c: 235:     temp = SSPBUF;
  2382  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  2383  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  2384  02F9  0813               	movf	19,w	;volatile
  2385  02FA  00F5               	movwf	??_I2C_Master_Read
  2386  02FB  01F6               	clrf	??_I2C_Master_Read+1
  2387  02FC  0875               	movf	??_I2C_Master_Read,w
  2388  02FD  00A0               	movwf	I2C_Master_Read@temp
  2389  02FE  0876               	movf	??_I2C_Master_Read+1,w
  2390  02FF  00A1               	movwf	I2C_Master_Read@temp+1
  2391  0300                     l1591:
  2392                           
  2393                           ;Digital2_toolbox.c: 236:     I2C_Master_Wait();
  2394  0300  120A  118A  23C4  120A  118A  	fcall	_I2C_Master_Wait
  2395  0305                     l1593:
  2396                           
  2397                           ;Digital2_toolbox.c: 237:     if(a == 1){
  2398  0305  0373               	decf	I2C_Master_Read@a,w
  2399  0306  0474               	iorwf	I2C_Master_Read@a+1,w
  2400  0307  1D03               	btfss	3,2
  2401  0308  2B0A               	goto	u691
  2402  0309  2B0B               	goto	u690
  2403  030A                     u691:
  2404  030A  2B0F               	goto	l142
  2405  030B                     u690:
  2406  030B                     l1595:
  2407                           
  2408                           ;Digital2_toolbox.c: 238:         SSPCON2bits.ACKDT = 0;
  2409  030B  1683               	bsf	3,5	;RP0=1, select bank1
  2410  030C  1303               	bcf	3,6	;RP1=0, select bank1
  2411  030D  1291               	bcf	17,5	;volatile
  2412                           
  2413                           ;Digital2_toolbox.c: 239:     }else{
  2414  030E  2B12               	goto	l143
  2415  030F                     l142:
  2416                           
  2417                           ;Digital2_toolbox.c: 240:         SSPCON2bits.ACKDT = 1;
  2418  030F  1683               	bsf	3,5	;RP0=1, select bank1
  2419  0310  1303               	bcf	3,6	;RP1=0, select bank1
  2420  0311  1691               	bsf	17,5	;volatile
  2421  0312                     l143:	
  2422                           ;Digital2_toolbox.c: 241:     }
  2423                           
  2424                           
  2425                           ;Digital2_toolbox.c: 242:     SSPCON2bits.ACKEN = 1;
  2426  0312  1611               	bsf	17,4	;volatile
  2427  0313                     l1597:
  2428                           
  2429                           ;Digital2_toolbox.c: 243:     return temp;
  2430  0313  1283               	bcf	3,5	;RP0=0, select bank0
  2431  0314  1303               	bcf	3,6	;RP1=0, select bank0
  2432  0315  0821               	movf	I2C_Master_Read@temp+1,w
  2433  0316  00F4               	movwf	?_I2C_Master_Read+1
  2434  0317  0820               	movf	I2C_Master_Read@temp,w
  2435  0318  00F3               	movwf	?_I2C_Master_Read
  2436  0319                     l144:
  2437  0319  0008               	return
  2438  031A                     __end_of_I2C_Master_Read:
  2439                           
  2440                           	psect	text14
  2441  03C4                     __ptext14:	
  2442 ;; *************** function _I2C_Master_Wait *****************
  2443 ;; Defined at:
  2444 ;;		line 187 in file "Digital2_toolbox.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;		None
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;		None
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg, status,2
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2458 ;;      Params:         0       0       0       0       0
  2459 ;;      Locals:         0       0       0       0       0
  2460 ;;      Temps:          0       0       0       0       0
  2461 ;;      Totals:         0       0       0       0       0
  2462 ;;Total ram usage:        0 bytes
  2463 ;; Hardware stack levels used: 1
  2464 ;; Hardware stack levels required when called: 1
  2465 ;; This function calls:
  2466 ;;		Nothing
  2467 ;; This function is called by:
  2468 ;;		_I2C_Master_Start
  2469 ;;		_I2C_Master_Stop
  2470 ;;		_I2C_Master_Write
  2471 ;;		_I2C_Master_Read
  2472 ;;		_I2C_Master_RepeatedStart
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           
  2477                           ;psect for function _I2C_Master_Wait
  2478  03C4                     _I2C_Master_Wait:
  2479  03C4                     l1561:	
  2480                           ;incstack = 0
  2481                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2482                           
  2483  03C4                     l124:	
  2484                           ;Digital2_toolbox.c: 189:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2485                           
  2486  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  2487  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  2488  03C6  1914               	btfsc	20,2	;volatile
  2489  03C7  2BC9               	goto	u661
  2490  03C8  2BCA               	goto	u660
  2491  03C9                     u661:
  2492  03C9  2BC4               	goto	l124
  2493  03CA                     u660:
  2494  03CA                     l1563:
  2495  03CA  0811               	movf	17,w	;volatile
  2496  03CB  391F               	andlw	31
  2497  03CC  1D03               	btfss	3,2
  2498  03CD  2BCF               	goto	u671
  2499  03CE  2BD0               	goto	u670
  2500  03CF                     u671:
  2501  03CF  2BC4               	goto	l124
  2502  03D0                     u670:
  2503  03D0                     l127:
  2504  03D0  0008               	return
  2505  03D1                     __end_of_I2C_Master_Wait:
  2506                           
  2507                           	psect	text15
  2508  03B0                     __ptext15:	
  2509 ;; *************** function _isr *****************
  2510 ;; Defined at:
  2511 ;;		line 224 in file "main.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;		None
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;		None
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  1    wreg      void 
  2518 ;; Registers used:
  2519 ;;		wreg, status,2, status,0
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2525 ;;      Params:         0       0       0       0       0
  2526 ;;      Locals:         0       0       0       0       0
  2527 ;;      Temps:          3       0       0       0       0
  2528 ;;      Totals:         3       0       0       0       0
  2529 ;;Total ram usage:        3 bytes
  2530 ;; Hardware stack levels used: 1
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		Interrupt level 1
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           
  2539                           ;psect for function _isr
  2540  03B0                     _isr:
  2541  03B0                     i1l1509:
  2542                           
  2543                           ;main.c: 225:     if(TMR1IF){
  2544  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  2545  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  2546  03B2  1C0C               	btfss	12,0	;volatile
  2547  03B3  2BB5               	goto	u57_21
  2548  03B4  2BB6               	goto	u57_20
  2549  03B5                     u57_21:
  2550  03B5  2BBD               	goto	i1l285
  2551  03B6                     u57_20:
  2552  03B6                     i1l1511:
  2553                           
  2554                           ;main.c: 226:         TMR1 = 0;
  2555  03B6  018E               	clrf	14	;volatile
  2556  03B7  018F               	clrf	15	;volatile
  2557  03B8                     i1l1513:
  2558                           
  2559                           ;main.c: 227:         time++;
  2560  03B8  3001               	movlw	1
  2561  03B9  00F0               	movwf	??_isr
  2562  03BA  0870               	movf	??_isr,w
  2563  03BB  07B5               	addwf	_time,f
  2564  03BC                     i1l1515:
  2565                           
  2566                           ;main.c: 228:         TMR1IF = 0;
  2567  03BC  100C               	bcf	12,0	;volatile
  2568  03BD                     i1l285:
  2569  03BD  0872               	movf	??_isr+2,w
  2570  03BE  008A               	movwf	10
  2571  03BF  0E71               	swapf	??_isr+1,w
  2572  03C0  0083               	movwf	3
  2573  03C1  0EFE               	swapf	btemp,f
  2574  03C2  0E7E               	swapf	btemp,w
  2575  03C3  0009               	retfie
  2576  03C4                     __end_of_isr:
  2577  007E                     btemp	set	126	;btemp
  2578  007E                     wtemp0	set	126
  2579                           
  2580                           	psect	intentry
  2581  0004                     __pintentry:	
  2582                           ;incstack = 0
  2583                           ; Regs used in _isr: [wreg+status,2+status,0]
  2584                           
  2585  0004                     interrupt_function:
  2586  007E                     saved_w	set	btemp
  2587  0004  00FE               	movwf	btemp
  2588  0005  0E03               	swapf	3,w
  2589  0006  00F1               	movwf	??_isr+1
  2590  0007  080A               	movf	10,w
  2591  0008  00F2               	movwf	??_isr+2
  2592  0009  120A  118A  2BB0   	ljmp	_isr
  2593                           
  2594                           	psect	config
  2595                           
  2596                           ;Config register CONFIG1 @ 0x2007
  2597                           ;	Oscillator Selection bits
  2598                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2599                           ;	Watchdog Timer Enable bit
  2600                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2601                           ;	Power-up Timer Enable bit
  2602                           ;	PWRTE = OFF, PWRT disabled
  2603                           ;	RE3/MCLR pin function select bit
  2604                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2605                           ;	Code Protection bit
  2606                           ;	CP = OFF, Program memory code protection is disabled
  2607                           ;	Data Code Protection bit
  2608                           ;	CPD = OFF, Data memory code protection is disabled
  2609                           ;	Brown Out Reset Selection bits
  2610                           ;	BOREN = OFF, BOR disabled
  2611                           ;	Internal External Switchover bit
  2612                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2613                           ;	Fail-Safe Clock Monitor Enabled bit
  2614                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2615                           ;	Low Voltage Programming Enable bit
  2616                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2617                           ;	In-Circuit Debugger Mode bit
  2618                           ;	DEBUG = 0x1, unprogrammed default
  2619  2007                     	org	8199
  2620  2007  20D4               	dw	8404
  2621                           
  2622                           ;Config register CONFIG2 @ 0x2008
  2623                           ;	Brown-out Reset Selection bit
  2624                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2625                           ;	Flash Program Memory Self Write Enable bits
  2626                           ;	WRT = OFF, Write protection off
  2627  2008                     	org	8200
  2628  2008  3FFF               	dw	16383

Data Sizes:
    Strings     36
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     20      31
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 18
		 -> STR_7(CODE[4]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[4]), 
		 -> STR_3(CODE[5]), STR_2(CODE[4]), STR_1(CODE[18]), 


Critical Paths under _main in COMMON

    _setup->_I2C_Master_Init
    _setup->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _Lcd_Write_String->_Lcd_Write_Char

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1477
                                             17 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _Lcd_Cmd
                   _Lcd_Write_String
                    _UART_Write_Char
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     564
                    _I2C_Master_Init
                           _Lcd_Init
                          _UART_Init
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      22
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Char                                      1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     413
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0      31
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     211
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     245
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
   _UART_Write_Char
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
     _UART_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      1F       5       38.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2A      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Aug 31 19:18:11 2021

                        pc 0002                _SSPSTATbits 0094                         l63 03AF  
                       l72 0384                         l81 039B                         l93 03D6  
                       l69 025D                         l78 036C                         l96 03DC  
                       _cL 0078                         _dL 003D                         _mL 0079  
                       _uL 003C                         fsr 0004                        l121 02E9  
                      l130 03F8                        l124 03C4                        l142 030F  
                      l127 03D0                        l143 0312                        l144 0319  
                      l136 03EF                        l139 03E6                        l407 0205  
                      l265 0046                        l276 029A                        l278 029E  
                      l279 02AF                        _GIE 005F                        _RD0 0040  
                      _RD1 0041                        _RE0 0048                        _RE1 0049  
                      u430 03DC                        _PR2 0092                        u431 03DB  
                      u600 01C4                        u601 01C3                        u620 01DF  
                      u700 029E                        u621 01DE                        u701 029D  
                      u710 00F2                        u615 01C6                        u711 00F1  
                      u640 01FD                        u800 0159                        u720 00F7  
                      u641 01FC                        u625 01DB                        u801 0158  
                      u721 00F6                        u650 02C7                        u810 015E  
                      u730 010E                        u635 01EF                        u811 015D  
                      u731 010D                        u660 03CA                        u580 01B0  
                      u740 0113                        u661 03C9                        u581 01AF  
                      u741 0112                        u670 03D0                        u750 0138  
                      u671 03CF                        u655 02C2                        u751 0137  
                      u680 036C                        u760 0141                        u681 036B  
                      u761 0140                        u690 030B                        u770 0146  
                      u691 030A                        u595 01B5                        u907 0258  
                      u771 0145                        u827 006F                        u780 014B  
                      u917 03A7                        u781 014A                        u837 00AB  
                      u790 0154                        u927 0376                        u791 0153  
                      u847 0129                        u937 037F                        u857 0177  
                      u867 0185                        u877 020D                        u887 021C  
                      u897 0228                        _isr 03B0                        fsr0 0004  
            _keep_lock_off 0039                       l1301 0396                       l1231 03A0  
                     l1303 0398                       l1233 03A2                       l1235 03AC  
                     l1229 039D                       l1261 0206                       l1271 0226  
                     l1263 0209                       l1329 03D2                       l1521 01B3  
                     l1281 0242                       l1273 022A                       l1265 0212  
                     l1601 025E                       l1531 01ED                       l1523 01C0  
                     l1283 0248                       l1275 0230                       l1267 0218  
                     l1611 026B                       l1603 0266                       l1541 036E  
                     l1533 01EE                       l1525 01C4                       l1517 019E  
                     l1285 024E                       l1277 0236                       l1269 0220  
                     l1621 0277                       l1613 026C                       l1605 0268  
                     l1701 0131                       l1543 0372                       l1535 01F7  
                     l1527 01CD                       l1519 01B0                       l1551 02B4  
                     l1287 0254                       l1279 023C                       l1631 0293  
                     l1623 027C                       l1615 026D                       l1607 0269  
                     l1711 0141                       l1703 0133                       l1561 03C4  
                     l1545 0373                       l1529 01DF                       l1537 01FD  
                     l1553 02B7                       l1297 0385                       l1641 02A1  
                     l1633 0294                       l1625 028B                       l1617 0270  
                     l1609 026A                       l1713 0146                       l1721 014F  
                     l1705 0138                       l1563 03CA                       l1547 0378  
                     l1571 035F                       l1555 02E6                       l1299 0393  
                     l1635 0296                       l1627 028E                       l1619 0272  
                     l1731 0167                       l1723 0154                       l1715 014B  
                     l1707 013A                       l1651 002E                       l1573 03F0  
                     l1581 03DD                       l1565 0347                       l1557 02E7  
                     l1549 02B0                       l1637 0297                       l1629 0290  
                     l1741 017F                       l1733 016D                       l1725 0159  
                     l1717 014C                       l1709 013B                       l1661 007D  
                     l1653 003A                       l1591 0300                       l1575 03F5  
                     l1583 03E2                       l1567 034A                       l1559 02E8  
                     l1639 0299                       l1743 018A                       l1735 0170  
                     l1727 015E                       l1719 014D                       l1671 00A3  
                     l1663 0082                       l1655 0040                       l1647 0023  
                     l1593 0305                       l1585 02EA                       l1577 03E7  
                     l1569 0357                       l1745 018E                       l1737 0171  
                     l1729 0161                       l1681 00FF                       l1673 00EB  
                     l1665 0087                       l1657 0067                       l1649 0028  
                     l1595 030B                       l1587 02EF                       l1579 03EC  
                     l1747 0194                       l1739 017C                       l1691 0119  
                     l1683 0105                       l1675 00F2                       l1667 0090  
                     l1659 0076                       l1597 0313                       l1589 02F7  
                     l1693 011F                       l1677 00F7                       l1685 0109  
                     l1669 009E                       l1695 0122                       l1687 010E  
                     l1679 00F9                       l1697 0123                       l1689 0113  
                     l1699 012E                       ?_isr 0070                       STR_1 0320  
                     STR_2 0340                       STR_3 0332                       STR_4 033C  
                     STR_5 0337                       STR_6 0332                       STR_7 0340  
                     _PEIE 005E                       _TMR1 000E          ?_Lcd_Write_String 0070  
                     _door 0038                       _main 0023                       _lock 003A  
                     _time 0035                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0076            __end_of_Lcd_Cmd 03B0             _keep_door_open 0037  
  __end_of_UART_Write_Char 03DD                      ??_isr 0070           ?_I2C_Master_Init 002D  
         ?_I2C_Master_Read 0073           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070                      _BRG16 0C3B                      _ANSEL 0188  
          __end_of___lldiv 0206                      _T2CON 0012                      i1l285 03BD  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
                    u57_20 03B6                      u57_21 03B5                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _SSPIE 0463                      _TRISE 0089                      _SSPIF 0063  
                    _TXREG 0019         __size_of_UART_Init 0017                      _close 0034  
                    _light 003E                      _setup 025E                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 025E  
          __initialization 000F               __end_of_main 019E                     ??_main 0031  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0073         ??_I2C_Master_Start 0073  
       ??_I2C_Master_Write 0075                     _CCP1M2 00BA                     _CCP1M3 00BB  
                   _ADRESH 001E                     _ADRESL 009E                     _CCPR1L 0015  
                   ?_setup 0070                     _ANSELH 0189                     i1l1511 03B6  
                   i1l1513 03B8                     i1l1515 03BC                     i1l1509 03B0  
                ??_Lcd_Cmd 0073                     _TMR1IE 0460                     _TMR1IF 0060  
                   _TMR2IF 0061                     _SPBRGH 009A                     _TMR1ON 0080  
  __size_of_Lcd_Write_Char 0018                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _TRISC5 043D                     _SSPCON 0014  
                   _SSPBUF 0013          __end_of_UART_Init 039C           ?_UART_Write_Char 0070  
                ??___lldiv 0073                     saved_w 007E    __end_of__initialization 001F  
            _light_compare 007A             __pcstackCOMMON 0070              __end_of_setup 02B0  
 UART_Write_Char@character 0073                  ?_Lcd_Init 0070                    ??_setup 0078  
               __pbssBANK0 0034                 __pmaintext 0023                 __pintentry 0004  
__size_of_Lcd_Write_String 0029                 ??_Lcd_Init 0076                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 031A             _Lcd_Write_Char 036D  
                  _Lcd_Cmd 039C                    ___lldiv 019E                    __ptext1 025E  
                  __ptext2 0385                    __ptext3 0206                    __ptext4 039C  
                  __ptext5 02B0                    __ptext6 019E                    __ptext7 03D1  
                  __ptext8 0344                    __ptext9 036D                  _T1CONbits 0010  
                _T2CONbits 0012               __size_of_isr 0014   __size_of_I2C_Master_Init 003A  
 __size_of_I2C_Master_Read 0030   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
   __end_of_Lcd_Write_Char 0385       end_of_initialization 001F  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0020            ___lldiv@counter 002C  
                _RCSTAbits 0018           I2C_Master_Init@c 002D           I2C_Master_Read@a 0073  
                _UART_Init 0385                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0022          Lcd_Write_String@i 0020                  _TXSTAbits 0098  
         _Lcd_Write_String 0344                 ?_UART_Init 0070   __size_of_UART_Write_Char 000C  
      start_initialization 000F                __end_of_isr 03C4          __size_of_Lcd_Init 0058  
        ??_I2C_Master_Init 0074          ??_I2C_Master_Read 0075          ??_I2C_Master_Wait 0073  
        ??_I2C_Master_Stop 0073            Lcd_Write_Char@a 0075                __pbssCOMMON 0078  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
         _I2C_Master_Start 03F0           _I2C_Master_Write 03DD                   ?___lldiv 0020  
              ??_UART_Init 0073                  __pstrings 031A                  _in_sensor 0036  
        ??_UART_Write_Char 0073             __size_of_setup 0052          interrupt_function 0004  
                 Lcd_Cmd@a 0075                __stringbase 031F           ??_Lcd_Write_Char 0073  
                 _Lcd_Init 0206        I2C_Master_Read@temp 0020   __end_of_Lcd_Write_String 036D  
         __size_of_Lcd_Cmd 0014           __size_of___lldiv 0068         __end_of__stringtab 0320  
          _I2C_Master_Init 02B0            _I2C_Master_Read 02EA            _I2C_Master_Wait 03C4  
          _I2C_Master_Stop 03E7                   __ptext10 03DD                   __ptext11 03E7  
                 __ptext12 03F0                   __ptext13 02EA                   __ptext14 03C4  
                 __ptext15 03B0              __size_of_main 017B                   _out_flag 003B  
 __end_of_I2C_Master_Start 03F9   __end_of_I2C_Master_Write 03E7                   intlevel1 0000  
         ___lldiv@dividend 0024                  stringcode 031A    __end_of_I2C_Master_Init 02EA  
  __end_of_I2C_Master_Read 031A    __end_of_I2C_Master_Wait 03D1    __end_of_I2C_Master_Stop 03F0  
          _UART_Write_Char 03D1           ___lldiv@quotient 0028          I2C_Master_Write@d 0073  
                 stringdir 031A                   stringtab 031A                _SSPCON2bits 0091  
