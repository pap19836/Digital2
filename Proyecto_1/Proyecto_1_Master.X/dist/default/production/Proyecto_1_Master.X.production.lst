

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Sep 03 16:00:28 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  000E                     _TMR1	set	14
   298  0009                     _PORTE	set	9
   299  0008                     _PORTD	set	8
   300  0007                     _PORTC	set	7
   301  0006                     _PORTB	set	6
   302  0012                     _T2CONbits	set	18
   303  0012                     _T2CON	set	18
   304  0010                     _T1CONbits	set	16
   305  001A                     _RCREG	set	26
   306  0015                     _CCPR1L	set	21
   307  0013                     _SSPBUF	set	19
   308  0014                     _SSPCON	set	20
   309  0019                     _TXREG	set	25
   310  0018                     _RCSTAbits	set	24
   311  0005                     _PORTA	set	5
   312  001E                     _ADRESH	set	30
   313  0061                     _TMR2IF	set	97
   314  00BA                     _CCP1M2	set	186
   315  00BB                     _CCP1M3	set	187
   316  0060                     _TMR1IF	set	96
   317  0042                     _RD2	set	66
   318  0065                     _RCIF	set	101
   319  0080                     _TMR1ON	set	128
   320  0041                     _RD1	set	65
   321  0040                     _RD0	set	64
   322  0063                     _SSPIF	set	99
   323  005E                     _PEIE	set	94
   324  005F                     _GIE	set	95
   325  0049                     _RE1	set	73
   326  0048                     _RE0	set	72
   327  0092                     _PR2	set	146
   328  0089                     _TRISE	set	137
   329  0088                     _TRISD	set	136
   330  0087                     _TRISC	set	135
   331  0086                     _TRISB	set	134
   332  0085                     _TRISA	set	133
   333  0091                     _SSPCON2bits	set	145
   334  0093                     _SSPADD	set	147
   335  0091                     _SSPCON2	set	145
   336  0094                     _SSPSTATbits	set	148
   337  0094                     _SSPSTAT	set	148
   338  0099                     _SPBRG	set	153
   339  009A                     _SPBRGH	set	154
   340  0098                     _TXSTAbits	set	152
   341  0087                     _TRISCbits	set	135
   342  009E                     _ADRESL	set	158
   343  0460                     _TMR1IE	set	1120
   344  0463                     _SSPIE	set	1123
   345  043C                     _TRISC4	set	1084
   346  043B                     _TRISC3	set	1083
   347  043D                     _TRISC5	set	1085
   348  0189                     _ANSELH	set	393
   349  0188                     _ANSEL	set	392
   350  0C3B                     _BRG16	set	3131
   351                           
   352                           	psect	strings
   353  0454                     __pstrings:
   354  0454                     stringtab:
   355  0454                     __stringtab:
   356  0454                     stringcode:	
   357                           ;	String table - string pointers are 1 byte each
   358                           
   359  0454                     stringdir:
   360  0454  3004               	movlw	high stringdir
   361  0455  008A               	movwf	10
   362  0456  0804               	movf	4,w
   363  0457  0A84               	incf	4,f
   364  0458  0782               	addwf	2,f
   365  0459                     __stringbase:
   366  0459  3400               	retlw	0
   367  045A                     __end_of__stringtab:
   368  045A                     STR_1:
   369  045A  3420               	retlw	32	;' '
   370  045B  344C               	retlw	76	;'L'
   371  045C  346F               	retlw	111	;'o'
   372  045D  3463               	retlw	99	;'c'
   373  045E  346B               	retlw	107	;'k'
   374  045F  3420               	retlw	32	;' '
   375  0460  3444               	retlw	68	;'D'
   376  0461  346F               	retlw	111	;'o'
   377  0462  346F               	retlw	111	;'o'
   378  0463  3472               	retlw	114	;'r'
   379  0464  3420               	retlw	32	;' '
   380  0465  344C               	retlw	76	;'L'
   381  0466  3469               	retlw	105	;'i'
   382  0467  3467               	retlw	103	;'g'
   383  0468  3468               	retlw	104	;'h'
   384  0469  3474               	retlw	116	;'t'
   385  046A  3473               	retlw	115	;'s'
   386  046B  3400               	retlw	0
   387  046C                     STR_3:
   388  046C  3420               	retlw	32	;' '
   389  046D  344E               	retlw	78	;'N'
   390  046E  344F               	retlw	79	;'O'
   391  046F  3420               	retlw	32	;' '
   392  0470  3400               	retlw	0
   393  0471                     STR_10:
   394  0471  3420               	retlw	32	;' '
   395  0472  344F               	retlw	79	;'O'
   396  0473  3446               	retlw	70	;'F'
   397  0474  3446               	retlw	70	;'F'
   398  0475  3400               	retlw	0
   399  0476                     STR_6:
   400  0476  344F               	retlw	79	;'O'
   401  0477  3450               	retlw	80	;'P'
   402  0478  3445               	retlw	69	;'E'
   403  0479  344E               	retlw	78	;'N'
   404  047A  3400               	retlw	0
   405  047B                     STR_2:
   406  047B  3420               	retlw	32	;' '
   407  047C  344F               	retlw	79	;'O'
   408  047D  344E               	retlw	78	;'N'
   409  047E  3400               	retlw	0
   410  046C                     
   411                           	psect	cinit
   412  000F                     start_initialization:	
   413                           ; #config settings
   414                           
   415  000F                     __initialization:
   416                           
   417                           ; Clear objects allocated to BANK0
   418  000F  1283               	bcf	3,5	;RP0=0, select bank0
   419  0010  1303               	bcf	3,6	;RP1=0, select bank0
   420  0011  01B2               	clrf	__pbssBANK0& (0+127)
   421  0012  01B3               	clrf	(__pbssBANK0+1)& (0+127)
   422  0013  01B4               	clrf	(__pbssBANK0+2)& (0+127)
   423  0014  01B5               	clrf	(__pbssBANK0+3)& (0+127)
   424  0015  01B6               	clrf	(__pbssBANK0+4)& (0+127)
   425  0016  01B7               	clrf	(__pbssBANK0+5)& (0+127)
   426  0017  01B8               	clrf	(__pbssBANK0+6)& (0+127)
   427  0018  01B9               	clrf	(__pbssBANK0+7)& (0+127)
   428  0019  01BA               	clrf	(__pbssBANK0+8)& (0+127)
   429  001A  01BB               	clrf	(__pbssBANK0+9)& (0+127)
   430  001B  01BC               	clrf	(__pbssBANK0+10)& (0+127)
   431  001C  01BD               	clrf	(__pbssBANK0+11)& (0+127)
   432  001D  01BE               	clrf	(__pbssBANK0+12)& (0+127)
   433  001E  01BF               	clrf	(__pbssBANK0+13)& (0+127)
   434  001F                     end_of_initialization:	
   435                           ;End of C runtime variable initialization code
   436                           
   437  001F                     __end_of__initialization:
   438  001F  0183               	clrf	3
   439  0020  120A  118A  2823   	ljmp	_main	;jump to C main() function
   440                           
   441                           	psect	bssBANK0
   442  0032                     __pbssBANK0:
   443  0032                     _light:
   444  0032                     	ds	2
   445  0034                     _close:
   446  0034                     	ds	1
   447  0035                     _time:
   448  0035                     	ds	1
   449  0036                     _in_sensor:
   450  0036                     	ds	1
   451  0037                     _keep_door_open:
   452  0037                     	ds	1
   453  0038                     _door:
   454  0038                     	ds	1
   455  0039                     _keep_lock_off:
   456  0039                     	ds	1
   457  003A                     _lock:
   458  003A                     	ds	1
   459  003B                     _out_flag:
   460  003B                     	ds	1
   461  003C                     _Adafruit_light:
   462  003C                     	ds	1
   463  003D                     _light_flag:
   464  003D                     	ds	1
   465  003E                     _light_high:
   466  003E                     	ds	1
   467  003F                     _light_low:
   468  003F                     	ds	1
   469                           
   470                           	psect	cstackCOMMON
   471  0070                     __pcstackCOMMON:
   472  0070                     ?_setup:
   473  0070                     ?_Lcd_Cmd:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ?_Lcd_Init:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ?_Lcd_Write_Char:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_Lcd_Write_String:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ?_UART_Init:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ?_UART_Write_Char:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?_I2C_Master_Wait:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?_I2C_Master_Start:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ?_I2C_Master_Stop:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_main:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?_isr:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ??_isr:	
   507                           ; 1 bytes @ 0x0
   508                           
   509                           
   510                           ; 1 bytes @ 0x0
   511  0070                     	ds	3
   512  0073                     ??_Lcd_Cmd:
   513  0073                     ??_Lcd_Write_Char:	
   514                           ; 1 bytes @ 0x3
   515                           
   516  0073                     ??_UART_Init:	
   517                           ; 1 bytes @ 0x3
   518                           
   519  0073                     ??_UART_Write_Char:	
   520                           ; 1 bytes @ 0x3
   521                           
   522  0073                     ??_I2C_Master_Wait:	
   523                           ; 1 bytes @ 0x3
   524                           
   525  0073                     ??_I2C_Master_Start:	
   526                           ; 1 bytes @ 0x3
   527                           
   528  0073                     ??_I2C_Master_Stop:	
   529                           ; 1 bytes @ 0x3
   530                           
   531  0073                     ?_I2C_Master_Write:	
   532                           ; 1 bytes @ 0x3
   533                           
   534  0073                     ?_I2C_Master_Read:	
   535                           ; 1 bytes @ 0x3
   536                           
   537  0073                     ?___lldiv:	
   538                           ; 2 bytes @ 0x3
   539                           
   540  0073                     UART_Write_Char@character:	
   541                           ; 4 bytes @ 0x3
   542                           
   543  0073                     I2C_Master_Write@d:	
   544                           ; 1 bytes @ 0x3
   545                           
   546  0073                     I2C_Master_Read@a:	
   547                           ; 2 bytes @ 0x3
   548                           
   549  0073                     ___lldiv@divisor:	
   550                           ; 2 bytes @ 0x3
   551                           
   552                           
   553                           ; 4 bytes @ 0x3
   554  0073                     	ds	2
   555  0075                     ??_I2C_Master_Write:
   556  0075                     ??_I2C_Master_Read:	
   557                           ; 1 bytes @ 0x5
   558                           
   559  0075                     Lcd_Cmd@a:	
   560                           ; 1 bytes @ 0x5
   561                           
   562  0075                     Lcd_Write_Char@a:	
   563                           ; 1 bytes @ 0x5
   564                           
   565                           
   566                           ; 1 bytes @ 0x5
   567  0075                     	ds	1
   568  0076                     ??_Lcd_Init:
   569  0076                     ??_Lcd_Write_String:	
   570                           ; 1 bytes @ 0x6
   571                           
   572  0076                     Lcd_Write_String@i:	
   573                           ; 1 bytes @ 0x6
   574                           
   575                           
   576                           ; 2 bytes @ 0x6
   577  0076                     	ds	1
   578  0077                     I2C_Master_Read@temp:
   579  0077                     ___lldiv@dividend:	
   580                           ; 2 bytes @ 0x7
   581                           
   582                           
   583                           ; 4 bytes @ 0x7
   584  0077                     	ds	1
   585  0078                     Lcd_Write_String@a:
   586                           
   587                           ; 1 bytes @ 0x8
   588  0078                     	ds	3
   589  007B                     ??_setup:
   590                           
   591                           	psect	cstackBANK0
   592  0020                     __pcstackBANK0:	
   593                           ; 1 bytes @ 0xB
   594                           
   595  0020                     ??___lldiv:
   596                           
   597                           ; 1 bytes @ 0x0
   598  0020                     	ds	1
   599  0021                     ___lldiv@quotient:
   600                           
   601                           ; 4 bytes @ 0x1
   602  0021                     	ds	4
   603  0025                     ___lldiv@counter:
   604                           
   605                           ; 1 bytes @ 0x5
   606  0025                     	ds	1
   607  0026                     ?_I2C_Master_Init:
   608  0026                     I2C_Master_Init@c:	
   609                           ; 1 bytes @ 0x6
   610                           
   611                           
   612                           ; 4 bytes @ 0x6
   613  0026                     	ds	4
   614  002A                     ??_I2C_Master_Init:
   615                           
   616                           ; 1 bytes @ 0xA
   617  002A                     	ds	4
   618  002E                     ??_main:
   619                           
   620                           ; 1 bytes @ 0xE
   621  002E                     	ds	4
   622                           
   623                           	psect	maintext
   624  0023                     __pmaintext:	
   625 ;;
   626 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   627 ;;
   628 ;; *************** function _main *****************
   629 ;; Defined at:
   630 ;;		line 72 in file "main.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : B00/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   644 ;;      Params:         0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0
   646 ;;      Temps:          0       4       0       0       0
   647 ;;      Totals:         0       4       0       0       0
   648 ;;Total ram usage:        4 bytes
   649 ;; Hardware stack levels required when called: 4
   650 ;; This function calls:
   651 ;;		_I2C_Master_Read
   652 ;;		_I2C_Master_Start
   653 ;;		_I2C_Master_Stop
   654 ;;		_I2C_Master_Write
   655 ;;		_Lcd_Cmd
   656 ;;		_Lcd_Write_String
   657 ;;		_UART_Write_Char
   658 ;;		_setup
   659 ;; This function is called by:
   660 ;;		Startup code after reset
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           
   665                           ;psect for function _main
   666  0023                     _main:
   667  0023                     l1533:	
   668                           ;incstack = 0
   669                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   670                           
   671                           
   672                           ;main.c: 73:     setup();
   673  0023  120A  118A  2398  120A  118A  	fcall	_setup
   674  0028                     l1535:
   675                           
   676                           ;main.c: 75:     Lcd_Write_String(" Lock Door Lights");
   677  0028  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   678  0029  120A  118A  247F  120A  118A  	fcall	_Lcd_Write_String
   679  002E                     l1537:
   680                           
   681                           ;main.c: 76:     Lcd_Cmd(0b11000000);
   682  002E  30C0               	movlw	192
   683  002F  120A  118A  24D3  120A  118A  	fcall	_Lcd_Cmd
   684                           
   685                           ;main.c: 77:     Lcd_Write_String(" ON");
   686  0034  3022               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   687  0035  120A  118A  247F  120A  118A  	fcall	_Lcd_Write_String
   688  003A                     l1539:
   689                           
   690                           ;main.c: 78:     Lcd_Cmd(0b11000100);
   691  003A  30C4               	movlw	196
   692  003B  120A  118A  24D3  120A  118A  	fcall	_Lcd_Cmd
   693  0040                     l1541:
   694                           
   695                           ;main.c: 79:     Lcd_Write_String(" NO ");
   696  0040  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   697  0041  120A  118A  247F  120A  118A  	fcall	_Lcd_Write_String
   698                           
   699                           ;main.c: 80:     Lcd_Cmd(0b11001100);
   700  0046  30CC               	movlw	204
   701  0047  120A  118A  24D3  120A  118A  	fcall	_Lcd_Cmd
   702  004C                     l1543:
   703                           
   704                           ;main.c: 81:     Lcd_Write_String("OFF");
   705  004C  3019               	movlw	(low (((STR_10+1)-__stringbase)| (0+32768)))& (0+255)
   706  004D  120A  118A  247F  120A  118A  	fcall	_Lcd_Write_String
   707  0052                     l1545:
   708                           
   709                           ;main.c: 84:         I2C_Master_Start();
   710  0052  120A  118A  2527  120A  118A  	fcall	_I2C_Master_Start
   711  0057                     l1547:
   712                           
   713                           ;main.c: 85:         I2C_Master_Write(0b01110010);
   714  0057  3072               	movlw	114
   715  0058  00F3               	movwf	I2C_Master_Write@d
   716  0059  3000               	movlw	0
   717  005A  00F4               	movwf	I2C_Master_Write@d+1
   718  005B  120A  118A  2514  120A  118A  	fcall	_I2C_Master_Write
   719  0060                     l1549:
   720                           
   721                           ;main.c: 86:         I2C_Master_Write(0b10000000);
   722  0060  3080               	movlw	128
   723  0061  00F3               	movwf	I2C_Master_Write@d
   724  0062  3000               	movlw	0
   725  0063  00F4               	movwf	I2C_Master_Write@d+1
   726  0064  120A  118A  2514  120A  118A  	fcall	_I2C_Master_Write
   727  0069                     l1551:
   728                           
   729                           ;main.c: 87:         I2C_Master_Write(0b00000011);
   730  0069  3003               	movlw	3
   731  006A  00F3               	movwf	I2C_Master_Write@d
   732  006B  3000               	movlw	0
   733  006C  00F4               	movwf	I2C_Master_Write@d+1
   734  006D  120A  118A  2514  120A  118A  	fcall	_I2C_Master_Write
   735  0072                     l1553:
   736                           
   737                           ;main.c: 88:         I2C_Master_Stop();
   738  0072  120A  118A  251E  120A  118A  	fcall	_I2C_Master_Stop
   739  0077                     l1555:
   740                           
   741                           ;main.c: 90:         _delay((unsigned long)((403)*(4000000/4000.0)));
   742  0077  3003               	movlw	3
   743  0078  1283               	bcf	3,5	;RP0=0, select bank0
   744  0079  1303               	bcf	3,6	;RP1=0, select bank0
   745  007A  00B0               	movwf	??_main+2
   746  007B  300C               	movlw	12
   747  007C  00AF               	movwf	??_main+1
   748  007D  305B               	movlw	91
   749  007E  00AE               	movwf	??_main
   750  007F                     u687:
   751  007F  0BAE               	decfsz	??_main,f
   752  0080  287F               	goto	u687
   753  0081  0BAF               	decfsz	??_main+1,f
   754  0082  287F               	goto	u687
   755  0083  0BB0               	decfsz	??_main+2,f
   756  0084  287F               	goto	u687
   757  0085  2886               	nop2
   758  0086                     l1557:
   759                           
   760                           ;main.c: 91:         I2C_Master_Start();
   761  0086  120A  118A  2527  120A  118A  	fcall	_I2C_Master_Start
   762  008B                     l1559:
   763                           
   764                           ;main.c: 92:         I2C_Master_Write(0b01110010);
   765  008B  3072               	movlw	114
   766  008C  00F3               	movwf	I2C_Master_Write@d
   767  008D  3000               	movlw	0
   768  008E  00F4               	movwf	I2C_Master_Write@d+1
   769  008F  120A  118A  2514  120A  118A  	fcall	_I2C_Master_Write
   770  0094                     l1561:
   771                           
   772                           ;main.c: 93:         I2C_Master_Write(0b10101100);
   773  0094  30AC               	movlw	172
   774  0095  00F3               	movwf	I2C_Master_Write@d
   775  0096  3000               	movlw	0
   776  0097  00F4               	movwf	I2C_Master_Write@d+1
   777  0098  120A  118A  2514  120A  118A  	fcall	_I2C_Master_Write
   778  009D                     l1563:
   779                           
   780                           ;main.c: 94:         I2C_Master_Stop();
   781  009D  120A  118A  251E  120A  118A  	fcall	_I2C_Master_Stop
   782  00A2                     l1565:
   783                           
   784                           ;main.c: 96:         I2C_Master_Start();
   785  00A2  120A  118A  2527  120A  118A  	fcall	_I2C_Master_Start
   786  00A7                     l1567:
   787                           
   788                           ;main.c: 97:         I2C_Master_Write(0b01110011);
   789  00A7  3073               	movlw	115
   790  00A8  00F3               	movwf	I2C_Master_Write@d
   791  00A9  3000               	movlw	0
   792  00AA  00F4               	movwf	I2C_Master_Write@d+1
   793  00AB  120A  118A  2514  120A  118A  	fcall	_I2C_Master_Write
   794  00B0                     l1569:
   795                           
   796                           ;main.c: 98:         light_low = I2C_Master_Read(0);
   797  00B0  3000               	movlw	0
   798  00B1  00F3               	movwf	I2C_Master_Read@a
   799  00B2  00F4               	movwf	I2C_Master_Read@a+1
   800  00B3  120A  118A  2426  120A  118A  	fcall	_I2C_Master_Read
   801  00B8  0873               	movf	?_I2C_Master_Read,w
   802  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   803  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   804  00BB  00AE               	movwf	??_main
   805  00BC  082E               	movf	??_main,w
   806  00BD  00BF               	movwf	_light_low
   807  00BE                     l1571:
   808                           
   809                           ;main.c: 99:         I2C_Master_Stop();
   810  00BE  120A  118A  251E  120A  118A  	fcall	_I2C_Master_Stop
   811  00C3                     l1573:
   812                           
   813                           ;main.c: 101:         I2C_Master_Start();
   814  00C3  120A  118A  2527  120A  118A  	fcall	_I2C_Master_Start
   815  00C8                     l1575:
   816                           
   817                           ;main.c: 102:         I2C_Master_Write(0b01110010);
   818  00C8  3072               	movlw	114
   819  00C9  00F3               	movwf	I2C_Master_Write@d
   820  00CA  3000               	movlw	0
   821  00CB  00F4               	movwf	I2C_Master_Write@d+1
   822  00CC  120A  118A  2514  120A  118A  	fcall	_I2C_Master_Write
   823  00D1                     l1577:
   824                           
   825                           ;main.c: 103:         I2C_Master_Write(0b10101100);
   826  00D1  30AC               	movlw	172
   827  00D2  00F3               	movwf	I2C_Master_Write@d
   828  00D3  3000               	movlw	0
   829  00D4  00F4               	movwf	I2C_Master_Write@d+1
   830  00D5  120A  118A  2514  120A  118A  	fcall	_I2C_Master_Write
   831  00DA                     l1579:
   832                           
   833                           ;main.c: 104:         I2C_Master_Stop();
   834  00DA  120A  118A  251E  120A  118A  	fcall	_I2C_Master_Stop
   835  00DF                     l1581:
   836                           
   837                           ;main.c: 106:         I2C_Master_Start();
   838  00DF  120A  118A  2527  120A  118A  	fcall	_I2C_Master_Start
   839  00E4                     l1583:
   840                           
   841                           ;main.c: 107:         I2C_Master_Write(0b01110011);
   842  00E4  3073               	movlw	115
   843  00E5  00F3               	movwf	I2C_Master_Write@d
   844  00E6  3000               	movlw	0
   845  00E7  00F4               	movwf	I2C_Master_Write@d+1
   846  00E8  120A  118A  2514  120A  118A  	fcall	_I2C_Master_Write
   847  00ED                     l1585:
   848                           
   849                           ;main.c: 108:         light_high = I2C_Master_Read(0);
   850  00ED  3000               	movlw	0
   851  00EE  00F3               	movwf	I2C_Master_Read@a
   852  00EF  00F4               	movwf	I2C_Master_Read@a+1
   853  00F0  120A  118A  2426  120A  118A  	fcall	_I2C_Master_Read
   854  00F5  0873               	movf	?_I2C_Master_Read,w
   855  00F6  1283               	bcf	3,5	;RP0=0, select bank0
   856  00F7  1303               	bcf	3,6	;RP1=0, select bank0
   857  00F8  00AE               	movwf	??_main
   858  00F9  082E               	movf	??_main,w
   859  00FA  00BE               	movwf	_light_high
   860  00FB                     l1587:
   861                           
   862                           ;main.c: 109:         I2C_Master_Stop();
   863  00FB  120A  118A  251E  120A  118A  	fcall	_I2C_Master_Stop
   864  0100                     l1589:
   865                           
   866                           ;main.c: 110:         _delay((unsigned long)((200)*(4000000/4000.0)));
   867  0100  3002               	movlw	2
   868  0101  1283               	bcf	3,5	;RP0=0, select bank0
   869  0102  1303               	bcf	3,6	;RP1=0, select bank0
   870  0103  00B0               	movwf	??_main+2
   871  0104  3004               	movlw	4
   872  0105  00AF               	movwf	??_main+1
   873  0106  30B9               	movlw	185
   874  0107  00AE               	movwf	??_main
   875  0108                     u697:
   876  0108  0BAE               	decfsz	??_main,f
   877  0109  2908               	goto	u697
   878  010A  0BAF               	decfsz	??_main+1,f
   879  010B  2908               	goto	u697
   880  010C  0BB0               	decfsz	??_main+2,f
   881  010D  2908               	goto	u697
   882  010E  290F               	nop2
   883  010F                     l1591:
   884                           
   885                           ;main.c: 112:         light = (light_high<<8)| light_low;
   886  010F  1283               	bcf	3,5	;RP0=0, select bank0
   887  0110  1303               	bcf	3,6	;RP1=0, select bank0
   888  0111  083F               	movf	_light_low,w
   889  0112  00AE               	movwf	??_main
   890  0113  01AF               	clrf	??_main+1
   891  0114  083E               	movf	_light_high,w
   892  0115  00B0               	movwf	??_main+2
   893  0116  01B1               	clrf	??_main+3
   894  0117  0830               	movf	??_main+2,w
   895  0118  00B1               	movwf	??_main+3
   896  0119  01B0               	clrf	??_main+2
   897  011A  082E               	movf	??_main,w
   898  011B  0430               	iorwf	??_main+2,w
   899  011C  00B2               	movwf	_light
   900  011D  082F               	movf	??_main+1,w
   901  011E  0431               	iorwf	??_main+3,w
   902  011F  00B3               	movwf	_light+1
   903  0120                     l1593:
   904                           
   905                           ;main.c: 115:         I2C_Master_Start();
   906  0120  120A  118A  2527  120A  118A  	fcall	_I2C_Master_Start
   907  0125                     l1595:
   908                           
   909                           ;main.c: 116:         I2C_Master_Write(0b00000001);
   910  0125  3001               	movlw	1
   911  0126  00F3               	movwf	I2C_Master_Write@d
   912  0127  3000               	movlw	0
   913  0128  00F4               	movwf	I2C_Master_Write@d+1
   914  0129  120A  118A  2514  120A  118A  	fcall	_I2C_Master_Write
   915  012E                     l1597:
   916                           
   917                           ;main.c: 117:         out_flag = I2C_Master_Read(0);
   918  012E  3000               	movlw	0
   919  012F  00F3               	movwf	I2C_Master_Read@a
   920  0130  00F4               	movwf	I2C_Master_Read@a+1
   921  0131  120A  118A  2426  120A  118A  	fcall	_I2C_Master_Read
   922  0136  0873               	movf	?_I2C_Master_Read,w
   923  0137  1283               	bcf	3,5	;RP0=0, select bank0
   924  0138  1303               	bcf	3,6	;RP1=0, select bank0
   925  0139  00AE               	movwf	??_main
   926  013A  082E               	movf	??_main,w
   927  013B  00BB               	movwf	_out_flag
   928  013C                     l1599:
   929                           
   930                           ;main.c: 118:         I2C_Master_Stop();
   931  013C  120A  118A  251E  120A  118A  	fcall	_I2C_Master_Stop
   932  0141                     l1601:
   933                           
   934                           ;main.c: 119:         _delay((unsigned long)((200)*(4000000/4000.0)));
   935  0141  3002               	movlw	2
   936  0142  1283               	bcf	3,5	;RP0=0, select bank0
   937  0143  1303               	bcf	3,6	;RP1=0, select bank0
   938  0144  00B0               	movwf	??_main+2
   939  0145  3004               	movlw	4
   940  0146  00AF               	movwf	??_main+1
   941  0147  30B9               	movlw	185
   942  0148  00AE               	movwf	??_main
   943  0149                     u707:
   944  0149  0BAE               	decfsz	??_main,f
   945  014A  2949               	goto	u707
   946  014B  0BAF               	decfsz	??_main+1,f
   947  014C  2949               	goto	u707
   948  014D  0BB0               	decfsz	??_main+2,f
   949  014E  2949               	goto	u707
   950  014F  2950               	nop2
   951  0150                     l1603:
   952                           
   953                           ;main.c: 120:         lock = out_flag & 0b00000001;
   954  0150  1283               	bcf	3,5	;RP0=0, select bank0
   955  0151  1303               	bcf	3,6	;RP1=0, select bank0
   956  0152  083B               	movf	_out_flag,w
   957  0153  3901               	andlw	1
   958  0154  00AE               	movwf	??_main
   959  0155  082E               	movf	??_main,w
   960  0156  00BA               	movwf	_lock
   961  0157                     l1605:
   962                           
   963                           ;main.c: 121:         door = out_flag & 0b00000010;
   964  0157  083B               	movf	_out_flag,w
   965  0158  3902               	andlw	2
   966  0159  00AE               	movwf	??_main
   967  015A  082E               	movf	??_main,w
   968  015B  00B8               	movwf	_door
   969  015C                     l1607:
   970                           
   971                           ;main.c: 124:         I2C_Master_Start();
   972  015C  120A  118A  2527  120A  118A  	fcall	_I2C_Master_Start
   973  0161                     l1609:
   974                           
   975                           ;main.c: 125:         I2C_Master_Write(0b00000011);
   976  0161  3003               	movlw	3
   977  0162  00F3               	movwf	I2C_Master_Write@d
   978  0163  3000               	movlw	0
   979  0164  00F4               	movwf	I2C_Master_Write@d+1
   980  0165  120A  118A  2514  120A  118A  	fcall	_I2C_Master_Write
   981  016A                     l1611:
   982                           
   983                           ;main.c: 126:         in_sensor = I2C_Master_Read(0);
   984  016A  3000               	movlw	0
   985  016B  00F3               	movwf	I2C_Master_Read@a
   986  016C  00F4               	movwf	I2C_Master_Read@a+1
   987  016D  120A  118A  2426  120A  118A  	fcall	_I2C_Master_Read
   988  0172  0873               	movf	?_I2C_Master_Read,w
   989  0173  1283               	bcf	3,5	;RP0=0, select bank0
   990  0174  1303               	bcf	3,6	;RP1=0, select bank0
   991  0175  00AE               	movwf	??_main
   992  0176  082E               	movf	??_main,w
   993  0177  00B6               	movwf	_in_sensor
   994  0178                     l1613:
   995                           
   996                           ;main.c: 127:         I2C_Master_Stop();
   997  0178  120A  118A  251E  120A  118A  	fcall	_I2C_Master_Stop
   998  017D                     l1615:
   999                           
  1000                           ;main.c: 128:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1001  017D  3002               	movlw	2
  1002  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1003  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1004  0180  00B0               	movwf	??_main+2
  1005  0181  3004               	movlw	4
  1006  0182  00AF               	movwf	??_main+1
  1007  0183  30B9               	movlw	185
  1008  0184  00AE               	movwf	??_main
  1009  0185                     u717:
  1010  0185  0BAE               	decfsz	??_main,f
  1011  0186  2985               	goto	u717
  1012  0187  0BAF               	decfsz	??_main+1,f
  1013  0188  2985               	goto	u717
  1014  0189  0BB0               	decfsz	??_main+2,f
  1015  018A  2985               	goto	u717
  1016  018B  298C               	nop2
  1017  018C                     l1617:
  1018                           
  1019                           ;main.c: 131:         UART_Write_Char(44);
  1020  018C  302C               	movlw	44
  1021  018D  120A  118A  2508  120A  118A  	fcall	_UART_Write_Char
  1022  0192                     l1619:
  1023                           
  1024                           ;main.c: 132:         UART_Write_Char(keep_lock_off+48);
  1025  0192  1283               	bcf	3,5	;RP0=0, select bank0
  1026  0193  1303               	bcf	3,6	;RP1=0, select bank0
  1027  0194  0839               	movf	_keep_lock_off,w
  1028  0195  3E30               	addlw	48
  1029  0196  120A  118A  2508  120A  118A  	fcall	_UART_Write_Char
  1030  019B                     l1621:
  1031                           
  1032                           ;main.c: 133:         UART_Write_Char(44);
  1033  019B  302C               	movlw	44
  1034  019C  120A  118A  2508  120A  118A  	fcall	_UART_Write_Char
  1035  01A1                     l1623:
  1036                           
  1037                           ;main.c: 134:         UART_Write_Char(keep_door_open+48);
  1038  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1039  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1040  01A3  0837               	movf	_keep_door_open,w
  1041  01A4  3E30               	addlw	48
  1042  01A5  120A  118A  2508  120A  118A  	fcall	_UART_Write_Char
  1043  01AA                     l1625:
  1044                           
  1045                           ;main.c: 135:         UART_Write_Char(44);
  1046  01AA  302C               	movlw	44
  1047  01AB  120A  118A  2508  120A  118A  	fcall	_UART_Write_Char
  1048  01B0                     l1627:
  1049                           
  1050                           ;main.c: 136:         UART_Write_Char(light_flag+48);
  1051  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1052  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1053  01B2  083D               	movf	_light_flag,w
  1054  01B3  3E30               	addlw	48
  1055  01B4  120A  118A  2508  120A  118A  	fcall	_UART_Write_Char
  1056  01B9                     l1629:
  1057                           
  1058                           ;main.c: 137:         UART_Write_Char(44);
  1059  01B9  302C               	movlw	44
  1060  01BA  120A  118A  2508  120A  118A  	fcall	_UART_Write_Char
  1061  01BF                     l1631:
  1062                           
  1063                           ;main.c: 140:         if(lock != 0 && keep_lock_off == 0){
  1064  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  1065  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  1066  01C1  083A               	movf	_lock,w
  1067  01C2  1903               	btfsc	3,2
  1068  01C3  29C5               	goto	u511
  1069  01C4  29C6               	goto	u510
  1070  01C5                     u511:
  1071  01C5  29DD               	goto	l1643
  1072  01C6                     u510:
  1073  01C6                     l1633:
  1074  01C6  0839               	movf	_keep_lock_off,w
  1075  01C7  1D03               	btfss	3,2
  1076  01C8  29CA               	goto	u521
  1077  01C9  29CB               	goto	u520
  1078  01CA                     u521:
  1079  01CA  29DD               	goto	l1643
  1080  01CB                     u520:
  1081  01CB                     l1635:
  1082                           
  1083                           ;main.c: 141:             CCPR1L = 128;
  1084  01CB  3080               	movlw	128
  1085  01CC  0095               	movwf	21	;volatile
  1086  01CD                     l1637:
  1087                           
  1088                           ;main.c: 142:             Lcd_Cmd(0b11000000);
  1089  01CD  30C0               	movlw	192
  1090  01CE  120A  118A  24D3  120A  118A  	fcall	_Lcd_Cmd
  1091  01D3                     l1639:
  1092                           
  1093                           ;main.c: 143:             Lcd_Write_String("OFF");
  1094  01D3  3019               	movlw	(low (((STR_10+1)-__stringbase)| (0+32768)))& (0+255)
  1095  01D4  120A  118A  247F  120A  118A  	fcall	_Lcd_Write_String
  1096  01D9                     l1641:
  1097                           
  1098                           ;main.c: 144:             keep_lock_off = 1;
  1099  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1100  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1101  01DB  01B9               	clrf	_keep_lock_off
  1102  01DC  0AB9               	incf	_keep_lock_off,f
  1103  01DD                     l1643:
  1104                           
  1105                           ;main.c: 148:         if (door != 0 && keep_door_open == 0){
  1106  01DD  0838               	movf	_door,w
  1107  01DE  1903               	btfsc	3,2
  1108  01DF  29E1               	goto	u531
  1109  01E0  29E2               	goto	u530
  1110  01E1                     u531:
  1111  01E1  2A07               	goto	l1661
  1112  01E2                     u530:
  1113  01E2                     l1645:
  1114  01E2  0837               	movf	_keep_door_open,w
  1115  01E3  1D03               	btfss	3,2
  1116  01E4  29E6               	goto	u541
  1117  01E5  29E7               	goto	u540
  1118  01E6                     u541:
  1119  01E6  2A07               	goto	l1661
  1120  01E7                     u540:
  1121  01E7                     l1647:
  1122                           
  1123                           ;main.c: 149:             Lcd_Cmd(0b11000101);
  1124  01E7  30C5               	movlw	197
  1125  01E8  120A  118A  24D3  120A  118A  	fcall	_Lcd_Cmd
  1126  01ED                     l1649:
  1127                           
  1128                           ;main.c: 150:             Lcd_Write_String("OPEN");
  1129  01ED  301D               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1130  01EE  120A  118A  247F  120A  118A  	fcall	_Lcd_Write_String
  1131  01F3                     l1651:
  1132                           
  1133                           ;main.c: 151:             RD0 = 0;
  1134  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1135  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1136  01F5  1008               	bcf	8,0	;volatile
  1137  01F6                     l1653:
  1138                           
  1139                           ;main.c: 152:             RD1 = 1;
  1140  01F6  1488               	bsf	8,1	;volatile
  1141  01F7                     l1655:
  1142                           
  1143                           ;main.c: 153:             _delay((unsigned long)((150)*(4000000/4000.0)));
  1144  01F7  30C3               	movlw	195
  1145  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1146  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  1147  01FA  00AF               	movwf	??_main+1
  1148  01FB  30CC               	movlw	204
  1149  01FC  00AE               	movwf	??_main
  1150  01FD                     u727:
  1151  01FD  0BAE               	decfsz	??_main,f
  1152  01FE  29FD               	goto	u727
  1153  01FF  0BAF               	decfsz	??_main+1,f
  1154  0200  29FD               	goto	u727
  1155  0201  0000               	nop
  1156  0202                     l1657:
  1157                           
  1158                           ;main.c: 154:             RD1 = 0;
  1159  0202  1283               	bcf	3,5	;RP0=0, select bank0
  1160  0203  1303               	bcf	3,6	;RP1=0, select bank0
  1161  0204  1088               	bcf	8,1	;volatile
  1162  0205                     l1659:
  1163                           
  1164                           ;main.c: 155:             keep_door_open = 1;
  1165  0205  01B7               	clrf	_keep_door_open
  1166  0206  0AB7               	incf	_keep_door_open,f
  1167  0207                     l1661:
  1168                           
  1169                           ;main.c: 159:         if(in_sensor!=0 && keep_lock_off && keep_door_open){
  1170  0207  0836               	movf	_in_sensor,w
  1171  0208  1903               	btfsc	3,2
  1172  0209  2A0B               	goto	u551
  1173  020A  2A0C               	goto	u550
  1174  020B                     u551:
  1175  020B  2A19               	goto	l1671
  1176  020C                     u550:
  1177  020C                     l1663:
  1178  020C  0839               	movf	_keep_lock_off,w
  1179  020D  1903               	btfsc	3,2
  1180  020E  2A10               	goto	u561
  1181  020F  2A11               	goto	u560
  1182  0210                     u561:
  1183  0210  2A19               	goto	l1671
  1184  0211                     u560:
  1185  0211                     l1665:
  1186  0211  0837               	movf	_keep_door_open,w
  1187  0212  1903               	btfsc	3,2
  1188  0213  2A15               	goto	u571
  1189  0214  2A16               	goto	u570
  1190  0215                     u571:
  1191  0215  2A19               	goto	l1671
  1192  0216                     u570:
  1193  0216                     l1667:
  1194                           
  1195                           ;main.c: 160:             TMR1 = 0;
  1196  0216  018E               	clrf	14	;volatile
  1197  0217  018F               	clrf	15	;volatile
  1198  0218                     l1669:
  1199                           
  1200                           ;main.c: 161:             TMR1ON = 1;
  1201  0218  1410               	bsf	16,0	;volatile
  1202  0219                     l1671:
  1203                           
  1204                           ;main.c: 164:         if(time>=4){
  1205  0219  3004               	movlw	4
  1206  021A  0235               	subwf	_time,w
  1207  021B  1C03               	skipc
  1208  021C  2A1E               	goto	u581
  1209  021D  2A1F               	goto	u580
  1210  021E                     u581:
  1211  021E  2A23               	goto	l1679
  1212  021F                     u580:
  1213  021F                     l1673:
  1214                           
  1215                           ;main.c: 165:             time = 0;
  1216  021F  01B5               	clrf	_time
  1217  0220                     l1675:
  1218                           
  1219                           ;main.c: 166:             TMR1ON = 0;
  1220  0220  1010               	bcf	16,0	;volatile
  1221  0221                     l1677:
  1222                           
  1223                           ;main.c: 167:             close = 1;
  1224  0221  01B4               	clrf	_close
  1225  0222  0AB4               	incf	_close,f
  1226  0223                     l1679:
  1227                           
  1228                           ;main.c: 170:         if(close == 1 && keep_door_open == 1 && keep_lock_off == 1){
  1229  0223  0334               	decf	_close,w
  1230  0224  1D03               	btfss	3,2
  1231  0225  2A27               	goto	u591
  1232  0226  2A28               	goto	u590
  1233  0227                     u591:
  1234  0227  2A6E               	goto	l1707
  1235  0228                     u590:
  1236  0228                     l1681:
  1237  0228  0337               	decf	_keep_door_open,w
  1238  0229  1D03               	btfss	3,2
  1239  022A  2A2C               	goto	u601
  1240  022B  2A2D               	goto	u600
  1241  022C                     u601:
  1242  022C  2A6E               	goto	l1707
  1243  022D                     u600:
  1244  022D                     l1683:
  1245  022D  0339               	decf	_keep_lock_off,w
  1246  022E  1D03               	btfss	3,2
  1247  022F  2A31               	goto	u611
  1248  0230  2A32               	goto	u610
  1249  0231                     u611:
  1250  0231  2A6E               	goto	l1707
  1251  0232                     u610:
  1252  0232                     l1685:
  1253                           
  1254                           ;main.c: 171:             close = 0;
  1255  0232  01B4               	clrf	_close
  1256                           
  1257                           ;main.c: 172:             keep_door_open = 0;
  1258  0233  01B7               	clrf	_keep_door_open
  1259                           
  1260                           ;main.c: 173:             keep_lock_off = 0;
  1261  0234  01B9               	clrf	_keep_lock_off
  1262  0235                     l1687:
  1263                           
  1264                           ;main.c: 174:             Lcd_Cmd(0b11000101);
  1265  0235  30C5               	movlw	197
  1266  0236  120A  118A  24D3  120A  118A  	fcall	_Lcd_Cmd
  1267  023B                     l1689:
  1268                           
  1269                           ;main.c: 175:             Lcd_Write_String(" NO ");
  1270  023B  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1271  023C  120A  118A  247F  120A  118A  	fcall	_Lcd_Write_String
  1272  0241                     l1691:
  1273                           
  1274                           ;main.c: 176:             RD0=1;
  1275  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1276  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1277  0243  1408               	bsf	8,0	;volatile
  1278  0244                     l1693:
  1279                           
  1280                           ;main.c: 177:             RD1=0;
  1281  0244  1088               	bcf	8,1	;volatile
  1282  0245                     l1695:
  1283                           
  1284                           ;main.c: 178:             _delay((unsigned long)((150)*(4000000/4000.0)));
  1285  0245  30C3               	movlw	195
  1286  0246  1283               	bcf	3,5	;RP0=0, select bank0
  1287  0247  1303               	bcf	3,6	;RP1=0, select bank0
  1288  0248  00AF               	movwf	??_main+1
  1289  0249  30CC               	movlw	204
  1290  024A  00AE               	movwf	??_main
  1291  024B                     u737:
  1292  024B  0BAE               	decfsz	??_main,f
  1293  024C  2A4B               	goto	u737
  1294  024D  0BAF               	decfsz	??_main+1,f
  1295  024E  2A4B               	goto	u737
  1296  024F  0000               	nop
  1297  0250                     l1697:
  1298                           
  1299                           ;main.c: 179:             RD0=0;
  1300  0250  1283               	bcf	3,5	;RP0=0, select bank0
  1301  0251  1303               	bcf	3,6	;RP1=0, select bank0
  1302  0252  1008               	bcf	8,0	;volatile
  1303  0253                     l1699:
  1304                           
  1305                           ;main.c: 180:             _delay((unsigned long)((150)*(4000000/4000.0)));
  1306  0253  30C3               	movlw	195
  1307  0254  1283               	bcf	3,5	;RP0=0, select bank0
  1308  0255  1303               	bcf	3,6	;RP1=0, select bank0
  1309  0256  00AF               	movwf	??_main+1
  1310  0257  30CC               	movlw	204
  1311  0258  00AE               	movwf	??_main
  1312  0259                     u747:
  1313  0259  0BAE               	decfsz	??_main,f
  1314  025A  2A59               	goto	u747
  1315  025B  0BAF               	decfsz	??_main+1,f
  1316  025C  2A59               	goto	u747
  1317  025D  0000               	nop
  1318  025E                     l1701:
  1319                           
  1320                           ;main.c: 181:             CCPR1L = 32;
  1321  025E  3020               	movlw	32
  1322  025F  1283               	bcf	3,5	;RP0=0, select bank0
  1323  0260  1303               	bcf	3,6	;RP1=0, select bank0
  1324  0261  0095               	movwf	21	;volatile
  1325  0262                     l1703:
  1326                           
  1327                           ;main.c: 182:             Lcd_Cmd(0b11000000);
  1328  0262  30C0               	movlw	192
  1329  0263  120A  118A  24D3  120A  118A  	fcall	_Lcd_Cmd
  1330  0268                     l1705:
  1331                           
  1332                           ;main.c: 183:             Lcd_Write_String(" ON");
  1333  0268  3022               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1334  0269  120A  118A  247F  120A  118A  	fcall	_Lcd_Write_String
  1335  026E                     l1707:
  1336                           
  1337                           ;main.c: 185:         if(RCIF){
  1338  026E  1283               	bcf	3,5	;RP0=0, select bank0
  1339  026F  1303               	bcf	3,6	;RP1=0, select bank0
  1340  0270  1E8C               	btfss	12,5	;volatile
  1341  0271  2A73               	goto	u621
  1342  0272  2A74               	goto	u620
  1343  0273                     u621:
  1344  0273  2A78               	goto	l1711
  1345  0274                     u620:
  1346  0274                     l1709:
  1347                           
  1348                           ;main.c: 186:             Adafruit_light = RCREG;
  1349  0274  081A               	movf	26,w	;volatile
  1350  0275  00AE               	movwf	??_main
  1351  0276  082E               	movf	??_main,w
  1352  0277  00BC               	movwf	_Adafruit_light
  1353  0278                     l1711:
  1354                           
  1355                           ;main.c: 190:         if(Adafruit_light==0){
  1356  0278  083C               	movf	_Adafruit_light,w
  1357  0279  1D03               	btfss	3,2
  1358  027A  2A7C               	goto	u631
  1359  027B  2A7D               	goto	u630
  1360  027C                     u631:
  1361  027C  2AA8               	goto	l1731
  1362  027D                     u630:
  1363  027D                     l1713:
  1364                           
  1365                           ;main.c: 191:             if(light<500){
  1366  027D  3001               	movlw	1
  1367  027E  0233               	subwf	_light+1,w
  1368  027F  30F4               	movlw	244
  1369  0280  1903               	skipnz
  1370  0281  0232               	subwf	_light,w
  1371  0282  1803               	skipnc
  1372  0283  2A85               	goto	u641
  1373  0284  2A86               	goto	u640
  1374  0285                     u641:
  1375  0285  2A98               	goto	l1723
  1376  0286                     u640:
  1377  0286                     l1715:
  1378                           
  1379                           ;main.c: 192:             Lcd_Cmd(0b11001100);
  1380  0286  30CC               	movlw	204
  1381  0287  120A  118A  24D3  120A  118A  	fcall	_Lcd_Cmd
  1382  028C                     l1717:
  1383                           
  1384                           ;main.c: 193:             Lcd_Write_String(" ON");
  1385  028C  3022               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1386  028D  120A  118A  247F  120A  118A  	fcall	_Lcd_Write_String
  1387  0292                     l1719:
  1388                           
  1389                           ;main.c: 194:             light_flag = 1;
  1390  0292  1283               	bcf	3,5	;RP0=0, select bank0
  1391  0293  1303               	bcf	3,6	;RP1=0, select bank0
  1392  0294  01BD               	clrf	_light_flag
  1393  0295  0ABD               	incf	_light_flag,f
  1394  0296                     l1721:
  1395                           
  1396                           ;main.c: 195:             RD2 = 1;
  1397  0296  1508               	bsf	8,2	;volatile
  1398                           
  1399                           ;main.c: 196:             }
  1400  0297  2AA8               	goto	l1731
  1401  0298                     l1723:
  1402                           
  1403                           ;main.c: 198:             Lcd_Cmd(0b11001100);
  1404  0298  30CC               	movlw	204
  1405  0299  120A  118A  24D3  120A  118A  	fcall	_Lcd_Cmd
  1406  029E                     l1725:
  1407                           
  1408                           ;main.c: 199:             Lcd_Write_String(" OFF");
  1409  029E  3018               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1410  029F  120A  118A  247F  120A  118A  	fcall	_Lcd_Write_String
  1411  02A4                     l1727:
  1412                           
  1413                           ;main.c: 200:             light_flag = 0;
  1414  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  1415  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  1416  02A6  01BD               	clrf	_light_flag
  1417  02A7                     l1729:
  1418                           
  1419                           ;main.c: 201:             RD2 = 0;
  1420  02A7  1108               	bcf	8,2	;volatile
  1421  02A8                     l1731:
  1422                           
  1423                           ;main.c: 204:         if (Adafruit_light == 1){
  1424  02A8  033C               	decf	_Adafruit_light,w
  1425  02A9  1D03               	btfss	3,2
  1426  02AA  2AAC               	goto	u651
  1427  02AB  2AAD               	goto	u650
  1428  02AC                     u651:
  1429  02AC  2ABD               	goto	l1741
  1430  02AD                     u650:
  1431  02AD                     l1733:
  1432                           
  1433                           ;main.c: 205:             Lcd_Cmd(0b11001100);
  1434  02AD  30CC               	movlw	204
  1435  02AE  120A  118A  24D3  120A  118A  	fcall	_Lcd_Cmd
  1436  02B3                     l1735:
  1437                           
  1438                           ;main.c: 206:             Lcd_Write_String("OFF");
  1439  02B3  3019               	movlw	(low (((STR_10+1)-__stringbase)| (0+32768)))& (0+255)
  1440  02B4  120A  118A  247F  120A  118A  	fcall	_Lcd_Write_String
  1441  02B9                     l1737:
  1442                           
  1443                           ;main.c: 207:             light_flag = 0;
  1444  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  1445  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  1446  02BB  01BD               	clrf	_light_flag
  1447  02BC                     l1739:
  1448                           
  1449                           ;main.c: 208:             RD2 = 0;
  1450  02BC  1108               	bcf	8,2	;volatile
  1451  02BD                     l1741:
  1452                           
  1453                           ;main.c: 210:         if (Adafruit_light == 2){
  1454  02BD  3002               	movlw	2
  1455  02BE  063C               	xorwf	_Adafruit_light,w
  1456  02BF  1D03               	btfss	3,2
  1457  02C0  2AC2               	goto	u661
  1458  02C1  2AC3               	goto	u660
  1459  02C2                     u661:
  1460  02C2  2852               	goto	l1545
  1461  02C3                     u660:
  1462  02C3                     l1743:
  1463                           
  1464                           ;main.c: 211:             Lcd_Cmd(0b11001100);
  1465  02C3  30CC               	movlw	204
  1466  02C4  120A  118A  24D3  120A  118A  	fcall	_Lcd_Cmd
  1467  02C9                     l1745:
  1468                           
  1469                           ;main.c: 212:             Lcd_Write_String(" ON");
  1470  02C9  3022               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1471  02CA  120A  118A  247F  120A  118A  	fcall	_Lcd_Write_String
  1472  02CF                     l1747:
  1473                           
  1474                           ;main.c: 213:             light_flag = 1;
  1475  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  1476  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  1477  02D1  01BD               	clrf	_light_flag
  1478  02D2  0ABD               	incf	_light_flag,f
  1479  02D3                     l1749:
  1480                           
  1481                           ;main.c: 214:             RD2 = 1;
  1482  02D3  1508               	bsf	8,2	;volatile
  1483  02D4  2852               	goto	l1545
  1484  02D5  120A  118A  280C   	ljmp	start
  1485  02D8                     __end_of_main:
  1486                           
  1487                           	psect	text1
  1488  0398                     __ptext1:	
  1489 ;; *************** function _setup *****************
  1490 ;; Defined at:
  1491 ;;		line 222 in file "main.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;		None
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;		None
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  1    wreg      void 
  1498 ;; Registers used:
  1499 ;;		wreg, status,2, status,0, pclath, cstack
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1505 ;;      Params:         0       0       0       0       0
  1506 ;;      Locals:         0       0       0       0       0
  1507 ;;      Temps:          0       0       0       0       0
  1508 ;;      Totals:         0       0       0       0       0
  1509 ;;Total ram usage:        0 bytes
  1510 ;; Hardware stack levels used: 1
  1511 ;; Hardware stack levels required when called: 3
  1512 ;; This function calls:
  1513 ;;		_I2C_Master_Init
  1514 ;;		_Lcd_Init
  1515 ;;		_UART_Init
  1516 ;; This function is called by:
  1517 ;;		_main
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           
  1522                           ;psect for function _setup
  1523  0398                     _setup:
  1524  0398                     l1485:	
  1525                           ;incstack = 0
  1526                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1527                           
  1528                           
  1529                           ;main.c: 224:     ANSEL = 0;
  1530  0398  1683               	bsf	3,5	;RP0=1, select bank3
  1531  0399  1703               	bsf	3,6	;RP1=1, select bank3
  1532  039A  0188               	clrf	8	;volatile
  1533                           
  1534                           ;main.c: 225:     ANSELH = 0;
  1535  039B  0189               	clrf	9	;volatile
  1536                           
  1537                           ;main.c: 226:     TRISA = 0;
  1538  039C  1683               	bsf	3,5	;RP0=1, select bank1
  1539  039D  1303               	bcf	3,6	;RP1=0, select bank1
  1540  039E  0185               	clrf	5	;volatile
  1541                           
  1542                           ;main.c: 227:     TRISB = 0;
  1543  039F  0186               	clrf	6	;volatile
  1544  03A0                     l1487:
  1545                           
  1546                           ;main.c: 228:     TRISC = 0b10010000;
  1547  03A0  3090               	movlw	144
  1548  03A1  0087               	movwf	7	;volatile
  1549  03A2                     l1489:
  1550                           
  1551                           ;main.c: 229:     TRISD = 0;
  1552  03A2  0188               	clrf	8	;volatile
  1553  03A3                     l1491:
  1554                           
  1555                           ;main.c: 230:     TRISE = 0;
  1556  03A3  0189               	clrf	9	;volatile
  1557  03A4                     l1493:
  1558                           
  1559                           ;main.c: 234:     GIE = 1;
  1560  03A4  178B               	bsf	11,7	;volatile
  1561  03A5                     l1495:
  1562                           
  1563                           ;main.c: 235:     PEIE = 1;
  1564  03A5  170B               	bsf	11,6	;volatile
  1565  03A6                     l1497:
  1566                           
  1567                           ;main.c: 236:     TMR1IE = 1;
  1568  03A6  140C               	bsf	12,0	;volatile
  1569  03A7                     l1499:
  1570                           
  1571                           ;main.c: 237:     TMR1IF = 0;
  1572  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  1573  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  1574  03A9  100C               	bcf	12,0	;volatile
  1575  03AA                     l1501:
  1576                           
  1577                           ;main.c: 241:     T1CONbits.T1CKPS = 3;
  1578  03AA  3030               	movlw	48
  1579  03AB  0490               	iorwf	16,f	;volatile
  1580  03AC                     l1503:
  1581                           
  1582                           ;main.c: 243:     Lcd_Init();
  1583  03AC  120A  118A  2340  120A  118A  	fcall	_Lcd_Init
  1584  03B1                     l1505:
  1585                           
  1586                           ;main.c: 244:     UART_Init();
  1587  03B1  120A  118A  24BC  120A  118A  	fcall	_UART_Init
  1588  03B6                     l1507:
  1589                           
  1590                           ;main.c: 245:     I2C_Master_Init(400000);
  1591  03B6  3000               	movlw	0
  1592  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  1593  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  1594  03B9  00A9               	movwf	I2C_Master_Init@c+3
  1595  03BA  3006               	movlw	6
  1596  03BB  00A8               	movwf	I2C_Master_Init@c+2
  1597  03BC  301A               	movlw	26
  1598  03BD  00A7               	movwf	I2C_Master_Init@c+1
  1599  03BE  3080               	movlw	128
  1600  03BF  00A6               	movwf	I2C_Master_Init@c
  1601  03C0  120A  118A  23EE  120A  118A  	fcall	_I2C_Master_Init
  1602  03C5                     l1509:
  1603                           
  1604                           ;main.c: 248:     TRISCbits.TRISC2 = 1;
  1605  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  1606  03C6  1303               	bcf	3,6	;RP1=0, select bank1
  1607  03C7  1507               	bsf	7,2	;volatile
  1608  03C8                     l1511:
  1609                           
  1610                           ;main.c: 249:     PR2 = 249;
  1611  03C8  30F9               	movlw	249
  1612  03C9  0092               	movwf	18	;volatile
  1613  03CA                     l1513:
  1614                           
  1615                           ;main.c: 250:     CCP1M3 = 1;
  1616  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  1617  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  1618  03CC  1597               	bsf	23,3	;volatile
  1619  03CD                     l1515:
  1620                           
  1621                           ;main.c: 251:     CCP1M2 = 1;
  1622  03CD  1517               	bsf	23,2	;volatile
  1623  03CE                     l1517:
  1624                           
  1625                           ;main.c: 252:     CCPR1L = 32;
  1626  03CE  3020               	movlw	32
  1627  03CF  0095               	movwf	21	;volatile
  1628  03D0                     l1519:
  1629                           
  1630                           ;main.c: 254:     TMR2IF = 0;
  1631  03D0  108C               	bcf	12,1	;volatile
  1632  03D1                     l1521:
  1633                           
  1634                           ;main.c: 255:     T2CON = 3;
  1635  03D1  3003               	movlw	3
  1636  03D2  0092               	movwf	18	;volatile
  1637  03D3                     l1523:
  1638                           
  1639                           ;main.c: 256:     T2CONbits.TMR2ON = 1;
  1640  03D3  1512               	bsf	18,2	;volatile
  1641  03D4                     l286:	
  1642                           ;main.c: 258:     }
  1643                           
  1644                           
  1645                           ;main.c: 257:     while(TMR2IF==0){
  1646  03D4  1C8C               	btfss	12,1	;volatile
  1647  03D5  2BD7               	goto	u501
  1648  03D6  2BD8               	goto	u500
  1649  03D7                     u501:
  1650  03D7  2BD4               	goto	l286
  1651  03D8                     u500:
  1652  03D8                     l288:
  1653                           
  1654                           ;main.c: 259:     TRISCbits.TRISC2 = 0;
  1655  03D8  1683               	bsf	3,5	;RP0=1, select bank1
  1656  03D9  1303               	bcf	3,6	;RP1=0, select bank1
  1657  03DA  1107               	bcf	7,2	;volatile
  1658  03DB                     l1525:
  1659                           
  1660                           ;main.c: 262:     PORTA = 0;
  1661  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  1662  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  1663  03DD  0185               	clrf	5	;volatile
  1664                           
  1665                           ;main.c: 263:     PORTB = 0;
  1666  03DE  0186               	clrf	6	;volatile
  1667                           
  1668                           ;main.c: 264:     PORTC = 0;
  1669  03DF  0187               	clrf	7	;volatile
  1670                           
  1671                           ;main.c: 265:     PORTD = 0;
  1672  03E0  0188               	clrf	8	;volatile
  1673                           
  1674                           ;main.c: 266:     PORTE = 0;
  1675  03E1  0189               	clrf	9	;volatile
  1676                           
  1677                           ;main.c: 269:     light_high = 0;
  1678  03E2  01BE               	clrf	_light_high
  1679                           
  1680                           ;main.c: 270:     light_low = 0;
  1681  03E3  01BF               	clrf	_light_low
  1682                           
  1683                           ;main.c: 271:     light = 0;
  1684  03E4  01B2               	clrf	_light
  1685  03E5  01B3               	clrf	_light+1
  1686                           
  1687                           ;main.c: 272:     Adafruit_light = 0;
  1688  03E6  01BC               	clrf	_Adafruit_light
  1689                           
  1690                           ;main.c: 273:     door = 0;
  1691  03E7  01B8               	clrf	_door
  1692                           
  1693                           ;main.c: 274:     keep_door_open = 0;
  1694  03E8  01B7               	clrf	_keep_door_open
  1695                           
  1696                           ;main.c: 275:     lock = 0;
  1697  03E9  01BA               	clrf	_lock
  1698                           
  1699                           ;main.c: 276:     keep_lock_off = 0;
  1700  03EA  01B9               	clrf	_keep_lock_off
  1701                           
  1702                           ;main.c: 277:     in_sensor = 0;
  1703  03EB  01B6               	clrf	_in_sensor
  1704                           
  1705                           ;main.c: 278:     close = 0;
  1706  03EC  01B4               	clrf	_close
  1707  03ED                     l289:
  1708  03ED  0008               	return
  1709  03EE                     __end_of_setup:
  1710                           
  1711                           	psect	text2
  1712  04BC                     __ptext2:	
  1713 ;; *************** function _UART_Init *****************
  1714 ;; Defined at:
  1715 ;;		line 80 in file "Digital2_toolbox.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;		None
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;		None
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg, status,2
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1729 ;;      Params:         0       0       0       0       0
  1730 ;;      Locals:         0       0       0       0       0
  1731 ;;      Temps:          0       0       0       0       0
  1732 ;;      Totals:         0       0       0       0       0
  1733 ;;Total ram usage:        0 bytes
  1734 ;; Hardware stack levels used: 1
  1735 ;; Hardware stack levels required when called: 1
  1736 ;; This function calls:
  1737 ;;		Nothing
  1738 ;; This function is called by:
  1739 ;;		_setup
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           
  1744                           ;psect for function _UART_Init
  1745  04BC                     _UART_Init:
  1746  04BC                     l1423:	
  1747                           ;incstack = 0
  1748                           ; Regs used in _UART_Init: [wreg+status,2]
  1749                           
  1750                           
  1751                           ;Digital2_toolbox.c: 81:     TRISCbits.TRISC7 = 1;
  1752  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  1753  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  1754  04BE  1787               	bsf	7,7	;volatile
  1755                           
  1756                           ;Digital2_toolbox.c: 83:     TXSTAbits.TXEN = 1;
  1757  04BF  1698               	bsf	24,5	;volatile
  1758                           
  1759                           ;Digital2_toolbox.c: 84:     TXSTAbits.SYNC = 0;
  1760  04C0  1218               	bcf	24,4	;volatile
  1761                           
  1762                           ;Digital2_toolbox.c: 85:     RCSTAbits.SPEN = 1;
  1763  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  1764  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  1765  04C3  1798               	bsf	24,7	;volatile
  1766                           
  1767                           ;Digital2_toolbox.c: 86:     TXSTAbits.BRGH = 1;
  1768  04C4  1683               	bsf	3,5	;RP0=1, select bank1
  1769  04C5  1303               	bcf	3,6	;RP1=0, select bank1
  1770  04C6  1518               	bsf	24,2	;volatile
  1771                           
  1772                           ;Digital2_toolbox.c: 87:     BRG16 = 0;
  1773  04C7  1683               	bsf	3,5	;RP0=1, select bank3
  1774  04C8  1703               	bsf	3,6	;RP1=1, select bank3
  1775  04C9  1187               	bcf	7,3	;volatile
  1776  04CA                     l1425:
  1777                           
  1778                           ;Digital2_toolbox.c: 88:     SPBRGH = 0;
  1779  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  1780  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  1781  04CC  019A               	clrf	26	;volatile
  1782  04CD                     l1427:
  1783                           
  1784                           ;Digital2_toolbox.c: 89:     SPBRG = 25;
  1785  04CD  3019               	movlw	25
  1786  04CE  0099               	movwf	25	;volatile
  1787  04CF                     l1429:
  1788                           
  1789                           ;Digital2_toolbox.c: 93:     RCSTAbits.CREN = 1;
  1790  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  1791  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  1792  04D1  1618               	bsf	24,4	;volatile
  1793  04D2                     l81:
  1794  04D2  0008               	return
  1795  04D3                     __end_of_UART_Init:
  1796                           
  1797                           	psect	text3
  1798  0340                     __ptext3:	
  1799 ;; *************** function _Lcd_Init *****************
  1800 ;; Defined at:
  1801 ;;		line 42 in file "Digital2_toolbox.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;		None
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2, status,0, pclath, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1815 ;;      Params:         0       0       0       0       0
  1816 ;;      Locals:         0       0       0       0       0
  1817 ;;      Temps:          2       0       0       0       0
  1818 ;;      Totals:         2       0       0       0       0
  1819 ;;Total ram usage:        2 bytes
  1820 ;; Hardware stack levels used: 1
  1821 ;; Hardware stack levels required when called: 2
  1822 ;; This function calls:
  1823 ;;		_Lcd_Cmd
  1824 ;; This function is called by:
  1825 ;;		_setup
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           
  1830                           ;psect for function _Lcd_Init
  1831  0340                     _Lcd_Init:
  1832  0340                     l1387:	
  1833                           ;incstack = 0
  1834                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1835                           
  1836                           
  1837                           ;Digital2_toolbox.c: 43:     PORTA = 0;
  1838  0340  1283               	bcf	3,5	;RP0=0, select bank0
  1839  0341  1303               	bcf	3,6	;RP1=0, select bank0
  1840  0342  0185               	clrf	5	;volatile
  1841  0343                     l1389:
  1842                           
  1843                           ;Digital2_toolbox.c: 44:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1844  0343  301A               	movlw	26
  1845  0344  00F7               	movwf	??_Lcd_Init+1
  1846  0345  30F8               	movlw	248
  1847  0346  00F6               	movwf	??_Lcd_Init
  1848  0347                     u757:
  1849  0347  0BF6               	decfsz	??_Lcd_Init,f
  1850  0348  2B47               	goto	u757
  1851  0349  0BF7               	decfsz	??_Lcd_Init+1,f
  1852  034A  2B47               	goto	u757
  1853  034B  0000               	nop
  1854  034C                     l1391:
  1855                           
  1856                           ;Digital2_toolbox.c: 45:     Lcd_Cmd(0x030);
  1857  034C  3030               	movlw	48
  1858  034D  120A  118A  24D3  120A  118A  	fcall	_Lcd_Cmd
  1859  0352                     l1393:
  1860                           
  1861                           ;Digital2_toolbox.c: 46:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1862  0352  3007               	movlw	7
  1863  0353  00F7               	movwf	??_Lcd_Init+1
  1864  0354  307D               	movlw	125
  1865  0355  00F6               	movwf	??_Lcd_Init
  1866  0356                     u767:
  1867  0356  0BF6               	decfsz	??_Lcd_Init,f
  1868  0357  2B56               	goto	u767
  1869  0358  0BF7               	decfsz	??_Lcd_Init+1,f
  1870  0359  2B56               	goto	u767
  1871  035A                     l1395:
  1872                           
  1873                           ;Digital2_toolbox.c: 47:     Lcd_Cmd(0x030);
  1874  035A  3030               	movlw	48
  1875  035B  120A  118A  24D3  120A  118A  	fcall	_Lcd_Cmd
  1876  0360                     l1397:
  1877                           
  1878                           ;Digital2_toolbox.c: 48:     _delay((unsigned long)((160)*(4000000/4000000.0)));
  1879  0360  3035               	movlw	53
  1880  0361  00F6               	movwf	??_Lcd_Init
  1881  0362                     u777:
  1882  0362  0BF6               	decfsz	??_Lcd_Init,f
  1883  0363  2B62               	goto	u777
  1884  0364                     l1399:
  1885                           
  1886                           ;Digital2_toolbox.c: 49:     Lcd_Cmd(0x030);
  1887  0364  3030               	movlw	48
  1888  0365  120A  118A  24D3  120A  118A  	fcall	_Lcd_Cmd
  1889  036A                     l1401:
  1890                           
  1891                           ;Digital2_toolbox.c: 51:     Lcd_Cmd(0b00111000);
  1892  036A  3038               	movlw	56
  1893  036B  120A  118A  24D3  120A  118A  	fcall	_Lcd_Cmd
  1894  0370                     l1403:
  1895                           
  1896                           ;Digital2_toolbox.c: 52:     Lcd_Cmd(0x10);
  1897  0370  3010               	movlw	16
  1898  0371  120A  118A  24D3  120A  118A  	fcall	_Lcd_Cmd
  1899  0376                     l1405:
  1900                           
  1901                           ;Digital2_toolbox.c: 53:     Lcd_Cmd(0x01);
  1902  0376  3001               	movlw	1
  1903  0377  120A  118A  24D3  120A  118A  	fcall	_Lcd_Cmd
  1904  037C                     l1407:
  1905                           
  1906                           ;Digital2_toolbox.c: 54:     Lcd_Cmd(0b00000110);
  1907  037C  3006               	movlw	6
  1908  037D  120A  118A  24D3  120A  118A  	fcall	_Lcd_Cmd
  1909  0382                     l1409:
  1910                           
  1911                           ;Digital2_toolbox.c: 55:     Lcd_Cmd(0x10);
  1912  0382  3010               	movlw	16
  1913  0383  120A  118A  24D3  120A  118A  	fcall	_Lcd_Cmd
  1914  0388                     l1411:
  1915                           
  1916                           ;Digital2_toolbox.c: 56:     Lcd_Cmd(0b00001100);
  1917  0388  300C               	movlw	12
  1918  0389  120A  118A  24D3  120A  118A  	fcall	_Lcd_Cmd
  1919  038E                     l1413:
  1920                           
  1921                           ;Digital2_toolbox.c: 57:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1922  038E  3082               	movlw	130
  1923  038F  00F7               	movwf	??_Lcd_Init+1
  1924  0390  30DD               	movlw	221
  1925  0391  00F6               	movwf	??_Lcd_Init
  1926  0392                     u787:
  1927  0392  0BF6               	decfsz	??_Lcd_Init,f
  1928  0393  2B92               	goto	u787
  1929  0394  0BF7               	decfsz	??_Lcd_Init+1,f
  1930  0395  2B92               	goto	u787
  1931  0396  2B97               	nop2
  1932  0397                     l69:
  1933  0397  0008               	return
  1934  0398                     __end_of_Lcd_Init:
  1935                           
  1936                           	psect	text4
  1937  04D3                     __ptext4:	
  1938 ;; *************** function _Lcd_Cmd *****************
  1939 ;; Defined at:
  1940 ;;		line 28 in file "Digital2_toolbox.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;  a               1    wreg     unsigned char 
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;  a               1    5[COMMON] unsigned char 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  1    wreg      void 
  1947 ;; Registers used:
  1948 ;;		wreg
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1954 ;;      Params:         0       0       0       0       0
  1955 ;;      Locals:         1       0       0       0       0
  1956 ;;      Temps:          2       0       0       0       0
  1957 ;;      Totals:         3       0       0       0       0
  1958 ;;Total ram usage:        3 bytes
  1959 ;; Hardware stack levels used: 1
  1960 ;; Hardware stack levels required when called: 1
  1961 ;; This function calls:
  1962 ;;		Nothing
  1963 ;; This function is called by:
  1964 ;;		_Lcd_Init
  1965 ;;		_main
  1966 ;;		_Lcd_Clear
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           
  1971                           ;psect for function _Lcd_Cmd
  1972  04D3                     _Lcd_Cmd:
  1973                           
  1974                           ;incstack = 0
  1975                           ; Regs used in _Lcd_Cmd: [wreg]
  1976                           ;Lcd_Cmd@a stored from wreg
  1977  04D3  00F5               	movwf	Lcd_Cmd@a
  1978  04D4                     l1355:
  1979                           
  1980                           ;Digital2_toolbox.c: 29:     RE0 = 0;
  1981  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  1982  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  1983  04D6  1009               	bcf	9,0	;volatile
  1984  04D7                     l1357:
  1985                           
  1986                           ;Digital2_toolbox.c: 30:     PORTA = a;
  1987  04D7  0875               	movf	Lcd_Cmd@a,w
  1988  04D8  0085               	movwf	5	;volatile
  1989  04D9                     l1359:
  1990                           
  1991                           ;Digital2_toolbox.c: 31:     RE1 = 1;
  1992  04D9  1489               	bsf	9,1	;volatile
  1993                           
  1994                           ;Digital2_toolbox.c: 32:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1995  04DA  3006               	movlw	6
  1996  04DB  00F4               	movwf	??_Lcd_Cmd+1
  1997  04DC  3030               	movlw	48
  1998  04DD  00F3               	movwf	??_Lcd_Cmd
  1999  04DE                     u797:
  2000  04DE  0BF3               	decfsz	??_Lcd_Cmd,f
  2001  04DF  2CDE               	goto	u797
  2002  04E0  0BF4               	decfsz	??_Lcd_Cmd+1,f
  2003  04E1  2CDE               	goto	u797
  2004  04E2  0000               	nop
  2005  04E3                     l1361:
  2006                           
  2007                           ;Digital2_toolbox.c: 33:     RE1 = 0;
  2008  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  2009  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  2010  04E5  1089               	bcf	9,1	;volatile
  2011  04E6                     l63:
  2012  04E6  0008               	return
  2013  04E7                     __end_of_Lcd_Cmd:
  2014                           
  2015                           	psect	text5
  2016  03EE                     __ptext5:	
  2017 ;; *************** function _I2C_Master_Init *****************
  2018 ;; Defined at:
  2019 ;;		line 171 in file "Digital2_toolbox.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  c               4    6[BANK0 ] const unsigned long 
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;		None
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      void 
  2026 ;; Registers used:
  2027 ;;		wreg, status,2, status,0, pclath, cstack
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2033 ;;      Params:         0       4       0       0       0
  2034 ;;      Locals:         0       0       0       0       0
  2035 ;;      Temps:          0       4       0       0       0
  2036 ;;      Totals:         0       8       0       0       0
  2037 ;;Total ram usage:        8 bytes
  2038 ;; Hardware stack levels used: 1
  2039 ;; Hardware stack levels required when called: 2
  2040 ;; This function calls:
  2041 ;;		___lldiv
  2042 ;; This function is called by:
  2043 ;;		_setup
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           
  2048                           ;psect for function _I2C_Master_Init
  2049  03EE                     _I2C_Master_Init:
  2050  03EE                     l1431:	
  2051                           ;incstack = 0
  2052                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2053                           
  2054                           
  2055                           ;Digital2_toolbox.c: 171: void I2C_Master_Init(const unsigned long c);Digital2_toolbox.c
      +                          : 172: {;Digital2_toolbox.c: 173:     SSPCON = 0b00101000;
  2056  03EE  3028               	movlw	40
  2057  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2058  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2059  03F1  0094               	movwf	20	;volatile
  2060  03F2                     l1433:
  2061                           
  2062                           ;Digital2_toolbox.c: 174:     SSPCON2 = 0;
  2063  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  2064  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  2065  03F4  0191               	clrf	17	;volatile
  2066  03F5                     l1435:
  2067                           
  2068                           ;Digital2_toolbox.c: 175:     SSPADD = (4000000/(4*c))-1;
  2069  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2070  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  2071  03F7  0826               	movf	I2C_Master_Init@c,w
  2072  03F8  00AA               	movwf	??_I2C_Master_Init
  2073  03F9  0827               	movf	I2C_Master_Init@c+1,w
  2074  03FA  00AB               	movwf	??_I2C_Master_Init+1
  2075  03FB  0828               	movf	I2C_Master_Init@c+2,w
  2076  03FC  00AC               	movwf	??_I2C_Master_Init+2
  2077  03FD  0829               	movf	I2C_Master_Init@c+3,w
  2078  03FE  00AD               	movwf	??_I2C_Master_Init+3
  2079  03FF  3002               	movlw	2
  2080  0400                     u445:
  2081  0400  1003               	clrc
  2082  0401  0DAA               	rlf	??_I2C_Master_Init,f
  2083  0402  0DAB               	rlf	??_I2C_Master_Init+1,f
  2084  0403  0DAC               	rlf	??_I2C_Master_Init+2,f
  2085  0404  0DAD               	rlf	??_I2C_Master_Init+3,f
  2086  0405                     u440:
  2087  0405  3EFF               	addlw	-1
  2088  0406  1D03               	skipz
  2089  0407  2C00               	goto	u445
  2090  0408  082D               	movf	??_I2C_Master_Init+3,w
  2091  0409  00F6               	movwf	___lldiv@divisor+3
  2092  040A  082C               	movf	??_I2C_Master_Init+2,w
  2093  040B  00F5               	movwf	___lldiv@divisor+2
  2094  040C  082B               	movf	??_I2C_Master_Init+1,w
  2095  040D  00F4               	movwf	___lldiv@divisor+1
  2096  040E  082A               	movf	??_I2C_Master_Init,w
  2097  040F  00F3               	movwf	___lldiv@divisor
  2098  0410  3000               	movlw	0
  2099  0411  00FA               	movwf	___lldiv@dividend+3
  2100  0412  303D               	movlw	61
  2101  0413  00F9               	movwf	___lldiv@dividend+2
  2102  0414  3009               	movlw	9
  2103  0415  00F8               	movwf	___lldiv@dividend+1
  2104  0416  3000               	movlw	0
  2105  0417  00F7               	movwf	___lldiv@dividend
  2106  0418  120A  118A  22D8  120A  118A  	fcall	___lldiv
  2107  041D  0873               	movf	?___lldiv,w
  2108  041E  3EFF               	addlw	255
  2109  041F  1683               	bsf	3,5	;RP0=1, select bank1
  2110  0420  1303               	bcf	3,6	;RP1=0, select bank1
  2111  0421  0093               	movwf	19	;volatile
  2112  0422                     l1437:
  2113                           
  2114                           ;Digital2_toolbox.c: 176:     SSPSTAT = 0;
  2115  0422  0194               	clrf	20	;volatile
  2116  0423                     l1439:
  2117                           
  2118                           ;Digital2_toolbox.c: 177:     TRISCbits.TRISC3 = 1;
  2119  0423  1587               	bsf	7,3	;volatile
  2120  0424                     l1441:
  2121                           
  2122                           ;Digital2_toolbox.c: 178:     TRISCbits.TRISC4 = 1;
  2123  0424  1607               	bsf	7,4	;volatile
  2124  0425                     l121:
  2125  0425  0008               	return
  2126  0426                     __end_of_I2C_Master_Init:
  2127                           
  2128                           	psect	text6
  2129  02D8                     __ptext6:	
  2130 ;; *************** function ___lldiv *****************
  2131 ;; Defined at:
  2132 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;  divisor         4    3[COMMON] unsigned long 
  2135 ;;  dividend        4    7[COMMON] unsigned long 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;  quotient        4    1[BANK0 ] unsigned long 
  2138 ;;  counter         1    5[BANK0 ] unsigned char 
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  4    3[COMMON] unsigned long 
  2141 ;; Registers used:
  2142 ;;		wreg, status,2, status,0
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2148 ;;      Params:         8       0       0       0       0
  2149 ;;      Locals:         0       5       0       0       0
  2150 ;;      Temps:          0       1       0       0       0
  2151 ;;      Totals:         8       6       0       0       0
  2152 ;;Total ram usage:       14 bytes
  2153 ;; Hardware stack levels used: 1
  2154 ;; Hardware stack levels required when called: 1
  2155 ;; This function calls:
  2156 ;;		Nothing
  2157 ;; This function is called by:
  2158 ;;		_I2C_Master_Init
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           
  2163                           ;psect for function ___lldiv
  2164  02D8                     ___lldiv:
  2165  02D8                     l1363:	
  2166                           ;incstack = 0
  2167                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2168                           
  2169  02D8  3000               	movlw	0
  2170  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  2171  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  2172  02DB  00A4               	movwf	___lldiv@quotient+3
  2173  02DC  3000               	movlw	0
  2174  02DD  00A3               	movwf	___lldiv@quotient+2
  2175  02DE  3000               	movlw	0
  2176  02DF  00A2               	movwf	___lldiv@quotient+1
  2177  02E0  3000               	movlw	0
  2178  02E1  00A1               	movwf	___lldiv@quotient
  2179  02E2  0876               	movf	___lldiv@divisor+3,w
  2180  02E3  0475               	iorwf	___lldiv@divisor+2,w
  2181  02E4  0474               	iorwf	___lldiv@divisor+1,w
  2182  02E5  0473               	iorwf	___lldiv@divisor,w
  2183  02E6  1903               	skipnz
  2184  02E7  2AE9               	goto	u371
  2185  02E8  2AEA               	goto	u370
  2186  02E9                     u371:
  2187  02E9  2B37               	goto	l1383
  2188  02EA                     u370:
  2189  02EA                     l1365:
  2190  02EA  01A5               	clrf	___lldiv@counter
  2191  02EB  0AA5               	incf	___lldiv@counter,f
  2192  02EC  2AFA               	goto	l1369
  2193  02ED                     l1367:
  2194  02ED  3001               	movlw	1
  2195  02EE  00A0               	movwf	??___lldiv
  2196  02EF                     u385:
  2197  02EF  1003               	clrc
  2198  02F0  0DF3               	rlf	___lldiv@divisor,f
  2199  02F1  0DF4               	rlf	___lldiv@divisor+1,f
  2200  02F2  0DF5               	rlf	___lldiv@divisor+2,f
  2201  02F3  0DF6               	rlf	___lldiv@divisor+3,f
  2202  02F4  0BA0               	decfsz	??___lldiv,f
  2203  02F5  2AEF               	goto	u385
  2204  02F6  3001               	movlw	1
  2205  02F7  00A0               	movwf	??___lldiv
  2206  02F8  0820               	movf	??___lldiv,w
  2207  02F9  07A5               	addwf	___lldiv@counter,f
  2208  02FA                     l1369:
  2209  02FA  1FF6               	btfss	___lldiv@divisor+3,7
  2210  02FB  2AFD               	goto	u391
  2211  02FC  2AFE               	goto	u390
  2212  02FD                     u391:
  2213  02FD  2AED               	goto	l1367
  2214  02FE                     u390:
  2215  02FE                     l1371:
  2216  02FE  3001               	movlw	1
  2217  02FF  00A0               	movwf	??___lldiv
  2218  0300                     u405:
  2219  0300  1003               	clrc
  2220  0301  0DA1               	rlf	___lldiv@quotient,f
  2221  0302  0DA2               	rlf	___lldiv@quotient+1,f
  2222  0303  0DA3               	rlf	___lldiv@quotient+2,f
  2223  0304  0DA4               	rlf	___lldiv@quotient+3,f
  2224  0305  0BA0               	decfsz	??___lldiv,f
  2225  0306  2B00               	goto	u405
  2226  0307                     l1373:
  2227  0307  0876               	movf	___lldiv@divisor+3,w
  2228  0308  027A               	subwf	___lldiv@dividend+3,w
  2229  0309  1D03               	skipz
  2230  030A  2B15               	goto	u415
  2231  030B  0875               	movf	___lldiv@divisor+2,w
  2232  030C  0279               	subwf	___lldiv@dividend+2,w
  2233  030D  1D03               	skipz
  2234  030E  2B15               	goto	u415
  2235  030F  0874               	movf	___lldiv@divisor+1,w
  2236  0310  0278               	subwf	___lldiv@dividend+1,w
  2237  0311  1D03               	skipz
  2238  0312  2B15               	goto	u415
  2239  0313  0873               	movf	___lldiv@divisor,w
  2240  0314  0277               	subwf	___lldiv@dividend,w
  2241  0315                     u415:
  2242  0315  1C03               	skipc
  2243  0316  2B18               	goto	u411
  2244  0317  2B19               	goto	u410
  2245  0318                     u411:
  2246  0318  2B28               	goto	l1379
  2247  0319                     u410:
  2248  0319                     l1375:
  2249  0319  0873               	movf	___lldiv@divisor,w
  2250  031A  02F7               	subwf	___lldiv@dividend,f
  2251  031B  0874               	movf	___lldiv@divisor+1,w
  2252  031C  1C03               	skipc
  2253  031D  0F74               	incfsz	___lldiv@divisor+1,w
  2254  031E  02F8               	subwf	___lldiv@dividend+1,f
  2255  031F  0875               	movf	___lldiv@divisor+2,w
  2256  0320  1C03               	skipc
  2257  0321  0F75               	incfsz	___lldiv@divisor+2,w
  2258  0322  02F9               	subwf	___lldiv@dividend+2,f
  2259  0323  0876               	movf	___lldiv@divisor+3,w
  2260  0324  1C03               	skipc
  2261  0325  0F76               	incfsz	___lldiv@divisor+3,w
  2262  0326  02FA               	subwf	___lldiv@dividend+3,f
  2263  0327                     l1377:
  2264  0327  1421               	bsf	___lldiv@quotient,0
  2265  0328                     l1379:
  2266  0328  3001               	movlw	1
  2267  0329                     u425:
  2268  0329  1003               	clrc
  2269  032A  0CF6               	rrf	___lldiv@divisor+3,f
  2270  032B  0CF5               	rrf	___lldiv@divisor+2,f
  2271  032C  0CF4               	rrf	___lldiv@divisor+1,f
  2272  032D  0CF3               	rrf	___lldiv@divisor,f
  2273  032E  3EFF               	addlw	-1
  2274  032F  1D03               	skipz
  2275  0330  2B29               	goto	u425
  2276  0331                     l1381:
  2277  0331  3001               	movlw	1
  2278  0332  02A5               	subwf	___lldiv@counter,f
  2279  0333  1D03               	btfss	3,2
  2280  0334  2B36               	goto	u431
  2281  0335  2B37               	goto	u430
  2282  0336                     u431:
  2283  0336  2AFE               	goto	l1371
  2284  0337                     u430:
  2285  0337                     l1383:
  2286  0337  0824               	movf	___lldiv@quotient+3,w
  2287  0338  00F6               	movwf	?___lldiv+3
  2288  0339  0823               	movf	___lldiv@quotient+2,w
  2289  033A  00F5               	movwf	?___lldiv+2
  2290  033B  0822               	movf	___lldiv@quotient+1,w
  2291  033C  00F4               	movwf	?___lldiv+1
  2292  033D  0821               	movf	___lldiv@quotient,w
  2293  033E  00F3               	movwf	?___lldiv
  2294  033F                     l417:
  2295  033F  0008               	return
  2296  0340                     __end_of___lldiv:
  2297                           
  2298                           	psect	text7
  2299  0508                     __ptext7:	
  2300 ;; *************** function _UART_Write_Char *****************
  2301 ;; Defined at:
  2302 ;;		line 104 in file "Digital2_toolbox.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;  character       1    wreg     unsigned char 
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  character       1    3[COMMON] unsigned char 
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		wreg
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2316 ;;      Params:         0       0       0       0       0
  2317 ;;      Locals:         1       0       0       0       0
  2318 ;;      Temps:          0       0       0       0       0
  2319 ;;      Totals:         1       0       0       0       0
  2320 ;;Total ram usage:        1 bytes
  2321 ;; Hardware stack levels used: 1
  2322 ;; Hardware stack levels required when called: 1
  2323 ;; This function calls:
  2324 ;;		Nothing
  2325 ;; This function is called by:
  2326 ;;		_main
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           
  2331                           ;psect for function _UART_Write_Char
  2332  0508                     _UART_Write_Char:
  2333                           
  2334                           ;incstack = 0
  2335                           ; Regs used in _UART_Write_Char: [wreg]
  2336                           ;UART_Write_Char@character stored from wreg
  2337  0508  00F3               	movwf	UART_Write_Char@character
  2338  0509                     l1455:
  2339                           
  2340                           ;Digital2_toolbox.c: 105:     TXREG = character;
  2341  0509  0873               	movf	UART_Write_Char@character,w
  2342  050A  1283               	bcf	3,5	;RP0=0, select bank0
  2343  050B  1303               	bcf	3,6	;RP1=0, select bank0
  2344  050C  0099               	movwf	25	;volatile
  2345  050D                     l93:	
  2346                           ;Digital2_toolbox.c: 106:     while (!TXSTAbits.TRMT);
  2347                           
  2348  050D  1683               	bsf	3,5	;RP0=1, select bank1
  2349  050E  1303               	bcf	3,6	;RP1=0, select bank1
  2350  050F  1C98               	btfss	24,1	;volatile
  2351  0510  2D12               	goto	u481
  2352  0511  2D13               	goto	u480
  2353  0512                     u481:
  2354  0512  2D0D               	goto	l93
  2355  0513                     u480:
  2356  0513                     l96:
  2357  0513  0008               	return
  2358  0514                     __end_of_UART_Write_Char:
  2359                           
  2360                           	psect	text8
  2361  047F                     __ptext8:	
  2362 ;; *************** function _Lcd_Write_String *****************
  2363 ;; Defined at:
  2364 ;;		line 69 in file "Digital2_toolbox.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;  a               1    wreg     PTR unsigned char 
  2367 ;;		 -> STR_12(4), STR_11(4), STR_10(5), STR_9(4), 
  2368 ;;		 -> STR_8(4), STR_7(5), STR_6(5), STR_5(4), 
  2369 ;;		 -> STR_4(4), STR_3(5), STR_2(4), STR_1(18), 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  a               1    8[COMMON] PTR unsigned char 
  2372 ;;		 -> STR_12(4), STR_11(4), STR_10(5), STR_9(4), 
  2373 ;;		 -> STR_8(4), STR_7(5), STR_6(5), STR_5(4), 
  2374 ;;		 -> STR_4(4), STR_3(5), STR_2(4), STR_1(18), 
  2375 ;;  i               2    6[COMMON] int 
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  1    wreg      void 
  2378 ;; Registers used:
  2379 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2385 ;;      Params:         0       0       0       0       0
  2386 ;;      Locals:         3       0       0       0       0
  2387 ;;      Temps:          0       0       0       0       0
  2388 ;;      Totals:         3       0       0       0       0
  2389 ;;Total ram usage:        3 bytes
  2390 ;; Hardware stack levels used: 1
  2391 ;; Hardware stack levels required when called: 2
  2392 ;; This function calls:
  2393 ;;		_Lcd_Write_Char
  2394 ;; This function is called by:
  2395 ;;		_main
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           
  2400                           ;psect for function _Lcd_Write_String
  2401  047F                     _Lcd_Write_String:
  2402                           
  2403                           ;incstack = 0
  2404                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2405                           ;Lcd_Write_String@a stored from wreg
  2406  047F  00F8               	movwf	Lcd_Write_String@a
  2407  0480                     l1447:
  2408                           
  2409                           ;Digital2_toolbox.c: 70:     int i;;Digital2_toolbox.c: 71:     for (i = 0; a[i] != '\0'
      +                          ; i++){
  2410  0480  01F6               	clrf	Lcd_Write_String@i
  2411  0481  01F7               	clrf	Lcd_Write_String@i+1
  2412  0482  2C96               	goto	l1453
  2413  0483                     l1449:
  2414                           
  2415                           ;Digital2_toolbox.c: 72:         Lcd_Write_Char(a[i]);
  2416  0483  0876               	movf	Lcd_Write_String@i,w
  2417  0484  0778               	addwf	Lcd_Write_String@a,w
  2418  0485  0084               	movwf	4
  2419  0486  120A  118A  2454  120A  118A  	fcall	stringdir
  2420  048B  120A  118A  24A4  120A  118A  	fcall	_Lcd_Write_Char
  2421  0490                     l1451:
  2422                           
  2423                           ;Digital2_toolbox.c: 73:     }
  2424  0490  3001               	movlw	1
  2425  0491  07F6               	addwf	Lcd_Write_String@i,f
  2426  0492  1803               	skipnc
  2427  0493  0AF7               	incf	Lcd_Write_String@i+1,f
  2428  0494  3000               	movlw	0
  2429  0495  07F7               	addwf	Lcd_Write_String@i+1,f
  2430  0496                     l1453:
  2431  0496  0876               	movf	Lcd_Write_String@i,w
  2432  0497  0778               	addwf	Lcd_Write_String@a,w
  2433  0498  0084               	movwf	4
  2434  0499  120A  118A  2454  120A  118A  	fcall	stringdir
  2435  049E  3A00               	xorlw	0
  2436  049F  1D03               	skipz
  2437  04A0  2CA2               	goto	u471
  2438  04A1  2CA3               	goto	u470
  2439  04A2                     u471:
  2440  04A2  2C83               	goto	l1449
  2441  04A3                     u470:
  2442  04A3                     l78:
  2443  04A3  0008               	return
  2444  04A4                     __end_of_Lcd_Write_String:
  2445                           
  2446                           	psect	text9
  2447  04A4                     __ptext9:	
  2448 ;; *************** function _Lcd_Write_Char *****************
  2449 ;; Defined at:
  2450 ;;		line 60 in file "Digital2_toolbox.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;  a               1    wreg     unsigned char 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  a               1    5[COMMON] unsigned char 
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      void 
  2457 ;; Registers used:
  2458 ;;		wreg
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2464 ;;      Params:         0       0       0       0       0
  2465 ;;      Locals:         1       0       0       0       0
  2466 ;;      Temps:          2       0       0       0       0
  2467 ;;      Totals:         3       0       0       0       0
  2468 ;;Total ram usage:        3 bytes
  2469 ;; Hardware stack levels used: 1
  2470 ;; Hardware stack levels required when called: 1
  2471 ;; This function calls:
  2472 ;;		Nothing
  2473 ;; This function is called by:
  2474 ;;		_Lcd_Write_String
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           
  2479                           ;psect for function _Lcd_Write_Char
  2480  04A4                     _Lcd_Write_Char:
  2481                           
  2482                           ;incstack = 0
  2483                           ; Regs used in _Lcd_Write_Char: [wreg]
  2484                           ;Lcd_Write_Char@a stored from wreg
  2485  04A4  00F5               	movwf	Lcd_Write_Char@a
  2486  04A5                     l1415:
  2487                           
  2488                           ;Digital2_toolbox.c: 61:     PORTA = a;
  2489  04A5  0875               	movf	Lcd_Write_Char@a,w
  2490  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  2491  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  2492  04A8  0085               	movwf	5	;volatile
  2493  04A9                     l1417:
  2494                           
  2495                           ;Digital2_toolbox.c: 62:     RE0 = 1;
  2496  04A9  1409               	bsf	9,0	;volatile
  2497  04AA                     l1419:
  2498                           
  2499                           ;Digital2_toolbox.c: 63:     RE1 = 1;
  2500  04AA  1489               	bsf	9,1	;volatile
  2501                           
  2502                           ;Digital2_toolbox.c: 64:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  2503  04AB  3021               	movlw	33
  2504  04AC  00F3               	movwf	??_Lcd_Write_Char
  2505  04AD                     u807:
  2506  04AD  0BF3               	decfsz	??_Lcd_Write_Char,f
  2507  04AE  2CAD               	goto	u807
  2508  04AF                     l1421:
  2509                           
  2510                           ;Digital2_toolbox.c: 65:     RE1 = 0;
  2511  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  2512  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  2513  04B1  1089               	bcf	9,1	;volatile
  2514                           
  2515                           ;Digital2_toolbox.c: 66:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2516  04B2  300D               	movlw	13
  2517  04B3  00F4               	movwf	??_Lcd_Write_Char+1
  2518  04B4  30FB               	movlw	251
  2519  04B5  00F3               	movwf	??_Lcd_Write_Char
  2520  04B6                     u817:
  2521  04B6  0BF3               	decfsz	??_Lcd_Write_Char,f
  2522  04B7  2CB6               	goto	u817
  2523  04B8  0BF4               	decfsz	??_Lcd_Write_Char+1,f
  2524  04B9  2CB6               	goto	u817
  2525  04BA  2CBB               	nop2
  2526  04BB                     l72:
  2527  04BB  0008               	return
  2528  04BC                     __end_of_Lcd_Write_Char:
  2529                           
  2530                           	psect	text10
  2531  0514                     __ptext10:	
  2532 ;; *************** function _I2C_Master_Write *****************
  2533 ;; Defined at:
  2534 ;;		line 220 in file "Digital2_toolbox.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;  d               2    3[COMMON] unsigned int 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;		None
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      void 
  2541 ;; Registers used:
  2542 ;;		wreg, status,2, status,0, pclath, cstack
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2548 ;;      Params:         2       0       0       0       0
  2549 ;;      Locals:         0       0       0       0       0
  2550 ;;      Temps:          0       0       0       0       0
  2551 ;;      Totals:         2       0       0       0       0
  2552 ;;Total ram usage:        2 bytes
  2553 ;; Hardware stack levels used: 1
  2554 ;; Hardware stack levels required when called: 2
  2555 ;; This function calls:
  2556 ;;		_I2C_Master_Wait
  2557 ;; This function is called by:
  2558 ;;		_main
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           
  2563                           ;psect for function _I2C_Master_Write
  2564  0514                     _I2C_Master_Write:
  2565  0514                     l1465:	
  2566                           ;incstack = 0
  2567                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2568                           
  2569                           
  2570                           ;Digital2_toolbox.c: 220: void I2C_Master_Write(unsigned d);Digital2_toolbox.c: 221: {;D
      +                          igital2_toolbox.c: 222:     I2C_Master_Wait();
  2571  0514  120A  118A  24FB  120A  118A  	fcall	_I2C_Master_Wait
  2572  0519                     l1467:
  2573                           
  2574                           ;Digital2_toolbox.c: 223:     SSPBUF = d;
  2575  0519  0873               	movf	I2C_Master_Write@d,w
  2576  051A  1283               	bcf	3,5	;RP0=0, select bank0
  2577  051B  1303               	bcf	3,6	;RP1=0, select bank0
  2578  051C  0093               	movwf	19	;volatile
  2579  051D                     l139:
  2580  051D  0008               	return
  2581  051E                     __end_of_I2C_Master_Write:
  2582                           
  2583                           	psect	text11
  2584  051E                     __ptext11:	
  2585 ;; *************** function _I2C_Master_Stop *****************
  2586 ;; Defined at:
  2587 ;;		line 210 in file "Digital2_toolbox.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;		None
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0, pclath, cstack
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2601 ;;      Params:         0       0       0       0       0
  2602 ;;      Locals:         0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0
  2604 ;;      Totals:         0       0       0       0       0
  2605 ;;Total ram usage:        0 bytes
  2606 ;; Hardware stack levels used: 1
  2607 ;; Hardware stack levels required when called: 2
  2608 ;; This function calls:
  2609 ;;		_I2C_Master_Wait
  2610 ;; This function is called by:
  2611 ;;		_main
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           
  2616                           ;psect for function _I2C_Master_Stop
  2617  051E                     _I2C_Master_Stop:
  2618  051E                     l1461:	
  2619                           ;incstack = 0
  2620                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2621                           
  2622                           
  2623                           ;Digital2_toolbox.c: 212:     I2C_Master_Wait();
  2624  051E  120A  118A  24FB  120A  118A  	fcall	_I2C_Master_Wait
  2625  0523                     l1463:
  2626                           
  2627                           ;Digital2_toolbox.c: 213:     SSPCON2bits.PEN = 1;
  2628  0523  1683               	bsf	3,5	;RP0=1, select bank1
  2629  0524  1303               	bcf	3,6	;RP1=0, select bank1
  2630  0525  1511               	bsf	17,2	;volatile
  2631  0526                     l136:
  2632  0526  0008               	return
  2633  0527                     __end_of_I2C_Master_Stop:
  2634                           
  2635                           	psect	text12
  2636  0527                     __ptext12:	
  2637 ;; *************** function _I2C_Master_Start *****************
  2638 ;; Defined at:
  2639 ;;		line 194 in file "Digital2_toolbox.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;		None
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;		None
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      void 
  2646 ;; Registers used:
  2647 ;;		wreg, status,2, status,0, pclath, cstack
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2653 ;;      Params:         0       0       0       0       0
  2654 ;;      Locals:         0       0       0       0       0
  2655 ;;      Temps:          0       0       0       0       0
  2656 ;;      Totals:         0       0       0       0       0
  2657 ;;Total ram usage:        0 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; Hardware stack levels required when called: 2
  2660 ;; This function calls:
  2661 ;;		_I2C_Master_Wait
  2662 ;; This function is called by:
  2663 ;;		_main
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           
  2668                           ;psect for function _I2C_Master_Start
  2669  0527                     _I2C_Master_Start:
  2670  0527                     l1457:	
  2671                           ;incstack = 0
  2672                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2673                           
  2674                           
  2675                           ;Digital2_toolbox.c: 196:     I2C_Master_Wait();
  2676  0527  120A  118A  24FB  120A  118A  	fcall	_I2C_Master_Wait
  2677  052C                     l1459:
  2678                           
  2679                           ;Digital2_toolbox.c: 197:     SSPCON2bits.SEN = 1;
  2680  052C  1683               	bsf	3,5	;RP0=1, select bank1
  2681  052D  1303               	bcf	3,6	;RP1=0, select bank1
  2682  052E  1411               	bsf	17,0	;volatile
  2683  052F                     l130:
  2684  052F  0008               	return
  2685  0530                     __end_of_I2C_Master_Start:
  2686                           
  2687                           	psect	text13
  2688  0426                     __ptext13:	
  2689 ;; *************** function _I2C_Master_Read *****************
  2690 ;; Defined at:
  2691 ;;		line 229 in file "Digital2_toolbox.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;  a               2    3[COMMON] unsigned short 
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;  temp            2    7[COMMON] unsigned short 
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  2    3[COMMON] unsigned short 
  2698 ;; Registers used:
  2699 ;;		wreg, status,2, status,0, pclath, cstack
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2705 ;;      Params:         2       0       0       0       0
  2706 ;;      Locals:         2       0       0       0       0
  2707 ;;      Temps:          2       0       0       0       0
  2708 ;;      Totals:         6       0       0       0       0
  2709 ;;Total ram usage:        6 bytes
  2710 ;; Hardware stack levels used: 1
  2711 ;; Hardware stack levels required when called: 2
  2712 ;; This function calls:
  2713 ;;		_I2C_Master_Wait
  2714 ;; This function is called by:
  2715 ;;		_main
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           
  2720                           ;psect for function _I2C_Master_Read
  2721  0426                     _I2C_Master_Read:
  2722  0426                     l1469:	
  2723                           ;incstack = 0
  2724                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2725                           
  2726                           
  2727                           ;Digital2_toolbox.c: 229: unsigned short I2C_Master_Read(unsigned short a);Digital2_tool
      +                          box.c: 230: {;Digital2_toolbox.c: 231:     unsigned short temp;;Digital2_toolbox.c: 232:
      +                               I2C_Master_Wait();
  2728  0426  120A  118A  24FB  120A  118A  	fcall	_I2C_Master_Wait
  2729  042B                     l1471:
  2730                           
  2731                           ;Digital2_toolbox.c: 233:     SSPCON2bits.RCEN = 1;
  2732  042B  1683               	bsf	3,5	;RP0=1, select bank1
  2733  042C  1303               	bcf	3,6	;RP1=0, select bank1
  2734  042D  1591               	bsf	17,3	;volatile
  2735                           
  2736                           ;Digital2_toolbox.c: 234:     I2C_Master_Wait();
  2737  042E  120A  118A  24FB  120A  118A  	fcall	_I2C_Master_Wait
  2738  0433                     l1473:
  2739                           
  2740                           ;Digital2_toolbox.c: 235:     temp = SSPBUF;
  2741  0433  1283               	bcf	3,5	;RP0=0, select bank0
  2742  0434  1303               	bcf	3,6	;RP1=0, select bank0
  2743  0435  0813               	movf	19,w	;volatile
  2744  0436  00F5               	movwf	??_I2C_Master_Read
  2745  0437  01F6               	clrf	??_I2C_Master_Read+1
  2746  0438  0875               	movf	??_I2C_Master_Read,w
  2747  0439  00F7               	movwf	I2C_Master_Read@temp
  2748  043A  0876               	movf	??_I2C_Master_Read+1,w
  2749  043B  00F8               	movwf	I2C_Master_Read@temp+1
  2750  043C                     l1475:
  2751                           
  2752                           ;Digital2_toolbox.c: 236:     I2C_Master_Wait();
  2753  043C  120A  118A  24FB  120A  118A  	fcall	_I2C_Master_Wait
  2754  0441                     l1477:
  2755                           
  2756                           ;Digital2_toolbox.c: 237:     if(a == 1){
  2757  0441  0373               	decf	I2C_Master_Read@a,w
  2758  0442  0474               	iorwf	I2C_Master_Read@a+1,w
  2759  0443  1D03               	btfss	3,2
  2760  0444  2C46               	goto	u491
  2761  0445  2C47               	goto	u490
  2762  0446                     u491:
  2763  0446  2C4B               	goto	l142
  2764  0447                     u490:
  2765  0447                     l1479:
  2766                           
  2767                           ;Digital2_toolbox.c: 238:         SSPCON2bits.ACKDT = 0;
  2768  0447  1683               	bsf	3,5	;RP0=1, select bank1
  2769  0448  1303               	bcf	3,6	;RP1=0, select bank1
  2770  0449  1291               	bcf	17,5	;volatile
  2771                           
  2772                           ;Digital2_toolbox.c: 239:     }else{
  2773  044A  2C4E               	goto	l143
  2774  044B                     l142:
  2775                           
  2776                           ;Digital2_toolbox.c: 240:         SSPCON2bits.ACKDT = 1;
  2777  044B  1683               	bsf	3,5	;RP0=1, select bank1
  2778  044C  1303               	bcf	3,6	;RP1=0, select bank1
  2779  044D  1691               	bsf	17,5	;volatile
  2780  044E                     l143:	
  2781                           ;Digital2_toolbox.c: 241:     }
  2782                           
  2783                           
  2784                           ;Digital2_toolbox.c: 242:     SSPCON2bits.ACKEN = 1;
  2785  044E  1611               	bsf	17,4	;volatile
  2786  044F                     l1481:
  2787                           
  2788                           ;Digital2_toolbox.c: 243:     return temp;
  2789  044F  0878               	movf	I2C_Master_Read@temp+1,w
  2790  0450  00F4               	movwf	?_I2C_Master_Read+1
  2791  0451  0877               	movf	I2C_Master_Read@temp,w
  2792  0452  00F3               	movwf	?_I2C_Master_Read
  2793  0453                     l144:
  2794  0453  0008               	return
  2795  0454                     __end_of_I2C_Master_Read:
  2796                           
  2797                           	psect	text14
  2798  04FB                     __ptext14:	
  2799 ;; *************** function _I2C_Master_Wait *****************
  2800 ;; Defined at:
  2801 ;;		line 187 in file "Digital2_toolbox.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;		None
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;		None
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      void 
  2808 ;; Registers used:
  2809 ;;		wreg, status,2
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2815 ;;      Params:         0       0       0       0       0
  2816 ;;      Locals:         0       0       0       0       0
  2817 ;;      Temps:          0       0       0       0       0
  2818 ;;      Totals:         0       0       0       0       0
  2819 ;;Total ram usage:        0 bytes
  2820 ;; Hardware stack levels used: 1
  2821 ;; Hardware stack levels required when called: 1
  2822 ;; This function calls:
  2823 ;;		Nothing
  2824 ;; This function is called by:
  2825 ;;		_I2C_Master_Start
  2826 ;;		_I2C_Master_Stop
  2827 ;;		_I2C_Master_Write
  2828 ;;		_I2C_Master_Read
  2829 ;;		_I2C_Master_RepeatedStart
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           
  2834                           ;psect for function _I2C_Master_Wait
  2835  04FB                     _I2C_Master_Wait:
  2836  04FB                     l1443:	
  2837                           ;incstack = 0
  2838                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2839                           
  2840  04FB                     l124:	
  2841                           ;Digital2_toolbox.c: 189:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2842                           
  2843  04FB  1683               	bsf	3,5	;RP0=1, select bank1
  2844  04FC  1303               	bcf	3,6	;RP1=0, select bank1
  2845  04FD  1914               	btfsc	20,2	;volatile
  2846  04FE  2D00               	goto	u451
  2847  04FF  2D01               	goto	u450
  2848  0500                     u451:
  2849  0500  2CFB               	goto	l124
  2850  0501                     u450:
  2851  0501                     l1445:
  2852  0501  0811               	movf	17,w	;volatile
  2853  0502  391F               	andlw	31
  2854  0503  1D03               	btfss	3,2
  2855  0504  2D06               	goto	u461
  2856  0505  2D07               	goto	u460
  2857  0506                     u461:
  2858  0506  2CFB               	goto	l124
  2859  0507                     u460:
  2860  0507                     l127:
  2861  0507  0008               	return
  2862  0508                     __end_of_I2C_Master_Wait:
  2863                           
  2864                           	psect	text15
  2865  04E7                     __ptext15:	
  2866 ;; *************** function _isr *****************
  2867 ;; Defined at:
  2868 ;;		line 284 in file "main.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;		None
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;		None
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      void 
  2875 ;; Registers used:
  2876 ;;		wreg, status,2, status,0
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2882 ;;      Params:         0       0       0       0       0
  2883 ;;      Locals:         0       0       0       0       0
  2884 ;;      Temps:          3       0       0       0       0
  2885 ;;      Totals:         3       0       0       0       0
  2886 ;;Total ram usage:        3 bytes
  2887 ;; Hardware stack levels used: 1
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		Interrupt level 1
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           
  2896                           ;psect for function _isr
  2897  04E7                     _isr:
  2898  04E7                     i1l1751:
  2899                           
  2900                           ;main.c: 285:     if(TMR1IF){
  2901  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  2902  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  2903  04E9  1C0C               	btfss	12,0	;volatile
  2904  04EA  2CEC               	goto	u67_21
  2905  04EB  2CED               	goto	u67_20
  2906  04EC                     u67_21:
  2907  04EC  2CF4               	goto	i1l295
  2908  04ED                     u67_20:
  2909  04ED                     i1l1753:
  2910                           
  2911                           ;main.c: 286:         TMR1 = 0;
  2912  04ED  018E               	clrf	14	;volatile
  2913  04EE  018F               	clrf	15	;volatile
  2914  04EF                     i1l1755:
  2915                           
  2916                           ;main.c: 287:         time++;
  2917  04EF  3001               	movlw	1
  2918  04F0  00F0               	movwf	??_isr
  2919  04F1  0870               	movf	??_isr,w
  2920  04F2  07B5               	addwf	_time,f
  2921  04F3                     i1l1757:
  2922                           
  2923                           ;main.c: 288:         TMR1IF = 0;
  2924  04F3  100C               	bcf	12,0	;volatile
  2925  04F4                     i1l295:
  2926  04F4  0872               	movf	??_isr+2,w
  2927  04F5  008A               	movwf	10
  2928  04F6  0E71               	swapf	??_isr+1,w
  2929  04F7  0083               	movwf	3
  2930  04F8  0EFE               	swapf	btemp,f
  2931  04F9  0E7E               	swapf	btemp,w
  2932  04FA  0009               	retfie
  2933  04FB                     __end_of_isr:
  2934  007E                     btemp	set	126	;btemp
  2935  007E                     wtemp0	set	126
  2936                           
  2937                           	psect	intentry
  2938  0004                     __pintentry:	
  2939                           ;incstack = 0
  2940                           ; Regs used in _isr: [wreg+status,2+status,0]
  2941                           
  2942  0004                     interrupt_function:
  2943  007E                     saved_w	set	btemp
  2944  0004  00FE               	movwf	btemp
  2945  0005  0E03               	swapf	3,w
  2946  0006  00F1               	movwf	??_isr+1
  2947  0007  080A               	movf	10,w
  2948  0008  00F2               	movwf	??_isr+2
  2949  0009  120A  118A  2CE7   	ljmp	_isr
  2950                           
  2951                           	psect	config
  2952                           
  2953                           ;Config register CONFIG1 @ 0x2007
  2954                           ;	Oscillator Selection bits
  2955                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2956                           ;	Watchdog Timer Enable bit
  2957                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2958                           ;	Power-up Timer Enable bit
  2959                           ;	PWRTE = OFF, PWRT disabled
  2960                           ;	RE3/MCLR pin function select bit
  2961                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2962                           ;	Code Protection bit
  2963                           ;	CP = OFF, Program memory code protection is disabled
  2964                           ;	Data Code Protection bit
  2965                           ;	CPD = OFF, Data memory code protection is disabled
  2966                           ;	Brown Out Reset Selection bits
  2967                           ;	BOREN = OFF, BOR disabled
  2968                           ;	Internal External Switchover bit
  2969                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2970                           ;	Fail-Safe Clock Monitor Enabled bit
  2971                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2972                           ;	Low Voltage Programming Enable bit
  2973                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2974                           ;	In-Circuit Debugger Mode bit
  2975                           ;	DEBUG = 0x1, unprogrammed default
  2976  2007                     	org	8199
  2977  2007  20D4               	dw	8404
  2978                           
  2979                           ;Config register CONFIG2 @ 0x2008
  2980                           ;	Brown-out Reset Selection bit
  2981                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2982                           ;	Flash Program Memory Self Write Enable bits
  2983                           ;	WRT = OFF, Write protection off
  2984  2008                     	org	8200
  2985  2008  3FFF               	dw	16383

Data Sizes:
    Strings     37
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     18      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 18
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[5]), STR_9(CODE[4]), 
		 -> STR_8(CODE[4]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[4]), 
		 -> STR_4(CODE[4]), STR_3(CODE[5]), STR_2(CODE[4]), STR_1(CODE[18]), 


Critical Paths under _main in COMMON

    _Lcd_Init->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _Lcd_Write_String->_Lcd_Write_Char

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    2193
                                             14 BANK0      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _Lcd_Cmd
                   _Lcd_Write_String
                    _UART_Write_Char
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     434
                    _I2C_Master_Init
                           _Lcd_Init
                          _UART_Init
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      22
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              3 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Char                                      1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     508
                                              6 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     858
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     349
                                              3 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
   _UART_Write_Char
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
     _UART_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      20       5       40.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2B      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Sep 03 16:00:28 2021

                        pc 0002                _SSPSTATbits 0094                         l63 04E6  
                       l72 04BB                         l81 04D2                         l93 050D  
                       l69 0397                         l78 04A3                         l96 0513  
                       fsr 0004                        l121 0425                        l130 052F  
                      l124 04FB                        l142 044B                        l127 0507  
                      l143 044E                        l144 0453                        l136 0526  
                      l139 051D                        l417 033F                        l286 03D4  
                      l288 03D8                        l289 03ED                        _GIE 005F  
                      _RD0 0040                        _RD1 0041                        _RE0 0048  
                      _RD2 0042                        _RE1 0049                        u410 0319  
                      u411 0318                        u500 03D8                        u405 0300  
                      u501 03D7                        u430 0337                        u510 01C6  
                      _PR2 0092                        u431 0336                        u415 0315  
                      u511 01C5                        u440 0405                        u600 022D  
                      u520 01CB                        u425 0329                        u601 022C  
                      u521 01CA                        u450 0501                        u370 02EA  
                      u610 0232                        u530 01E2                        u451 0500  
                      u371 02E9                        u611 0231                        u531 01E1  
                      u460 0507                        u620 0274                        u540 01E7  
                      u461 0506                        u445 0400                        u621 0273  
                      u541 01E6                        u470 04A3                        u390 02FE  
                      u630 027D                        u550 020C                        u471 04A2  
                      u391 02FD                        u631 027C                        u551 020B  
                      u480 0513                        u640 0286                        u560 0211  
                      u481 0512                        u385 02EF                        u641 0285  
                      u561 0210                        u490 0447                        u650 02AD  
                      u570 0216                        u491 0446                        u651 02AC  
                      u571 0215                        u707 0149                        u660 02C3  
                      u580 021F                        u661 02C2                        u581 021E  
                      u717 0185                        u590 0228                        u807 04AD  
                      u591 0227                        u727 01FD                        u817 04B6  
                      u737 024B                        u747 0259                        u757 0347  
                      u767 0356                        u687 007F                        u777 0362  
                      u697 0108                        u787 0392                        u797 04DE  
                      _isr 04E7                        fsr0 0004              _keep_lock_off 0039  
                     l1401 036A                       l1411 0388                       l1403 0370  
                     l1421 04AF                       l1413 038E                       l1405 0376  
                     l1501 03AA                       l1415 04A5                       l1431 03EE  
                     l1407 037C                       l1423 04BC                       l1511 03C8  
                     l1503 03AC                       l1417 04A9                       l1441 0424  
                     l1433 03F2                       l1361 04E3                       l1409 0382  
                     l1425 04CA                       l1521 03D1                       l1513 03CA  
                     l1505 03B1                       l1601 0141                       l1443 04FB  
                     l1419 04AA                       l1451 0490                       l1371 02FE  
                     l1363 02D8                       l1435 03F5                       l1355 04D4  
                     l1427 04CD                       l1523 03D3                       l1515 03CD  
                     l1507 03B6                       l1611 016A                       l1603 0150  
                     l1445 0501                       l1461 051E                       l1453 0496  
                     l1381 0331                       l1373 0307                       l1365 02EA  
                     l1437 0422                       l1357 04D7                       l1429 04CF  
                     l1525 03DB                       l1517 03CE                       l1509 03C5  
                     l1701 025E                       l1621 019B                       l1613 0178  
                     l1605 0157                       l1541 0040                       l1533 0023  
                     l1471 042B                       l1463 0523                       l1447 0480  
                     l1455 0509                       l1375 0319                       l1367 02ED  
                     l1383 0337                       l1439 0423                       l1359 04D9  
                     l1391 034C                       l1519 03D0                       l1711 0278  
                     l1703 0262                       l1631 01BF                       l1623 01A1  
                     l1615 017D                       l1607 015C                       l1551 0069  
                     l1543 004C                       l1535 0028                       l1481 044F  
                     l1473 0433                       l1457 0527                       l1465 0514  
                     l1449 0483                       l1377 0327                       l1369 02FA  
                     l1393 0352                       l1721 0296                       l1713 027D  
                     l1705 0268                       l1641 01D9                       l1633 01C6  
                     l1625 01AA                       l1617 018C                       l1609 0161  
                     l1561 0094                       l1553 0072                       l1545 0052  
                     l1537 002E                       l1475 043C                       l1459 052C  
                     l1467 0519                       l1379 0328                       l1395 035A  
                     l1387 0340                       l1491 03A3                       l1715 0286  
                     l1723 0298                       l1731 02A8                       l1707 026E  
                     l1651 01F3                       l1635 01CB                       l1643 01DD  
                     l1627 01B0                       l1619 0192                       l1571 00BE  
                     l1563 009D                       l1555 0077                       l1547 0057  
                     l1539 003A                       l1477 0441                       l1469 0426  
                     l1397 0360                       l1389 0343                       l1493 03A4  
                     l1485 0398                       l1733 02AD                       l1741 02BD  
                     l1725 029E                       l1717 028C                       l1709 0274  
                     l1653 01F6                       l1645 01E2                       l1661 0207  
                     l1637 01CD                       l1629 01B9                       l1581 00DF  
                     l1573 00C3                       l1565 00A2                       l1557 0086  
                     l1549 0060                       l1479 0447                       l1399 0364  
                     l1495 03A5                       l1487 03A0                       l1743 02C3  
                     l1735 02B3                       l1727 02A4                       l1719 0292  
                     l1663 020C                       l1671 0219                       l1655 01F7  
                     l1647 01E7                       l1639 01D3                       l1591 010F  
                     l1583 00E4                       l1575 00C8                       l1567 00A7  
                     l1559 008B                       l1497 03A6                       l1489 03A2  
                     l1745 02C9                       l1737 02B9                       l1729 02A7  
                     l1681 0228                       l1673 021F                       l1665 0211  
                     l1657 0202                       l1649 01ED                       l1593 0120  
                     l1585 00ED                       l1577 00D1                       l1569 00B0  
                     l1499 03A7                       l1747 02CF                       l1739 02BC  
                     l1691 0241                       l1683 022D                       l1675 0220  
                     l1667 0216                       l1659 0205                       l1595 0125  
                     l1587 00FB                       l1579 00DA                       l1749 02D3  
                     l1693 0244                       l1685 0232                       l1677 0221  
                     l1669 0218                       l1597 012E                       l1589 0100  
                     l1695 0245                       l1687 0235                       l1679 0223  
                     l1599 013C                       l1697 0250                       l1689 023B  
                     l1699 0253                       ?_isr 0070                       STR_1 045A  
                     STR_2 047B                       STR_3 046C                       STR_4 0472  
                     STR_5 0472                       STR_6 0476                       STR_7 046C  
                     STR_8 047B                       STR_9 047B                       _PEIE 005E  
                     _RCIF 0065                       _TMR1 000E          ?_Lcd_Write_String 0070  
                     _door 0038                       _main 0023                       _lock 003A  
                     _time 0035                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0076            __end_of_Lcd_Cmd 04E7             _keep_door_open 0037  
  __end_of_UART_Write_Char 0514                      ??_isr 0070           ?_I2C_Master_Init 0026  
         ?_I2C_Master_Read 0073           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070                      STR_10 0471                      STR_11 0472  
                    STR_12 047B                      _BRG16 0C3B                      _ANSEL 0188  
          __end_of___lldiv 0340                      _T2CON 0012                      i1l295 04F4  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _SSPIE 0463  
                    _TRISE 0089                      _SSPIF 0063                      u67_20 04ED  
                    u67_21 04EC                      _TXREG 0019         __size_of_UART_Init 0017  
                    _close 0034                      _light 0032                      _setup 0398  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 0398            __initialization 000F               __end_of_main 02D8  
                   ??_main 002E          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0073  
       ??_I2C_Master_Start 0073         ??_I2C_Master_Write 0075                     _CCP1M2 00BA  
                   _CCP1M3 00BB                     _ADRESH 001E                     _ADRESL 009E  
                   _CCPR1L 0015                     ?_setup 0070                     _ANSELH 0189  
                   i1l1751 04E7                     i1l1753 04ED                     i1l1755 04EF  
                   i1l1757 04F3                  ??_Lcd_Cmd 0073                     _TMR1IE 0460  
                   _TMR1IF 0060                     _TMR2IF 0061                     _SPBRGH 009A  
                   _TMR1ON 0080    __size_of_Lcd_Write_Char 0018                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _TRISC5 043D  
                   _SSPCON 0014                     _SSPBUF 0013          __end_of_UART_Init 04D3  
         ?_UART_Write_Char 0070                  ??___lldiv 0020             _Adafruit_light 003C  
                   saved_w 007E    __end_of__initialization 001F             __pcstackCOMMON 0070  
            __end_of_setup 03EE   UART_Write_Char@character 0073                  ?_Lcd_Init 0070  
                  ??_setup 007B                 __pbssBANK0 0032                 __pmaintext 0023  
               __pintentry 0004  __size_of_Lcd_Write_String 0025                 ??_Lcd_Init 0076  
                  _SSPCON2 0091                    _SSPSTAT 0094                 __stringtab 0454  
           _Lcd_Write_Char 04A4                    _Lcd_Cmd 04D3                 _light_flag 003D  
                  ___lldiv 02D8                 _light_high 003E                    __ptext1 0398  
                  __ptext2 04BC                    __ptext3 0340                    __ptext4 04D3  
                  __ptext5 03EE                    __ptext6 02D8                    __ptext7 0508  
                  __ptext8 047F                    __ptext9 04A4                  _T1CONbits 0010  
                _T2CONbits 0012               __size_of_isr 0014   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
   __end_of_Lcd_Write_Char 04BC       end_of_initialization 001F  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0073            ___lldiv@counter 0025  
                _RCSTAbits 0018           I2C_Master_Init@c 0026           I2C_Master_Read@a 0073  
                _UART_Init 04BC                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0078          Lcd_Write_String@i 0076                  _TXSTAbits 0098  
         _Lcd_Write_String 047F                 ?_UART_Init 0070   __size_of_UART_Write_Char 000C  
      start_initialization 000F                __end_of_isr 04FB          __size_of_Lcd_Init 0058  
        ??_I2C_Master_Init 002A          ??_I2C_Master_Read 0075          ??_I2C_Master_Wait 0073  
        ??_I2C_Master_Stop 0073            Lcd_Write_Char@a 0075                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Lcd_Cmd 0070           _I2C_Master_Start 0527  
         _I2C_Master_Write 0514                   ?___lldiv 0073                ??_UART_Init 0073  
                __pstrings 0454                  _in_sensor 0036                  _light_low 003F  
        ??_UART_Write_Char 0073             __size_of_setup 0056          interrupt_function 0004  
                 Lcd_Cmd@a 0075                __stringbase 0459           ??_Lcd_Write_Char 0073  
                 _Lcd_Init 0340        I2C_Master_Read@temp 0077   __end_of_Lcd_Write_String 04A4  
         __size_of_Lcd_Cmd 0014           __size_of___lldiv 0068         __end_of__stringtab 045A  
          _I2C_Master_Init 03EE            _I2C_Master_Read 0426            _I2C_Master_Wait 04FB  
          _I2C_Master_Stop 051E                   __ptext10 0514                   __ptext11 051E  
                 __ptext12 0527                   __ptext13 0426                   __ptext14 04FB  
                 __ptext15 04E7              __size_of_main 02B5                   _out_flag 003B  
 __end_of_I2C_Master_Start 0530   __end_of_I2C_Master_Write 051E                   intlevel1 0000  
         ___lldiv@dividend 0077                  stringcode 0454    __end_of_I2C_Master_Init 0426  
  __end_of_I2C_Master_Read 0454    __end_of_I2C_Master_Wait 0508    __end_of_I2C_Master_Stop 0527  
          _UART_Write_Char 0508           ___lldiv@quotient 0021          I2C_Master_Write@d 0073  
                 stringdir 0454                   stringtab 0454                _SSPCON2bits 0091  
