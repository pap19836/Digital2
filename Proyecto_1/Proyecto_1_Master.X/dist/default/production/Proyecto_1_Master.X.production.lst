

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Aug 30 13:40:46 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0009                     _PORTE	set	9
   298  0008                     _PORTD	set	8
   299  0007                     _PORTC	set	7
   300  0012                     _T2CONbits	set	18
   301  0012                     _T2CON	set	18
   302  0015                     _CCPR1L	set	21
   303  0006                     _PORTB	set	6
   304  0013                     _SSPBUF	set	19
   305  0014                     _SSPCON	set	20
   306  0019                     _TXREG	set	25
   307  0018                     _RCSTAbits	set	24
   308  0005                     _PORTA	set	5
   309  001E                     _ADRESH	set	30
   310  0061                     _TMR2IF	set	97
   311  00BA                     _CCP1M2	set	186
   312  00BB                     _CCP1M3	set	187
   313  0041                     _RD1	set	65
   314  0040                     _RD0	set	64
   315  0063                     _SSPIF	set	99
   316  005E                     _PEIE	set	94
   317  005F                     _GIE	set	95
   318  0049                     _RE1	set	73
   319  0048                     _RE0	set	72
   320  0092                     _PR2	set	146
   321  0089                     _TRISE	set	137
   322  0088                     _TRISD	set	136
   323  0087                     _TRISC	set	135
   324  0086                     _TRISB	set	134
   325  0085                     _TRISA	set	133
   326  0091                     _SSPCON2bits	set	145
   327  0093                     _SSPADD	set	147
   328  0091                     _SSPCON2	set	145
   329  0094                     _SSPSTATbits	set	148
   330  0094                     _SSPSTAT	set	148
   331  0099                     _SPBRG	set	153
   332  009A                     _SPBRGH	set	154
   333  0098                     _TXSTAbits	set	152
   334  0087                     _TRISCbits	set	135
   335  009E                     _ADRESL	set	158
   336  0463                     _SSPIE	set	1123
   337  043C                     _TRISC4	set	1084
   338  043B                     _TRISC3	set	1083
   339  043D                     _TRISC5	set	1085
   340  0189                     _ANSELH	set	393
   341  0188                     _ANSEL	set	392
   342  0C3B                     _BRG16	set	3131
   343                           
   344                           	psect	strings
   345  02B4                     __pstrings:
   346  02B4                     stringtab:
   347  02B4                     __stringtab:
   348  02B4                     stringcode:	
   349                           ;	String table - string pointers are 1 byte each
   350                           
   351  02B4                     stringdir:
   352  02B4  3002               	movlw	high stringdir
   353  02B5  008A               	movwf	10
   354  02B6  0804               	movf	4,w
   355  02B7  0A84               	incf	4,f
   356  02B8  0782               	addwf	2,f
   357  02B9                     __stringbase:
   358  02B9  3400               	retlw	0
   359  02BA                     __end_of__stringtab:
   360  02BA                     STR_1:
   361  02BA  3420               	retlw	32	;' '
   362  02BB  344C               	retlw	76	;'L'
   363  02BC  346F               	retlw	111	;'o'
   364  02BD  3463               	retlw	99	;'c'
   365  02BE  346B               	retlw	107	;'k'
   366  02BF  3420               	retlw	32	;' '
   367  02C0  3444               	retlw	68	;'D'
   368  02C1  346F               	retlw	111	;'o'
   369  02C2  346F               	retlw	111	;'o'
   370  02C3  3472               	retlw	114	;'r'
   371  02C4  3420               	retlw	32	;' '
   372  02C5  344C               	retlw	76	;'L'
   373  02C6  3469               	retlw	105	;'i'
   374  02C7  3467               	retlw	103	;'g'
   375  02C8  3468               	retlw	104	;'h'
   376  02C9  3474               	retlw	116	;'t'
   377  02CA  3473               	retlw	115	;'s'
   378  02CB  3400               	retlw	0
   379  02CC                     STR_3:
   380  02CC  3420               	retlw	32	;' '
   381  02CD  344E               	retlw	78	;'N'
   382  02CE  344F               	retlw	79	;'O'
   383  02CF  3420               	retlw	32	;' '
   384  02D0  3400               	retlw	0
   385  02D1                     STR_5:
   386  02D1  344F               	retlw	79	;'O'
   387  02D2  3450               	retlw	80	;'P'
   388  02D3  3445               	retlw	69	;'E'
   389  02D4  344E               	retlw	78	;'N'
   390  02D5  3400               	retlw	0
   391  02D6                     STR_4:
   392  02D6  344F               	retlw	79	;'O'
   393  02D7  3446               	retlw	70	;'F'
   394  02D8  3446               	retlw	70	;'F'
   395  02D9  3400               	retlw	0
   396  02DA                     STR_2:
   397  02DA  3420               	retlw	32	;' '
   398  02DB  344F               	retlw	79	;'O'
   399  02DC  344E               	retlw	78	;'N'
   400  02DD  3400               	retlw	0
   401  02CC                     
   402                           	psect	cinit
   403  000F                     start_initialization:	
   404                           ; #config settings
   405                           
   406  000F                     __initialization:
   407                           
   408                           ; Clear objects allocated to COMMON
   409  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   410  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   411  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   412                           
   413                           ; Clear objects allocated to BANK0
   414  0012  1283               	bcf	3,5	;RP0=0, select bank0
   415  0013  1303               	bcf	3,6	;RP1=0, select bank0
   416  0014  01B3               	clrf	__pbssBANK0& (0+127)
   417  0015  01B4               	clrf	(__pbssBANK0+1)& (0+127)
   418  0016  01B5               	clrf	(__pbssBANK0+2)& (0+127)
   419  0017  01B6               	clrf	(__pbssBANK0+3)& (0+127)
   420  0018  01B7               	clrf	(__pbssBANK0+4)& (0+127)
   421  0019  01B8               	clrf	(__pbssBANK0+5)& (0+127)
   422  001A  01B9               	clrf	(__pbssBANK0+6)& (0+127)
   423  001B  01BA               	clrf	(__pbssBANK0+7)& (0+127)
   424  001C                     end_of_initialization:	
   425                           ;End of C runtime variable initialization code
   426                           
   427  001C                     __end_of__initialization:
   428  001C  0183               	clrf	3
   429  001D  120A  118A  2820   	ljmp	_main	;jump to C main() function
   430                           
   431                           	psect	bssCOMMON
   432  0078                     __pbssCOMMON:
   433  0078                     _cL:
   434  0078                     	ds	1
   435  0079                     _mL:
   436  0079                     	ds	1
   437  007A                     _light_compare:
   438  007A                     	ds	1
   439                           
   440                           	psect	bssBANK0
   441  0033                     __pbssBANK0:
   442  0033                     _in_counter:
   443  0033                     	ds	1
   444  0034                     _in_sensor:
   445  0034                     	ds	1
   446  0035                     _door:
   447  0035                     	ds	1
   448  0036                     _lock:
   449  0036                     	ds	1
   450  0037                     _out_flag:
   451  0037                     	ds	1
   452  0038                     _uL:
   453  0038                     	ds	1
   454  0039                     _dL:
   455  0039                     	ds	1
   456  003A                     _light:
   457  003A                     	ds	1
   458                           
   459                           	psect	cstackCOMMON
   460  0070                     __pcstackCOMMON:
   461  0070                     ?_setup:
   462  0070                     ?_Lcd_Cmd:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ?_Lcd_Init:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0070                     ?_Lcd_Write_Char:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0070                     ?_Lcd_Write_String:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0070                     ?_UART_Init:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  0070                     ?_I2C_Master_Wait:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0070                     ?_I2C_Master_Start:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ?_I2C_Master_Stop:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ?_main:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_isr:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ??_isr:	
   493                           ; 1 bytes @ 0x0
   494                           
   495                           
   496                           ; 1 bytes @ 0x0
   497  0070                     	ds	2
   498  0072                     ??_Lcd_Cmd:
   499  0072                     ??_Lcd_Write_Char:	
   500                           ; 1 bytes @ 0x2
   501                           
   502  0072                     ??_UART_Init:	
   503                           ; 1 bytes @ 0x2
   504                           
   505  0072                     ??_I2C_Master_Wait:	
   506                           ; 1 bytes @ 0x2
   507                           
   508  0072                     ??_I2C_Master_Start:	
   509                           ; 1 bytes @ 0x2
   510                           
   511  0072                     ??_I2C_Master_Stop:	
   512                           ; 1 bytes @ 0x2
   513                           
   514  0072                     ?_I2C_Master_Write:	
   515                           ; 1 bytes @ 0x2
   516                           
   517  0072                     ??___lldiv:	
   518                           ; 1 bytes @ 0x2
   519                           
   520  0072                     ?_I2C_Master_Read:	
   521                           ; 1 bytes @ 0x2
   522                           
   523  0072                     I2C_Master_Write@d:	
   524                           ; 2 bytes @ 0x2
   525                           
   526  0072                     I2C_Master_Read@a:	
   527                           ; 2 bytes @ 0x2
   528                           
   529                           
   530                           ; 2 bytes @ 0x2
   531  0072                     	ds	1
   532  0073                     ___lldiv@quotient:
   533                           
   534                           ; 4 bytes @ 0x3
   535  0073                     	ds	1
   536  0074                     ??_I2C_Master_Write:
   537  0074                     ??_I2C_Master_Read:	
   538                           ; 1 bytes @ 0x4
   539                           
   540  0074                     Lcd_Cmd@a:	
   541                           ; 1 bytes @ 0x4
   542                           
   543  0074                     Lcd_Write_Char@a:	
   544                           ; 1 bytes @ 0x4
   545                           
   546                           
   547                           ; 1 bytes @ 0x4
   548  0074                     	ds	1
   549  0075                     ??_Lcd_Init:
   550  0075                     ??_Lcd_Write_String:	
   551                           ; 1 bytes @ 0x5
   552                           
   553  0075                     Lcd_Write_String@i:	
   554                           ; 1 bytes @ 0x5
   555                           
   556                           
   557                           ; 2 bytes @ 0x5
   558  0075                     	ds	1
   559  0076                     I2C_Master_Read@temp:
   560                           
   561                           ; 2 bytes @ 0x6
   562  0076                     	ds	1
   563  0077                     Lcd_Write_String@a:
   564  0077                     ___lldiv@counter:	
   565                           ; 1 bytes @ 0x7
   566                           
   567                           
   568                           ; 1 bytes @ 0x7
   569  0077                     	ds	1
   570  0078                     ??_setup:
   571                           
   572                           	psect	cstackBANK0
   573  0020                     __pcstackBANK0:	
   574                           ; 1 bytes @ 0x8
   575                           
   576  0020                     ?___lldiv:
   577  0020                     ___lldiv@divisor:	
   578                           ; 4 bytes @ 0x0
   579                           
   580                           
   581                           ; 4 bytes @ 0x0
   582  0020                     	ds	4
   583  0024                     ___lldiv@dividend:
   584                           
   585                           ; 4 bytes @ 0x4
   586  0024                     	ds	4
   587  0028                     ?_I2C_Master_Init:
   588  0028                     I2C_Master_Init@c:	
   589                           ; 1 bytes @ 0x8
   590                           
   591                           
   592                           ; 4 bytes @ 0x8
   593  0028                     	ds	4
   594  002C                     ??_I2C_Master_Init:
   595                           
   596                           ; 1 bytes @ 0xC
   597  002C                     	ds	4
   598  0030                     ??_main:
   599                           
   600                           ; 1 bytes @ 0x10
   601  0030                     	ds	3
   602                           
   603                           	psect	maintext
   604  0020                     __pmaintext:	
   605 ;;
   606 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   607 ;;
   608 ;; *************** function _main *****************
   609 ;; Defined at:
   610 ;;		line 65 in file "main.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;		None
   613 ;; Auto vars:     Size  Location     Type
   614 ;;		None
   615 ;; Return value:  Size  Location     Type
   616 ;;                  1    wreg      void 
   617 ;; Registers used:
   618 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   619 ;; Tracked objects:
   620 ;;		On entry : B00/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   624 ;;      Params:         0       0       0       0       0
   625 ;;      Locals:         0       0       0       0       0
   626 ;;      Temps:          0       3       0       0       0
   627 ;;      Totals:         0       3       0       0       0
   628 ;;Total ram usage:        3 bytes
   629 ;; Hardware stack levels required when called: 4
   630 ;; This function calls:
   631 ;;		_I2C_Master_Read
   632 ;;		_I2C_Master_Start
   633 ;;		_I2C_Master_Stop
   634 ;;		_I2C_Master_Write
   635 ;;		_Lcd_Cmd
   636 ;;		_Lcd_Write_String
   637 ;;		_setup
   638 ;; This function is called by:
   639 ;;		Startup code after reset
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           
   644                           ;psect for function _main
   645  0020                     _main:
   646  0020                     l1499:	
   647                           ;incstack = 0
   648                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   649                           
   650                           
   651                           ;main.c: 66:     setup();
   652  0020  120A  118A  2203  120A  118A  	fcall	_setup
   653  0025                     l1501:
   654                           
   655                           ;main.c: 67:     Lcd_Write_String(" Lock Door Lights");
   656  0025  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   657  0026  120A  118A  22DE  120A  118A  	fcall	_Lcd_Write_String
   658  002B                     l1503:
   659                           
   660                           ;main.c: 68:     Lcd_Cmd(0b11000000);
   661  002B  30C0               	movlw	192
   662  002C  120A  118A  2332  120A  118A  	fcall	_Lcd_Cmd
   663                           
   664                           ;main.c: 69:     Lcd_Write_String(" ON");
   665  0031  3021               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   666  0032  120A  118A  22DE  120A  118A  	fcall	_Lcd_Write_String
   667  0037                     l1505:
   668                           
   669                           ;main.c: 70:     Lcd_Cmd(0b11000100);
   670  0037  30C4               	movlw	196
   671  0038  120A  118A  2332  120A  118A  	fcall	_Lcd_Cmd
   672  003D                     l1507:
   673                           
   674                           ;main.c: 71:     Lcd_Write_String(" NO ");
   675  003D  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   676  003E  120A  118A  22DE  120A  118A  	fcall	_Lcd_Write_String
   677  0043                     l247:	
   678                           ;main.c: 80:     while(1){
   679                           
   680                           
   681                           ;main.c: 82:         I2C_Master_Start();
   682  0043  120A  118A  2366  120A  118A  	fcall	_I2C_Master_Start
   683                           
   684                           ;main.c: 83:         I2C_Master_Write(0b00000001);
   685  0048  3001               	movlw	1
   686  0049  00F2               	movwf	I2C_Master_Write@d
   687  004A  3000               	movlw	0
   688  004B  00F3               	movwf	I2C_Master_Write@d+1
   689  004C  120A  118A  2353  120A  118A  	fcall	_I2C_Master_Write
   690                           
   691                           ;main.c: 84:         out_flag = I2C_Master_Read(0);
   692  0051  3000               	movlw	0
   693  0052  00F2               	movwf	I2C_Master_Read@a
   694  0053  00F3               	movwf	I2C_Master_Read@a+1
   695  0054  120A  118A  2286  120A  118A  	fcall	_I2C_Master_Read
   696  0059  0872               	movf	?_I2C_Master_Read,w
   697  005A  1283               	bcf	3,5	;RP0=0, select bank0
   698  005B  1303               	bcf	3,6	;RP1=0, select bank0
   699  005C  00B0               	movwf	??_main
   700  005D  0830               	movf	??_main,w
   701  005E  00B7               	movwf	_out_flag
   702                           
   703                           ;main.c: 85:         I2C_Master_Stop();
   704  005F  120A  118A  235D  120A  118A  	fcall	_I2C_Master_Stop
   705  0064                     l1509:
   706                           
   707                           ;main.c: 86:         _delay((unsigned long)((200)*(4000000/4000.0)));
   708  0064  3002               	movlw	2
   709  0065  1283               	bcf	3,5	;RP0=0, select bank0
   710  0066  1303               	bcf	3,6	;RP1=0, select bank0
   711  0067  00B2               	movwf	??_main+2
   712  0068  3004               	movlw	4
   713  0069  00B1               	movwf	??_main+1
   714  006A  30B9               	movlw	185
   715  006B  00B0               	movwf	??_main
   716  006C                     u607:
   717  006C  0BB0               	decfsz	??_main,f
   718  006D  286C               	goto	u607
   719  006E  0BB1               	decfsz	??_main+1,f
   720  006F  286C               	goto	u607
   721  0070  0BB2               	decfsz	??_main+2,f
   722  0071  286C               	goto	u607
   723  0072  2873               	nop2
   724  0073                     l1511:
   725                           
   726                           ;main.c: 88:         I2C_Master_Start();
   727  0073  120A  118A  2366  120A  118A  	fcall	_I2C_Master_Start
   728  0078                     l1513:
   729                           
   730                           ;main.c: 89:         I2C_Master_Write(0b00000011);
   731  0078  3003               	movlw	3
   732  0079  00F2               	movwf	I2C_Master_Write@d
   733  007A  3000               	movlw	0
   734  007B  00F3               	movwf	I2C_Master_Write@d+1
   735  007C  120A  118A  2353  120A  118A  	fcall	_I2C_Master_Write
   736  0081                     l1515:
   737                           
   738                           ;main.c: 90:         in_sensor = I2C_Master_Read(0);
   739  0081  3000               	movlw	0
   740  0082  00F2               	movwf	I2C_Master_Read@a
   741  0083  00F3               	movwf	I2C_Master_Read@a+1
   742  0084  120A  118A  2286  120A  118A  	fcall	_I2C_Master_Read
   743  0089  0872               	movf	?_I2C_Master_Read,w
   744  008A  1283               	bcf	3,5	;RP0=0, select bank0
   745  008B  1303               	bcf	3,6	;RP1=0, select bank0
   746  008C  00B0               	movwf	??_main
   747  008D  0830               	movf	??_main,w
   748  008E  00B4               	movwf	_in_sensor
   749  008F                     l1517:
   750                           
   751                           ;main.c: 91:         I2C_Master_Stop();
   752  008F  120A  118A  235D  120A  118A  	fcall	_I2C_Master_Stop
   753  0094                     l1519:
   754                           
   755                           ;main.c: 92:         _delay((unsigned long)((200)*(4000000/4000.0)));
   756  0094  3002               	movlw	2
   757  0095  1283               	bcf	3,5	;RP0=0, select bank0
   758  0096  1303               	bcf	3,6	;RP1=0, select bank0
   759  0097  00B2               	movwf	??_main+2
   760  0098  3004               	movlw	4
   761  0099  00B1               	movwf	??_main+1
   762  009A  30B9               	movlw	185
   763  009B  00B0               	movwf	??_main
   764  009C                     u617:
   765  009C  0BB0               	decfsz	??_main,f
   766  009D  289C               	goto	u617
   767  009E  0BB1               	decfsz	??_main+1,f
   768  009F  289C               	goto	u617
   769  00A0  0BB2               	decfsz	??_main+2,f
   770  00A1  289C               	goto	u617
   771  00A2  28A3               	nop2
   772  00A3                     l1521:
   773                           
   774                           ;main.c: 94:         lock = out_flag & 0b00000001;
   775  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   776  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   777  00A5  0837               	movf	_out_flag,w
   778  00A6  3901               	andlw	1
   779  00A7  00B0               	movwf	??_main
   780  00A8  0830               	movf	??_main,w
   781  00A9  00B6               	movwf	_lock
   782  00AA                     l1523:
   783                           
   784                           ;main.c: 95:         door = out_flag & 0b00000010;
   785  00AA  0837               	movf	_out_flag,w
   786  00AB  3902               	andlw	2
   787  00AC  00B0               	movwf	??_main
   788  00AD  0830               	movf	??_main,w
   789  00AE  00B5               	movwf	_door
   790  00AF                     l1525:
   791                           
   792                           ;main.c: 96:         PORTB = in_sensor;
   793  00AF  0834               	movf	_in_sensor,w
   794  00B0  0086               	movwf	6	;volatile
   795  00B1                     l1527:
   796                           
   797                           ;main.c: 102:         if(lock != 0){
   798  00B1  0836               	movf	_lock,w
   799  00B2  1903               	btfsc	3,2
   800  00B3  28B5               	goto	u541
   801  00B4  28B6               	goto	u540
   802  00B5                     u541:
   803  00B5  28C4               	goto	l1535
   804  00B6                     u540:
   805  00B6                     l1529:
   806                           
   807                           ;main.c: 103:             CCPR1L = 128;
   808  00B6  3080               	movlw	128
   809  00B7  0095               	movwf	21	;volatile
   810  00B8                     l1531:
   811                           
   812                           ;main.c: 104:             Lcd_Cmd(0b11000000);
   813  00B8  30C0               	movlw	192
   814  00B9  120A  118A  2332  120A  118A  	fcall	_Lcd_Cmd
   815  00BE                     l1533:
   816                           
   817                           ;main.c: 105:             Lcd_Write_String("OFF");
   818  00BE  301D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   819  00BF  120A  118A  22DE  120A  118A  	fcall	_Lcd_Write_String
   820  00C4                     l1535:
   821                           
   822                           ;main.c: 107:         if (door > 0 && lock != 0){
   823  00C4  1283               	bcf	3,5	;RP0=0, select bank0
   824  00C5  1303               	bcf	3,6	;RP1=0, select bank0
   825  00C6  0835               	movf	_door,w
   826  00C7  1903               	btfsc	3,2
   827  00C8  28CA               	goto	u551
   828  00C9  28CB               	goto	u550
   829  00CA                     u551:
   830  00CA  28F1               	goto	l1551
   831  00CB                     u550:
   832  00CB                     l1537:
   833  00CB  0836               	movf	_lock,w
   834  00CC  1903               	btfsc	3,2
   835  00CD  28CF               	goto	u561
   836  00CE  28D0               	goto	u560
   837  00CF                     u561:
   838  00CF  28F1               	goto	l1551
   839  00D0                     u560:
   840  00D0                     l1539:
   841                           
   842                           ;main.c: 108:             Lcd_Cmd(0b11000100);
   843  00D0  30C4               	movlw	196
   844  00D1  120A  118A  2332  120A  118A  	fcall	_Lcd_Cmd
   845  00D6                     l1541:
   846                           
   847                           ;main.c: 109:             Lcd_Write_String("OPEN");
   848  00D6  3018               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   849  00D7  120A  118A  22DE  120A  118A  	fcall	_Lcd_Write_String
   850  00DC                     l1543:
   851                           
   852                           ;main.c: 110:             RD0 = 0;
   853  00DC  1283               	bcf	3,5	;RP0=0, select bank0
   854  00DD  1303               	bcf	3,6	;RP1=0, select bank0
   855  00DE  1008               	bcf	8,0	;volatile
   856  00DF                     l1545:
   857                           
   858                           ;main.c: 111:             RD1 = 1;
   859  00DF  1488               	bsf	8,1	;volatile
   860  00E0                     l1547:
   861                           
   862                           ;main.c: 112:             _delay((unsigned long)((500)*(4000000/4000.0)));
   863  00E0  3003               	movlw	3
   864  00E1  1283               	bcf	3,5	;RP0=0, select bank0
   865  00E2  1303               	bcf	3,6	;RP1=0, select bank0
   866  00E3  00B2               	movwf	??_main+2
   867  00E4  308A               	movlw	138
   868  00E5  00B1               	movwf	??_main+1
   869  00E6  3055               	movlw	85
   870  00E7  00B0               	movwf	??_main
   871  00E8                     u627:
   872  00E8  0BB0               	decfsz	??_main,f
   873  00E9  28E8               	goto	u627
   874  00EA  0BB1               	decfsz	??_main+1,f
   875  00EB  28E8               	goto	u627
   876  00EC  0BB2               	decfsz	??_main+2,f
   877  00ED  28E8               	goto	u627
   878  00EE                     l1549:
   879                           
   880                           ;main.c: 113:             RD1 = 0;
   881  00EE  1283               	bcf	3,5	;RP0=0, select bank0
   882  00EF  1303               	bcf	3,6	;RP1=0, select bank0
   883  00F0  1088               	bcf	8,1	;volatile
   884  00F1                     l1551:
   885                           
   886                           ;main.c: 116:         if (in_sensor>0){
   887  00F1  0834               	movf	_in_sensor,w
   888  00F2  1903               	btfsc	3,2
   889  00F3  28F5               	goto	u571
   890  00F4  28F6               	goto	u570
   891  00F5                     u571:
   892  00F5  28F8               	goto	l1555
   893  00F6                     u570:
   894  00F6                     l1553:
   895                           
   896                           ;main.c: 117:             in_counter = 1;
   897  00F6  01B3               	clrf	_in_counter
   898  00F7  0AB3               	incf	_in_counter,f
   899  00F8                     l1555:
   900                           
   901                           ;main.c: 120:         if(in_counter == 1 && in_sensor == 0){
   902  00F8  0333               	decf	_in_counter,w
   903  00F9  1D03               	btfss	3,2
   904  00FA  28FC               	goto	u581
   905  00FB  28FD               	goto	u580
   906  00FC                     u581:
   907  00FC  2843               	goto	l247
   908  00FD                     u580:
   909  00FD                     l1557:
   910  00FD  0834               	movf	_in_sensor,w
   911  00FE  1D03               	btfss	3,2
   912  00FF  2901               	goto	u591
   913  0100  2902               	goto	u590
   914  0101                     u591:
   915  0101  2843               	goto	l247
   916  0102                     u590:
   917  0102                     l1559:
   918                           
   919                           ;main.c: 121:             in_counter = 0;
   920  0102  01B3               	clrf	_in_counter
   921  0103                     l1561:
   922                           
   923                           ;main.c: 122:             Lcd_Cmd(0b11000100);
   924  0103  30C4               	movlw	196
   925  0104  120A  118A  2332  120A  118A  	fcall	_Lcd_Cmd
   926  0109                     l1563:
   927                           
   928                           ;main.c: 123:             Lcd_Write_String(" NO ");
   929  0109  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   930  010A  120A  118A  22DE  120A  118A  	fcall	_Lcd_Write_String
   931  010F                     l1565:
   932                           
   933                           ;main.c: 124:             RD0=1;
   934  010F  1283               	bcf	3,5	;RP0=0, select bank0
   935  0110  1303               	bcf	3,6	;RP1=0, select bank0
   936  0111  1408               	bsf	8,0	;volatile
   937  0112                     l1567:
   938                           
   939                           ;main.c: 125:             RD1=0;
   940  0112  1088               	bcf	8,1	;volatile
   941  0113                     l1569:
   942                           
   943                           ;main.c: 126:             _delay((unsigned long)((200)*(4000000/4000.0)));
   944  0113  3002               	movlw	2
   945  0114  1283               	bcf	3,5	;RP0=0, select bank0
   946  0115  1303               	bcf	3,6	;RP1=0, select bank0
   947  0116  00B2               	movwf	??_main+2
   948  0117  3004               	movlw	4
   949  0118  00B1               	movwf	??_main+1
   950  0119  30B9               	movlw	185
   951  011A  00B0               	movwf	??_main
   952  011B                     u637:
   953  011B  0BB0               	decfsz	??_main,f
   954  011C  291B               	goto	u637
   955  011D  0BB1               	decfsz	??_main+1,f
   956  011E  291B               	goto	u637
   957  011F  0BB2               	decfsz	??_main+2,f
   958  0120  291B               	goto	u637
   959  0121  2922               	nop2
   960  0122                     l1571:
   961                           
   962                           ;main.c: 127:             RD0=0;
   963  0122  1283               	bcf	3,5	;RP0=0, select bank0
   964  0123  1303               	bcf	3,6	;RP1=0, select bank0
   965  0124  1008               	bcf	8,0	;volatile
   966  0125                     l1573:
   967                           
   968                           ;main.c: 128:             _delay((unsigned long)((100)*(4000000/4000.0)));
   969  0125  3082               	movlw	130
   970  0126  1283               	bcf	3,5	;RP0=0, select bank0
   971  0127  1303               	bcf	3,6	;RP1=0, select bank0
   972  0128  00B1               	movwf	??_main+1
   973  0129  30DD               	movlw	221
   974  012A  00B0               	movwf	??_main
   975  012B                     u647:
   976  012B  0BB0               	decfsz	??_main,f
   977  012C  292B               	goto	u647
   978  012D  0BB1               	decfsz	??_main+1,f
   979  012E  292B               	goto	u647
   980  012F                     l1575:
   981                           
   982                           ;main.c: 129:             CCPR1L = 32;
   983  012F  3020               	movlw	32
   984  0130  1283               	bcf	3,5	;RP0=0, select bank0
   985  0131  1303               	bcf	3,6	;RP1=0, select bank0
   986  0132  0095               	movwf	21	;volatile
   987  0133                     l1577:
   988                           
   989                           ;main.c: 130:             Lcd_Cmd(0b11000000);
   990  0133  30C0               	movlw	192
   991  0134  120A  118A  2332  120A  118A  	fcall	_Lcd_Cmd
   992  0139                     l1579:
   993                           
   994                           ;main.c: 131:             Lcd_Write_String(" ON");
   995  0139  3021               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   996  013A  120A  118A  22DE  120A  118A  	fcall	_Lcd_Write_String
   997  013F  2843               	goto	l247
   998  0140  120A  118A  280C   	ljmp	start
   999  0143                     __end_of_main:
  1000                           
  1001                           	psect	text1
  1002  0203                     __ptext1:	
  1003 ;; *************** function _setup *****************
  1004 ;; Defined at:
  1005 ;;		line 141 in file "main.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;		None
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;		None
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg, status,2, status,0, pclath, cstack
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1019 ;;      Params:         0       0       0       0       0
  1020 ;;      Locals:         0       0       0       0       0
  1021 ;;      Temps:          0       0       0       0       0
  1022 ;;      Totals:         0       0       0       0       0
  1023 ;;Total ram usage:        0 bytes
  1024 ;; Hardware stack levels used: 1
  1025 ;; Hardware stack levels required when called: 3
  1026 ;; This function calls:
  1027 ;;		_I2C_Master_Init
  1028 ;;		_Lcd_Init
  1029 ;;		_UART_Init
  1030 ;; This function is called by:
  1031 ;;		_main
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           
  1036                           ;psect for function _setup
  1037  0203                     _setup:
  1038  0203                     l1463:	
  1039                           ;incstack = 0
  1040                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1041                           
  1042                           
  1043                           ;main.c: 143:     ANSEL = 0;
  1044  0203  1683               	bsf	3,5	;RP0=1, select bank3
  1045  0204  1703               	bsf	3,6	;RP1=1, select bank3
  1046  0205  0188               	clrf	8	;volatile
  1047                           
  1048                           ;main.c: 144:     ANSELH = 0;
  1049  0206  0189               	clrf	9	;volatile
  1050                           
  1051                           ;main.c: 145:     TRISA = 0;
  1052  0207  1683               	bsf	3,5	;RP0=1, select bank1
  1053  0208  1303               	bcf	3,6	;RP1=0, select bank1
  1054  0209  0185               	clrf	5	;volatile
  1055                           
  1056                           ;main.c: 146:     TRISB = 0;
  1057  020A  0186               	clrf	6	;volatile
  1058  020B                     l1465:
  1059                           
  1060                           ;main.c: 147:     TRISC = 0b10010000;
  1061  020B  3090               	movlw	144
  1062  020C  0087               	movwf	7	;volatile
  1063  020D                     l1467:
  1064                           
  1065                           ;main.c: 148:     TRISD = 0;
  1066  020D  0188               	clrf	8	;volatile
  1067  020E                     l1469:
  1068                           
  1069                           ;main.c: 149:     TRISE = 0;
  1070  020E  0189               	clrf	9	;volatile
  1071  020F                     l1471:
  1072                           
  1073                           ;main.c: 153:     GIE = 1;
  1074  020F  178B               	bsf	11,7	;volatile
  1075  0210                     l1473:
  1076                           
  1077                           ;main.c: 154:     PEIE = 1;
  1078  0210  170B               	bsf	11,6	;volatile
  1079  0211                     l1475:
  1080                           
  1081                           ;main.c: 156:     Lcd_Init();
  1082  0211  120A  118A  21AB  120A  118A  	fcall	_Lcd_Init
  1083  0216                     l1477:
  1084                           
  1085                           ;main.c: 158:     UART_Init();
  1086  0216  120A  118A  231B  120A  118A  	fcall	_UART_Init
  1087  021B                     l1479:
  1088                           
  1089                           ;main.c: 160:     I2C_Master_Init(100000);
  1090  021B  3000               	movlw	0
  1091  021C  1283               	bcf	3,5	;RP0=0, select bank0
  1092  021D  1303               	bcf	3,6	;RP1=0, select bank0
  1093  021E  00AB               	movwf	I2C_Master_Init@c+3
  1094  021F  3001               	movlw	1
  1095  0220  00AA               	movwf	I2C_Master_Init@c+2
  1096  0221  3086               	movlw	134
  1097  0222  00A9               	movwf	I2C_Master_Init@c+1
  1098  0223  30A0               	movlw	160
  1099  0224  00A8               	movwf	I2C_Master_Init@c
  1100  0225  120A  118A  224C  120A  118A  	fcall	_I2C_Master_Init
  1101  022A                     l1481:
  1102                           
  1103                           ;main.c: 164:     TRISCbits.TRISC2 = 1;
  1104  022A  1683               	bsf	3,5	;RP0=1, select bank1
  1105  022B  1303               	bcf	3,6	;RP1=0, select bank1
  1106  022C  1507               	bsf	7,2	;volatile
  1107  022D                     l1483:
  1108                           
  1109                           ;main.c: 165:     PR2 = 249;
  1110  022D  30F9               	movlw	249
  1111  022E  0092               	movwf	18	;volatile
  1112  022F                     l1485:
  1113                           
  1114                           ;main.c: 166:     CCP1M3 = 1;
  1115  022F  1283               	bcf	3,5	;RP0=0, select bank0
  1116  0230  1303               	bcf	3,6	;RP1=0, select bank0
  1117  0231  1597               	bsf	23,3	;volatile
  1118  0232                     l1487:
  1119                           
  1120                           ;main.c: 167:     CCP1M2 = 1;
  1121  0232  1517               	bsf	23,2	;volatile
  1122  0233                     l1489:
  1123                           
  1124                           ;main.c: 168:     CCPR1L = 32;
  1125  0233  3020               	movlw	32
  1126  0234  0095               	movwf	21	;volatile
  1127  0235                     l1491:
  1128                           
  1129                           ;main.c: 170:     TMR2IF = 0;
  1130  0235  108C               	bcf	12,1	;volatile
  1131  0236                     l1493:
  1132                           
  1133                           ;main.c: 171:     T2CON = 3;
  1134  0236  3003               	movlw	3
  1135  0237  0092               	movwf	18	;volatile
  1136  0238                     l1495:
  1137                           
  1138                           ;main.c: 172:     T2CONbits.TMR2ON = 1;
  1139  0238  1512               	bsf	18,2	;volatile
  1140  0239                     l257:	
  1141                           ;main.c: 174:     }
  1142                           
  1143                           
  1144                           ;main.c: 173:     while(TMR2IF==0){
  1145  0239  1C8C               	btfss	12,1	;volatile
  1146  023A  2A3C               	goto	u531
  1147  023B  2A3D               	goto	u530
  1148  023C                     u531:
  1149  023C  2A39               	goto	l257
  1150  023D                     u530:
  1151  023D                     l259:
  1152                           
  1153                           ;main.c: 175:     TRISCbits.TRISC2 = 0;
  1154  023D  1683               	bsf	3,5	;RP0=1, select bank1
  1155  023E  1303               	bcf	3,6	;RP1=0, select bank1
  1156  023F  1107               	bcf	7,2	;volatile
  1157  0240                     l1497:
  1158                           
  1159                           ;main.c: 178:     PORTA = 0;
  1160  0240  1283               	bcf	3,5	;RP0=0, select bank0
  1161  0241  1303               	bcf	3,6	;RP1=0, select bank0
  1162  0242  0185               	clrf	5	;volatile
  1163                           
  1164                           ;main.c: 179:     PORTB = 0;
  1165  0243  0186               	clrf	6	;volatile
  1166                           
  1167                           ;main.c: 180:     PORTC = 0;
  1168  0244  0187               	clrf	7	;volatile
  1169                           
  1170                           ;main.c: 181:     PORTD = 0;
  1171  0245  0188               	clrf	8	;volatile
  1172                           
  1173                           ;main.c: 182:     PORTE = 0;
  1174  0246  0189               	clrf	9	;volatile
  1175                           
  1176                           ;main.c: 185:     light = 0;
  1177  0247  01BA               	clrf	_light
  1178                           
  1179                           ;main.c: 186:     door = 0;
  1180  0248  01B5               	clrf	_door
  1181                           
  1182                           ;main.c: 187:     lock = 0;
  1183  0249  01B6               	clrf	_lock
  1184                           
  1185                           ;main.c: 188:     in_sensor = 0;
  1186  024A  01B4               	clrf	_in_sensor
  1187  024B                     l260:
  1188  024B  0008               	return
  1189  024C                     __end_of_setup:
  1190                           
  1191                           	psect	text2
  1192  031B                     __ptext2:	
  1193 ;; *************** function _UART_Init *****************
  1194 ;; Defined at:
  1195 ;;		line 80 in file "Digital2_toolbox.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;		None
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;		None
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg, status,2
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1209 ;;      Params:         0       0       0       0       0
  1210 ;;      Locals:         0       0       0       0       0
  1211 ;;      Temps:          0       0       0       0       0
  1212 ;;      Totals:         0       0       0       0       0
  1213 ;;Total ram usage:        0 bytes
  1214 ;; Hardware stack levels used: 1
  1215 ;; Hardware stack levels required when called: 1
  1216 ;; This function calls:
  1217 ;;		Nothing
  1218 ;; This function is called by:
  1219 ;;		_setup
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           
  1224                           ;psect for function _UART_Init
  1225  031B                     _UART_Init:
  1226  031B                     l1243:	
  1227                           ;incstack = 0
  1228                           ; Regs used in _UART_Init: [wreg+status,2]
  1229                           
  1230                           
  1231                           ;Digital2_toolbox.c: 81:     TRISCbits.TRISC7 = 1;
  1232  031B  1683               	bsf	3,5	;RP0=1, select bank1
  1233  031C  1303               	bcf	3,6	;RP1=0, select bank1
  1234  031D  1787               	bsf	7,7	;volatile
  1235                           
  1236                           ;Digital2_toolbox.c: 83:     TXSTAbits.TXEN = 1;
  1237  031E  1698               	bsf	24,5	;volatile
  1238                           
  1239                           ;Digital2_toolbox.c: 84:     TXSTAbits.SYNC = 0;
  1240  031F  1218               	bcf	24,4	;volatile
  1241                           
  1242                           ;Digital2_toolbox.c: 85:     RCSTAbits.SPEN = 1;
  1243  0320  1283               	bcf	3,5	;RP0=0, select bank0
  1244  0321  1303               	bcf	3,6	;RP1=0, select bank0
  1245  0322  1798               	bsf	24,7	;volatile
  1246                           
  1247                           ;Digital2_toolbox.c: 86:     TXSTAbits.BRGH = 1;
  1248  0323  1683               	bsf	3,5	;RP0=1, select bank1
  1249  0324  1303               	bcf	3,6	;RP1=0, select bank1
  1250  0325  1518               	bsf	24,2	;volatile
  1251                           
  1252                           ;Digital2_toolbox.c: 87:     BRG16 = 0;
  1253  0326  1683               	bsf	3,5	;RP0=1, select bank3
  1254  0327  1703               	bsf	3,6	;RP1=1, select bank3
  1255  0328  1187               	bcf	7,3	;volatile
  1256  0329                     l1245:
  1257                           
  1258                           ;Digital2_toolbox.c: 88:     SPBRGH = 0;
  1259  0329  1683               	bsf	3,5	;RP0=1, select bank1
  1260  032A  1303               	bcf	3,6	;RP1=0, select bank1
  1261  032B  019A               	clrf	26	;volatile
  1262  032C                     l1247:
  1263                           
  1264                           ;Digital2_toolbox.c: 89:     SPBRG = 25;
  1265  032C  3019               	movlw	25
  1266  032D  0099               	movwf	25	;volatile
  1267  032E                     l1249:
  1268                           
  1269                           ;Digital2_toolbox.c: 93:     RCSTAbits.CREN = 1;
  1270  032E  1283               	bcf	3,5	;RP0=0, select bank0
  1271  032F  1303               	bcf	3,6	;RP1=0, select bank0
  1272  0330  1618               	bsf	24,4	;volatile
  1273  0331                     l81:
  1274  0331  0008               	return
  1275  0332                     __end_of_UART_Init:
  1276                           
  1277                           	psect	text3
  1278  01AB                     __ptext3:	
  1279 ;; *************** function _Lcd_Init *****************
  1280 ;; Defined at:
  1281 ;;		line 42 in file "Digital2_toolbox.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;		None
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;		None
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		wreg, status,2, status,0, pclath, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1295 ;;      Params:         0       0       0       0       0
  1296 ;;      Locals:         0       0       0       0       0
  1297 ;;      Temps:          2       0       0       0       0
  1298 ;;      Totals:         2       0       0       0       0
  1299 ;;Total ram usage:        2 bytes
  1300 ;; Hardware stack levels used: 1
  1301 ;; Hardware stack levels required when called: 2
  1302 ;; This function calls:
  1303 ;;		_Lcd_Cmd
  1304 ;; This function is called by:
  1305 ;;		_setup
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           
  1310                           ;psect for function _Lcd_Init
  1311  01AB                     _Lcd_Init:
  1312  01AB                     l1207:	
  1313                           ;incstack = 0
  1314                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1315                           
  1316                           
  1317                           ;Digital2_toolbox.c: 43:     PORTA = 0;
  1318  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  1319  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  1320  01AD  0185               	clrf	5	;volatile
  1321  01AE                     l1209:
  1322                           
  1323                           ;Digital2_toolbox.c: 44:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1324  01AE  301A               	movlw	26
  1325  01AF  00F6               	movwf	??_Lcd_Init+1
  1326  01B0  30F8               	movlw	248
  1327  01B1  00F5               	movwf	??_Lcd_Init
  1328  01B2                     u657:
  1329  01B2  0BF5               	decfsz	??_Lcd_Init,f
  1330  01B3  29B2               	goto	u657
  1331  01B4  0BF6               	decfsz	??_Lcd_Init+1,f
  1332  01B5  29B2               	goto	u657
  1333  01B6  0000               	nop
  1334  01B7                     l1211:
  1335                           
  1336                           ;Digital2_toolbox.c: 45:     Lcd_Cmd(0x030);
  1337  01B7  3030               	movlw	48
  1338  01B8  120A  118A  2332  120A  118A  	fcall	_Lcd_Cmd
  1339  01BD                     l1213:
  1340                           
  1341                           ;Digital2_toolbox.c: 46:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1342  01BD  3007               	movlw	7
  1343  01BE  00F6               	movwf	??_Lcd_Init+1
  1344  01BF  307D               	movlw	125
  1345  01C0  00F5               	movwf	??_Lcd_Init
  1346  01C1                     u667:
  1347  01C1  0BF5               	decfsz	??_Lcd_Init,f
  1348  01C2  29C1               	goto	u667
  1349  01C3  0BF6               	decfsz	??_Lcd_Init+1,f
  1350  01C4  29C1               	goto	u667
  1351  01C5                     l1215:
  1352                           
  1353                           ;Digital2_toolbox.c: 47:     Lcd_Cmd(0x030);
  1354  01C5  3030               	movlw	48
  1355  01C6  120A  118A  2332  120A  118A  	fcall	_Lcd_Cmd
  1356  01CB                     l1217:
  1357                           
  1358                           ;Digital2_toolbox.c: 48:     _delay((unsigned long)((160)*(4000000/4000000.0)));
  1359  01CB  3035               	movlw	53
  1360  01CC  00F5               	movwf	??_Lcd_Init
  1361  01CD                     u677:
  1362  01CD  0BF5               	decfsz	??_Lcd_Init,f
  1363  01CE  29CD               	goto	u677
  1364  01CF                     l1219:
  1365                           
  1366                           ;Digital2_toolbox.c: 49:     Lcd_Cmd(0x030);
  1367  01CF  3030               	movlw	48
  1368  01D0  120A  118A  2332  120A  118A  	fcall	_Lcd_Cmd
  1369  01D5                     l1221:
  1370                           
  1371                           ;Digital2_toolbox.c: 51:     Lcd_Cmd(0b00111000);
  1372  01D5  3038               	movlw	56
  1373  01D6  120A  118A  2332  120A  118A  	fcall	_Lcd_Cmd
  1374  01DB                     l1223:
  1375                           
  1376                           ;Digital2_toolbox.c: 52:     Lcd_Cmd(0x10);
  1377  01DB  3010               	movlw	16
  1378  01DC  120A  118A  2332  120A  118A  	fcall	_Lcd_Cmd
  1379  01E1                     l1225:
  1380                           
  1381                           ;Digital2_toolbox.c: 53:     Lcd_Cmd(0x01);
  1382  01E1  3001               	movlw	1
  1383  01E2  120A  118A  2332  120A  118A  	fcall	_Lcd_Cmd
  1384  01E7                     l1227:
  1385                           
  1386                           ;Digital2_toolbox.c: 54:     Lcd_Cmd(0b00000110);
  1387  01E7  3006               	movlw	6
  1388  01E8  120A  118A  2332  120A  118A  	fcall	_Lcd_Cmd
  1389  01ED                     l1229:
  1390                           
  1391                           ;Digital2_toolbox.c: 55:     Lcd_Cmd(0x10);
  1392  01ED  3010               	movlw	16
  1393  01EE  120A  118A  2332  120A  118A  	fcall	_Lcd_Cmd
  1394  01F3                     l1231:
  1395                           
  1396                           ;Digital2_toolbox.c: 56:     Lcd_Cmd(0b00001100);
  1397  01F3  300C               	movlw	12
  1398  01F4  120A  118A  2332  120A  118A  	fcall	_Lcd_Cmd
  1399  01F9                     l1233:
  1400                           
  1401                           ;Digital2_toolbox.c: 57:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1402  01F9  3082               	movlw	130
  1403  01FA  00F6               	movwf	??_Lcd_Init+1
  1404  01FB  30DD               	movlw	221
  1405  01FC  00F5               	movwf	??_Lcd_Init
  1406  01FD                     u687:
  1407  01FD  0BF5               	decfsz	??_Lcd_Init,f
  1408  01FE  29FD               	goto	u687
  1409  01FF  0BF6               	decfsz	??_Lcd_Init+1,f
  1410  0200  29FD               	goto	u687
  1411  0201  2A02               	nop2
  1412  0202                     l69:
  1413  0202  0008               	return
  1414  0203                     __end_of_Lcd_Init:
  1415                           
  1416                           	psect	text4
  1417  0332                     __ptext4:	
  1418 ;; *************** function _Lcd_Cmd *****************
  1419 ;; Defined at:
  1420 ;;		line 28 in file "Digital2_toolbox.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;  a               1    wreg     unsigned char 
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;  a               1    4[COMMON] unsigned char 
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  1    wreg      void 
  1427 ;; Registers used:
  1428 ;;		wreg
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1434 ;;      Params:         0       0       0       0       0
  1435 ;;      Locals:         1       0       0       0       0
  1436 ;;      Temps:          2       0       0       0       0
  1437 ;;      Totals:         3       0       0       0       0
  1438 ;;Total ram usage:        3 bytes
  1439 ;; Hardware stack levels used: 1
  1440 ;; Hardware stack levels required when called: 1
  1441 ;; This function calls:
  1442 ;;		Nothing
  1443 ;; This function is called by:
  1444 ;;		_Lcd_Init
  1445 ;;		_main
  1446 ;;		_Lcd_Clear
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           
  1451                           ;psect for function _Lcd_Cmd
  1452  0332                     _Lcd_Cmd:
  1453                           
  1454                           ;incstack = 0
  1455                           ; Regs used in _Lcd_Cmd: [wreg]
  1456                           ;Lcd_Cmd@a stored from wreg
  1457  0332  00F4               	movwf	Lcd_Cmd@a
  1458  0333                     l1175:
  1459                           
  1460                           ;Digital2_toolbox.c: 29:     RE0 = 0;
  1461  0333  1283               	bcf	3,5	;RP0=0, select bank0
  1462  0334  1303               	bcf	3,6	;RP1=0, select bank0
  1463  0335  1009               	bcf	9,0	;volatile
  1464  0336                     l1177:
  1465                           
  1466                           ;Digital2_toolbox.c: 30:     PORTA = a;
  1467  0336  0874               	movf	Lcd_Cmd@a,w
  1468  0337  0085               	movwf	5	;volatile
  1469  0338                     l1179:
  1470                           
  1471                           ;Digital2_toolbox.c: 31:     RE1 = 1;
  1472  0338  1489               	bsf	9,1	;volatile
  1473                           
  1474                           ;Digital2_toolbox.c: 32:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1475  0339  3006               	movlw	6
  1476  033A  00F3               	movwf	??_Lcd_Cmd+1
  1477  033B  3030               	movlw	48
  1478  033C  00F2               	movwf	??_Lcd_Cmd
  1479  033D                     u697:
  1480  033D  0BF2               	decfsz	??_Lcd_Cmd,f
  1481  033E  2B3D               	goto	u697
  1482  033F  0BF3               	decfsz	??_Lcd_Cmd+1,f
  1483  0340  2B3D               	goto	u697
  1484  0341  0000               	nop
  1485  0342                     l1181:
  1486                           
  1487                           ;Digital2_toolbox.c: 33:     RE1 = 0;
  1488  0342  1283               	bcf	3,5	;RP0=0, select bank0
  1489  0343  1303               	bcf	3,6	;RP1=0, select bank0
  1490  0344  1089               	bcf	9,1	;volatile
  1491  0345                     l63:
  1492  0345  0008               	return
  1493  0346                     __end_of_Lcd_Cmd:
  1494                           
  1495                           	psect	text5
  1496  024C                     __ptext5:	
  1497 ;; *************** function _I2C_Master_Init *****************
  1498 ;; Defined at:
  1499 ;;		line 171 in file "Digital2_toolbox.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;  c               4    8[BANK0 ] const unsigned long 
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;		None
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      void 
  1506 ;; Registers used:
  1507 ;;		wreg, status,2, status,0, pclath, cstack
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1513 ;;      Params:         0       4       0       0       0
  1514 ;;      Locals:         0       0       0       0       0
  1515 ;;      Temps:          0       4       0       0       0
  1516 ;;      Totals:         0       8       0       0       0
  1517 ;;Total ram usage:        8 bytes
  1518 ;; Hardware stack levels used: 1
  1519 ;; Hardware stack levels required when called: 2
  1520 ;; This function calls:
  1521 ;;		___lldiv
  1522 ;; This function is called by:
  1523 ;;		_setup
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           
  1528                           ;psect for function _I2C_Master_Init
  1529  024C                     _I2C_Master_Init:
  1530  024C                     l1451:	
  1531                           ;incstack = 0
  1532                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1533                           
  1534                           
  1535                           ;Digital2_toolbox.c: 171: void I2C_Master_Init(const unsigned long c);Digital2_toolbox.c
      +                          : 172: {;Digital2_toolbox.c: 173:     SSPCON = 0b00101000;
  1536  024C  3028               	movlw	40
  1537  024D  1283               	bcf	3,5	;RP0=0, select bank0
  1538  024E  1303               	bcf	3,6	;RP1=0, select bank0
  1539  024F  0094               	movwf	20	;volatile
  1540  0250                     l1453:
  1541                           
  1542                           ;Digital2_toolbox.c: 174:     SSPCON2 = 0;
  1543  0250  1683               	bsf	3,5	;RP0=1, select bank1
  1544  0251  1303               	bcf	3,6	;RP1=0, select bank1
  1545  0252  0191               	clrf	17	;volatile
  1546  0253                     l1455:
  1547                           
  1548                           ;Digital2_toolbox.c: 175:     SSPADD = (4000000/(4*c))-1;
  1549  0253  1283               	bcf	3,5	;RP0=0, select bank0
  1550  0254  1303               	bcf	3,6	;RP1=0, select bank0
  1551  0255  0828               	movf	I2C_Master_Init@c,w
  1552  0256  00AC               	movwf	??_I2C_Master_Init
  1553  0257  0829               	movf	I2C_Master_Init@c+1,w
  1554  0258  00AD               	movwf	??_I2C_Master_Init+1
  1555  0259  082A               	movf	I2C_Master_Init@c+2,w
  1556  025A  00AE               	movwf	??_I2C_Master_Init+2
  1557  025B  082B               	movf	I2C_Master_Init@c+3,w
  1558  025C  00AF               	movwf	??_I2C_Master_Init+3
  1559  025D  3002               	movlw	2
  1560  025E                     u525:
  1561  025E  1003               	clrc
  1562  025F  0DAC               	rlf	??_I2C_Master_Init,f
  1563  0260  0DAD               	rlf	??_I2C_Master_Init+1,f
  1564  0261  0DAE               	rlf	??_I2C_Master_Init+2,f
  1565  0262  0DAF               	rlf	??_I2C_Master_Init+3,f
  1566  0263                     u520:
  1567  0263  3EFF               	addlw	-1
  1568  0264  1D03               	skipz
  1569  0265  2A5E               	goto	u525
  1570  0266  082F               	movf	??_I2C_Master_Init+3,w
  1571  0267  00A3               	movwf	___lldiv@divisor+3
  1572  0268  082E               	movf	??_I2C_Master_Init+2,w
  1573  0269  00A2               	movwf	___lldiv@divisor+2
  1574  026A  082D               	movf	??_I2C_Master_Init+1,w
  1575  026B  00A1               	movwf	___lldiv@divisor+1
  1576  026C  082C               	movf	??_I2C_Master_Init,w
  1577  026D  00A0               	movwf	___lldiv@divisor
  1578  026E  3000               	movlw	0
  1579  026F  00A7               	movwf	___lldiv@dividend+3
  1580  0270  303D               	movlw	61
  1581  0271  00A6               	movwf	___lldiv@dividend+2
  1582  0272  3009               	movlw	9
  1583  0273  00A5               	movwf	___lldiv@dividend+1
  1584  0274  3000               	movlw	0
  1585  0275  00A4               	movwf	___lldiv@dividend
  1586  0276  120A  118A  2143  120A  118A  	fcall	___lldiv
  1587  027B  1283               	bcf	3,5	;RP0=0, select bank0
  1588  027C  1303               	bcf	3,6	;RP1=0, select bank0
  1589  027D  0820               	movf	?___lldiv,w
  1590  027E  3EFF               	addlw	255
  1591  027F  1683               	bsf	3,5	;RP0=1, select bank1
  1592  0280  1303               	bcf	3,6	;RP1=0, select bank1
  1593  0281  0093               	movwf	19	;volatile
  1594  0282                     l1457:
  1595                           
  1596                           ;Digital2_toolbox.c: 176:     SSPSTAT = 0;
  1597  0282  0194               	clrf	20	;volatile
  1598  0283                     l1459:
  1599                           
  1600                           ;Digital2_toolbox.c: 177:     TRISCbits.TRISC3 = 1;
  1601  0283  1587               	bsf	7,3	;volatile
  1602  0284                     l1461:
  1603                           
  1604                           ;Digital2_toolbox.c: 178:     TRISCbits.TRISC4 = 1;
  1605  0284  1607               	bsf	7,4	;volatile
  1606  0285                     l121:
  1607  0285  0008               	return
  1608  0286                     __end_of_I2C_Master_Init:
  1609                           
  1610                           	psect	text6
  1611  0143                     __ptext6:	
  1612 ;; *************** function ___lldiv *****************
  1613 ;; Defined at:
  1614 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;  divisor         4    0[BANK0 ] unsigned long 
  1617 ;;  dividend        4    4[BANK0 ] unsigned long 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  quotient        4    3[COMMON] unsigned long 
  1620 ;;  counter         1    7[COMMON] unsigned char 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  4    0[BANK0 ] unsigned long 
  1623 ;; Registers used:
  1624 ;;		wreg, status,2, status,0
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1630 ;;      Params:         0       8       0       0       0
  1631 ;;      Locals:         5       0       0       0       0
  1632 ;;      Temps:          1       0       0       0       0
  1633 ;;      Totals:         6       8       0       0       0
  1634 ;;Total ram usage:       14 bytes
  1635 ;; Hardware stack levels used: 1
  1636 ;; Hardware stack levels required when called: 1
  1637 ;; This function calls:
  1638 ;;		Nothing
  1639 ;; This function is called by:
  1640 ;;		_I2C_Master_Init
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           
  1645                           ;psect for function ___lldiv
  1646  0143                     ___lldiv:
  1647  0143                     l1427:	
  1648                           ;incstack = 0
  1649                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1650                           
  1651  0143  3000               	movlw	0
  1652  0144  00F6               	movwf	___lldiv@quotient+3
  1653  0145  3000               	movlw	0
  1654  0146  00F5               	movwf	___lldiv@quotient+2
  1655  0147  3000               	movlw	0
  1656  0148  00F4               	movwf	___lldiv@quotient+1
  1657  0149  3000               	movlw	0
  1658  014A  00F3               	movwf	___lldiv@quotient
  1659  014B  1283               	bcf	3,5	;RP0=0, select bank0
  1660  014C  1303               	bcf	3,6	;RP1=0, select bank0
  1661  014D  0823               	movf	___lldiv@divisor+3,w
  1662  014E  0422               	iorwf	___lldiv@divisor+2,w
  1663  014F  0421               	iorwf	___lldiv@divisor+1,w
  1664  0150  0420               	iorwf	___lldiv@divisor,w
  1665  0151  1903               	skipnz
  1666  0152  2954               	goto	u451
  1667  0153  2955               	goto	u450
  1668  0154                     u451:
  1669  0154  29A2               	goto	l1447
  1670  0155                     u450:
  1671  0155                     l1429:
  1672  0155  01F7               	clrf	___lldiv@counter
  1673  0156  0AF7               	incf	___lldiv@counter,f
  1674  0157  2965               	goto	l1433
  1675  0158                     l1431:
  1676  0158  3001               	movlw	1
  1677  0159  00F2               	movwf	??___lldiv
  1678  015A                     u465:
  1679  015A  1003               	clrc
  1680  015B  0DA0               	rlf	___lldiv@divisor,f
  1681  015C  0DA1               	rlf	___lldiv@divisor+1,f
  1682  015D  0DA2               	rlf	___lldiv@divisor+2,f
  1683  015E  0DA3               	rlf	___lldiv@divisor+3,f
  1684  015F  0BF2               	decfsz	??___lldiv,f
  1685  0160  295A               	goto	u465
  1686  0161  3001               	movlw	1
  1687  0162  00F2               	movwf	??___lldiv
  1688  0163  0872               	movf	??___lldiv,w
  1689  0164  07F7               	addwf	___lldiv@counter,f
  1690  0165                     l1433:
  1691  0165  1FA3               	btfss	___lldiv@divisor+3,7
  1692  0166  2968               	goto	u471
  1693  0167  2969               	goto	u470
  1694  0168                     u471:
  1695  0168  2958               	goto	l1431
  1696  0169                     u470:
  1697  0169                     l1435:
  1698  0169  3001               	movlw	1
  1699  016A  00F2               	movwf	??___lldiv
  1700  016B                     u485:
  1701  016B  1003               	clrc
  1702  016C  0DF3               	rlf	___lldiv@quotient,f
  1703  016D  0DF4               	rlf	___lldiv@quotient+1,f
  1704  016E  0DF5               	rlf	___lldiv@quotient+2,f
  1705  016F  0DF6               	rlf	___lldiv@quotient+3,f
  1706  0170  0BF2               	decfsz	??___lldiv,f
  1707  0171  296B               	goto	u485
  1708  0172                     l1437:
  1709  0172  0823               	movf	___lldiv@divisor+3,w
  1710  0173  0227               	subwf	___lldiv@dividend+3,w
  1711  0174  1D03               	skipz
  1712  0175  2980               	goto	u495
  1713  0176  0822               	movf	___lldiv@divisor+2,w
  1714  0177  0226               	subwf	___lldiv@dividend+2,w
  1715  0178  1D03               	skipz
  1716  0179  2980               	goto	u495
  1717  017A  0821               	movf	___lldiv@divisor+1,w
  1718  017B  0225               	subwf	___lldiv@dividend+1,w
  1719  017C  1D03               	skipz
  1720  017D  2980               	goto	u495
  1721  017E  0820               	movf	___lldiv@divisor,w
  1722  017F  0224               	subwf	___lldiv@dividend,w
  1723  0180                     u495:
  1724  0180  1C03               	skipc
  1725  0181  2983               	goto	u491
  1726  0182  2984               	goto	u490
  1727  0183                     u491:
  1728  0183  2993               	goto	l1443
  1729  0184                     u490:
  1730  0184                     l1439:
  1731  0184  0820               	movf	___lldiv@divisor,w
  1732  0185  02A4               	subwf	___lldiv@dividend,f
  1733  0186  0821               	movf	___lldiv@divisor+1,w
  1734  0187  1C03               	skipc
  1735  0188  0F21               	incfsz	___lldiv@divisor+1,w
  1736  0189  02A5               	subwf	___lldiv@dividend+1,f
  1737  018A  0822               	movf	___lldiv@divisor+2,w
  1738  018B  1C03               	skipc
  1739  018C  0F22               	incfsz	___lldiv@divisor+2,w
  1740  018D  02A6               	subwf	___lldiv@dividend+2,f
  1741  018E  0823               	movf	___lldiv@divisor+3,w
  1742  018F  1C03               	skipc
  1743  0190  0F23               	incfsz	___lldiv@divisor+3,w
  1744  0191  02A7               	subwf	___lldiv@dividend+3,f
  1745  0192                     l1441:
  1746  0192  1473               	bsf	___lldiv@quotient,0
  1747  0193                     l1443:
  1748  0193  3001               	movlw	1
  1749  0194                     u505:
  1750  0194  1003               	clrc
  1751  0195  0CA3               	rrf	___lldiv@divisor+3,f
  1752  0196  0CA2               	rrf	___lldiv@divisor+2,f
  1753  0197  0CA1               	rrf	___lldiv@divisor+1,f
  1754  0198  0CA0               	rrf	___lldiv@divisor,f
  1755  0199  3EFF               	addlw	-1
  1756  019A  1D03               	skipz
  1757  019B  2994               	goto	u505
  1758  019C                     l1445:
  1759  019C  3001               	movlw	1
  1760  019D  02F7               	subwf	___lldiv@counter,f
  1761  019E  1D03               	btfss	3,2
  1762  019F  29A1               	goto	u511
  1763  01A0  29A2               	goto	u510
  1764  01A1                     u511:
  1765  01A1  2969               	goto	l1435
  1766  01A2                     u510:
  1767  01A2                     l1447:
  1768  01A2  0876               	movf	___lldiv@quotient+3,w
  1769  01A3  00A3               	movwf	?___lldiv+3
  1770  01A4  0875               	movf	___lldiv@quotient+2,w
  1771  01A5  00A2               	movwf	?___lldiv+2
  1772  01A6  0874               	movf	___lldiv@quotient+1,w
  1773  01A7  00A1               	movwf	?___lldiv+1
  1774  01A8  0873               	movf	___lldiv@quotient,w
  1775  01A9  00A0               	movwf	?___lldiv
  1776  01AA                     l387:
  1777  01AA  0008               	return
  1778  01AB                     __end_of___lldiv:
  1779                           
  1780                           	psect	text7
  1781  02DE                     __ptext7:	
  1782 ;; *************** function _Lcd_Write_String *****************
  1783 ;; Defined at:
  1784 ;;		line 69 in file "Digital2_toolbox.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;  a               1    wreg     PTR unsigned char 
  1787 ;;		 -> STR_7(4), STR_6(5), STR_5(5), STR_4(4), 
  1788 ;;		 -> STR_3(5), STR_2(4), STR_1(18), 
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;  a               1    7[COMMON] PTR unsigned char 
  1791 ;;		 -> STR_7(4), STR_6(5), STR_5(5), STR_4(4), 
  1792 ;;		 -> STR_3(5), STR_2(4), STR_1(18), 
  1793 ;;  i               2    5[COMMON] int 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1803 ;;      Params:         0       0       0       0       0
  1804 ;;      Locals:         3       0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0
  1806 ;;      Totals:         3       0       0       0       0
  1807 ;;Total ram usage:        3 bytes
  1808 ;; Hardware stack levels used: 1
  1809 ;; Hardware stack levels required when called: 2
  1810 ;; This function calls:
  1811 ;;		_Lcd_Write_Char
  1812 ;; This function is called by:
  1813 ;;		_main
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           
  1818                           ;psect for function _Lcd_Write_String
  1819  02DE                     _Lcd_Write_String:
  1820                           
  1821                           ;incstack = 0
  1822                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1823                           ;Lcd_Write_String@a stored from wreg
  1824  02DE  00F7               	movwf	Lcd_Write_String@a
  1825  02DF                     l1267:
  1826                           
  1827                           ;Digital2_toolbox.c: 70:     int i;;Digital2_toolbox.c: 71:     for (i = 0; a[i] != '\0'
      +                          ; i++){
  1828  02DF  01F5               	clrf	Lcd_Write_String@i
  1829  02E0  01F6               	clrf	Lcd_Write_String@i+1
  1830  02E1  2AF5               	goto	l1273
  1831  02E2                     l1269:
  1832                           
  1833                           ;Digital2_toolbox.c: 72:         Lcd_Write_Char(a[i]);
  1834  02E2  0875               	movf	Lcd_Write_String@i,w
  1835  02E3  0777               	addwf	Lcd_Write_String@a,w
  1836  02E4  0084               	movwf	4
  1837  02E5  120A  118A  22B4  120A  118A  	fcall	stringdir
  1838  02EA  120A  118A  2303  120A  118A  	fcall	_Lcd_Write_Char
  1839  02EF                     l1271:
  1840                           
  1841                           ;Digital2_toolbox.c: 73:     }
  1842  02EF  3001               	movlw	1
  1843  02F0  07F5               	addwf	Lcd_Write_String@i,f
  1844  02F1  1803               	skipnc
  1845  02F2  0AF6               	incf	Lcd_Write_String@i+1,f
  1846  02F3  3000               	movlw	0
  1847  02F4  07F6               	addwf	Lcd_Write_String@i+1,f
  1848  02F5                     l1273:
  1849  02F5  0875               	movf	Lcd_Write_String@i,w
  1850  02F6  0777               	addwf	Lcd_Write_String@a,w
  1851  02F7  0084               	movwf	4
  1852  02F8  120A  118A  22B4  120A  118A  	fcall	stringdir
  1853  02FD  3A00               	xorlw	0
  1854  02FE  1D03               	skipz
  1855  02FF  2B01               	goto	u361
  1856  0300  2B02               	goto	u360
  1857  0301                     u361:
  1858  0301  2AE2               	goto	l1269
  1859  0302                     u360:
  1860  0302                     l78:
  1861  0302  0008               	return
  1862  0303                     __end_of_Lcd_Write_String:
  1863                           
  1864                           	psect	text8
  1865  0303                     __ptext8:	
  1866 ;; *************** function _Lcd_Write_Char *****************
  1867 ;; Defined at:
  1868 ;;		line 60 in file "Digital2_toolbox.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  a               1    wreg     unsigned char 
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;  a               1    4[COMMON] unsigned char 
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  1    wreg      void 
  1875 ;; Registers used:
  1876 ;;		wreg
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1882 ;;      Params:         0       0       0       0       0
  1883 ;;      Locals:         1       0       0       0       0
  1884 ;;      Temps:          2       0       0       0       0
  1885 ;;      Totals:         3       0       0       0       0
  1886 ;;Total ram usage:        3 bytes
  1887 ;; Hardware stack levels used: 1
  1888 ;; Hardware stack levels required when called: 1
  1889 ;; This function calls:
  1890 ;;		Nothing
  1891 ;; This function is called by:
  1892 ;;		_Lcd_Write_String
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           
  1897                           ;psect for function _Lcd_Write_Char
  1898  0303                     _Lcd_Write_Char:
  1899                           
  1900                           ;incstack = 0
  1901                           ; Regs used in _Lcd_Write_Char: [wreg]
  1902                           ;Lcd_Write_Char@a stored from wreg
  1903  0303  00F4               	movwf	Lcd_Write_Char@a
  1904  0304                     l1235:
  1905                           
  1906                           ;Digital2_toolbox.c: 61:     PORTA = a;
  1907  0304  0874               	movf	Lcd_Write_Char@a,w
  1908  0305  1283               	bcf	3,5	;RP0=0, select bank0
  1909  0306  1303               	bcf	3,6	;RP1=0, select bank0
  1910  0307  0085               	movwf	5	;volatile
  1911  0308                     l1237:
  1912                           
  1913                           ;Digital2_toolbox.c: 62:     RE0 = 1;
  1914  0308  1409               	bsf	9,0	;volatile
  1915  0309                     l1239:
  1916                           
  1917                           ;Digital2_toolbox.c: 63:     RE1 = 1;
  1918  0309  1489               	bsf	9,1	;volatile
  1919                           
  1920                           ;Digital2_toolbox.c: 64:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1921  030A  3021               	movlw	33
  1922  030B  00F2               	movwf	??_Lcd_Write_Char
  1923  030C                     u707:
  1924  030C  0BF2               	decfsz	??_Lcd_Write_Char,f
  1925  030D  2B0C               	goto	u707
  1926  030E                     l1241:
  1927                           
  1928                           ;Digital2_toolbox.c: 65:     RE1 = 0;
  1929  030E  1283               	bcf	3,5	;RP0=0, select bank0
  1930  030F  1303               	bcf	3,6	;RP1=0, select bank0
  1931  0310  1089               	bcf	9,1	;volatile
  1932                           
  1933                           ;Digital2_toolbox.c: 66:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1934  0311  300D               	movlw	13
  1935  0312  00F3               	movwf	??_Lcd_Write_Char+1
  1936  0313  30FB               	movlw	251
  1937  0314  00F2               	movwf	??_Lcd_Write_Char
  1938  0315                     u717:
  1939  0315  0BF2               	decfsz	??_Lcd_Write_Char,f
  1940  0316  2B15               	goto	u717
  1941  0317  0BF3               	decfsz	??_Lcd_Write_Char+1,f
  1942  0318  2B15               	goto	u717
  1943  0319  2B1A               	nop2
  1944  031A                     l72:
  1945  031A  0008               	return
  1946  031B                     __end_of_Lcd_Write_Char:
  1947                           
  1948                           	psect	text9
  1949  0353                     __ptext9:	
  1950 ;; *************** function _I2C_Master_Write *****************
  1951 ;; Defined at:
  1952 ;;		line 220 in file "Digital2_toolbox.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  d               2    2[COMMON] unsigned int 
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;		None
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  1    wreg      void 
  1959 ;; Registers used:
  1960 ;;		wreg, status,2, status,0, pclath, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1966 ;;      Params:         2       0       0       0       0
  1967 ;;      Locals:         0       0       0       0       0
  1968 ;;      Temps:          0       0       0       0       0
  1969 ;;      Totals:         2       0       0       0       0
  1970 ;;Total ram usage:        2 bytes
  1971 ;; Hardware stack levels used: 1
  1972 ;; Hardware stack levels required when called: 2
  1973 ;; This function calls:
  1974 ;;		_I2C_Master_Wait
  1975 ;; This function is called by:
  1976 ;;		_main
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           
  1981                           ;psect for function _I2C_Master_Write
  1982  0353                     _I2C_Master_Write:
  1983  0353                     l1283:	
  1984                           ;incstack = 0
  1985                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1986                           
  1987                           
  1988                           ;Digital2_toolbox.c: 220: void I2C_Master_Write(unsigned d);Digital2_toolbox.c: 221: {;D
      +                          igital2_toolbox.c: 222:     I2C_Master_Wait();
  1989  0353  120A  118A  2346  120A  118A  	fcall	_I2C_Master_Wait
  1990  0358                     l1285:
  1991                           
  1992                           ;Digital2_toolbox.c: 223:     SSPBUF = d;
  1993  0358  0872               	movf	I2C_Master_Write@d,w
  1994  0359  1283               	bcf	3,5	;RP0=0, select bank0
  1995  035A  1303               	bcf	3,6	;RP1=0, select bank0
  1996  035B  0093               	movwf	19	;volatile
  1997  035C                     l139:
  1998  035C  0008               	return
  1999  035D                     __end_of_I2C_Master_Write:
  2000                           
  2001                           	psect	text10
  2002  035D                     __ptext10:	
  2003 ;; *************** function _I2C_Master_Stop *****************
  2004 ;; Defined at:
  2005 ;;		line 210 in file "Digital2_toolbox.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;		None
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;		None
  2010 ;; Return value:  Size  Location     Type
  2011 ;;                  1    wreg      void 
  2012 ;; Registers used:
  2013 ;;		wreg, status,2, status,0, pclath, cstack
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2019 ;;      Params:         0       0       0       0       0
  2020 ;;      Locals:         0       0       0       0       0
  2021 ;;      Temps:          0       0       0       0       0
  2022 ;;      Totals:         0       0       0       0       0
  2023 ;;Total ram usage:        0 bytes
  2024 ;; Hardware stack levels used: 1
  2025 ;; Hardware stack levels required when called: 2
  2026 ;; This function calls:
  2027 ;;		_I2C_Master_Wait
  2028 ;; This function is called by:
  2029 ;;		_main
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           
  2034                           ;psect for function _I2C_Master_Stop
  2035  035D                     _I2C_Master_Stop:
  2036  035D                     l1279:	
  2037                           ;incstack = 0
  2038                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2039                           
  2040                           
  2041                           ;Digital2_toolbox.c: 212:     I2C_Master_Wait();
  2042  035D  120A  118A  2346  120A  118A  	fcall	_I2C_Master_Wait
  2043  0362                     l1281:
  2044                           
  2045                           ;Digital2_toolbox.c: 213:     SSPCON2bits.PEN = 1;
  2046  0362  1683               	bsf	3,5	;RP0=1, select bank1
  2047  0363  1303               	bcf	3,6	;RP1=0, select bank1
  2048  0364  1511               	bsf	17,2	;volatile
  2049  0365                     l136:
  2050  0365  0008               	return
  2051  0366                     __end_of_I2C_Master_Stop:
  2052                           
  2053                           	psect	text11
  2054  0366                     __ptext11:	
  2055 ;; *************** function _I2C_Master_Start *****************
  2056 ;; Defined at:
  2057 ;;		line 194 in file "Digital2_toolbox.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;		None
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;		None
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		wreg, status,2, status,0, pclath, cstack
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2071 ;;      Params:         0       0       0       0       0
  2072 ;;      Locals:         0       0       0       0       0
  2073 ;;      Temps:          0       0       0       0       0
  2074 ;;      Totals:         0       0       0       0       0
  2075 ;;Total ram usage:        0 bytes
  2076 ;; Hardware stack levels used: 1
  2077 ;; Hardware stack levels required when called: 2
  2078 ;; This function calls:
  2079 ;;		_I2C_Master_Wait
  2080 ;; This function is called by:
  2081 ;;		_main
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           
  2086                           ;psect for function _I2C_Master_Start
  2087  0366                     _I2C_Master_Start:
  2088  0366                     l1275:	
  2089                           ;incstack = 0
  2090                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2091                           
  2092                           
  2093                           ;Digital2_toolbox.c: 196:     I2C_Master_Wait();
  2094  0366  120A  118A  2346  120A  118A  	fcall	_I2C_Master_Wait
  2095  036B                     l1277:
  2096                           
  2097                           ;Digital2_toolbox.c: 197:     SSPCON2bits.SEN = 1;
  2098  036B  1683               	bsf	3,5	;RP0=1, select bank1
  2099  036C  1303               	bcf	3,6	;RP1=0, select bank1
  2100  036D  1411               	bsf	17,0	;volatile
  2101  036E                     l130:
  2102  036E  0008               	return
  2103  036F                     __end_of_I2C_Master_Start:
  2104                           
  2105                           	psect	text12
  2106  0286                     __ptext12:	
  2107 ;; *************** function _I2C_Master_Read *****************
  2108 ;; Defined at:
  2109 ;;		line 229 in file "Digital2_toolbox.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  a               2    2[COMMON] unsigned short 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  temp            2    6[COMMON] unsigned short 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  2    2[COMMON] unsigned short 
  2116 ;; Registers used:
  2117 ;;		wreg, status,2, status,0, pclath, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2123 ;;      Params:         2       0       0       0       0
  2124 ;;      Locals:         2       0       0       0       0
  2125 ;;      Temps:          2       0       0       0       0
  2126 ;;      Totals:         6       0       0       0       0
  2127 ;;Total ram usage:        6 bytes
  2128 ;; Hardware stack levels used: 1
  2129 ;; Hardware stack levels required when called: 2
  2130 ;; This function calls:
  2131 ;;		_I2C_Master_Wait
  2132 ;; This function is called by:
  2133 ;;		_main
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           
  2138                           ;psect for function _I2C_Master_Read
  2139  0286                     _I2C_Master_Read:
  2140  0286                     l1287:	
  2141                           ;incstack = 0
  2142                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2143                           
  2144                           
  2145                           ;Digital2_toolbox.c: 229: unsigned short I2C_Master_Read(unsigned short a);Digital2_tool
      +                          box.c: 230: {;Digital2_toolbox.c: 231:     unsigned short temp;;Digital2_toolbox.c: 232:
      +                               I2C_Master_Wait();
  2146  0286  120A  118A  2346  120A  118A  	fcall	_I2C_Master_Wait
  2147  028B                     l1289:
  2148                           
  2149                           ;Digital2_toolbox.c: 233:     SSPCON2bits.RCEN = 1;
  2150  028B  1683               	bsf	3,5	;RP0=1, select bank1
  2151  028C  1303               	bcf	3,6	;RP1=0, select bank1
  2152  028D  1591               	bsf	17,3	;volatile
  2153                           
  2154                           ;Digital2_toolbox.c: 234:     I2C_Master_Wait();
  2155  028E  120A  118A  2346  120A  118A  	fcall	_I2C_Master_Wait
  2156  0293                     l1291:
  2157                           
  2158                           ;Digital2_toolbox.c: 235:     temp = SSPBUF;
  2159  0293  1283               	bcf	3,5	;RP0=0, select bank0
  2160  0294  1303               	bcf	3,6	;RP1=0, select bank0
  2161  0295  0813               	movf	19,w	;volatile
  2162  0296  00F4               	movwf	??_I2C_Master_Read
  2163  0297  01F5               	clrf	??_I2C_Master_Read+1
  2164  0298  0874               	movf	??_I2C_Master_Read,w
  2165  0299  00F6               	movwf	I2C_Master_Read@temp
  2166  029A  0875               	movf	??_I2C_Master_Read+1,w
  2167  029B  00F7               	movwf	I2C_Master_Read@temp+1
  2168  029C                     l1293:
  2169                           
  2170                           ;Digital2_toolbox.c: 236:     I2C_Master_Wait();
  2171  029C  120A  118A  2346  120A  118A  	fcall	_I2C_Master_Wait
  2172  02A1                     l1295:
  2173                           
  2174                           ;Digital2_toolbox.c: 237:     if(a == 1){
  2175  02A1  0372               	decf	I2C_Master_Read@a,w
  2176  02A2  0473               	iorwf	I2C_Master_Read@a+1,w
  2177  02A3  1D03               	btfss	3,2
  2178  02A4  2AA6               	goto	u371
  2179  02A5  2AA7               	goto	u370
  2180  02A6                     u371:
  2181  02A6  2AAB               	goto	l142
  2182  02A7                     u370:
  2183  02A7                     l1297:
  2184                           
  2185                           ;Digital2_toolbox.c: 238:         SSPCON2bits.ACKDT = 0;
  2186  02A7  1683               	bsf	3,5	;RP0=1, select bank1
  2187  02A8  1303               	bcf	3,6	;RP1=0, select bank1
  2188  02A9  1291               	bcf	17,5	;volatile
  2189                           
  2190                           ;Digital2_toolbox.c: 239:     }else{
  2191  02AA  2AAE               	goto	l143
  2192  02AB                     l142:
  2193                           
  2194                           ;Digital2_toolbox.c: 240:         SSPCON2bits.ACKDT = 1;
  2195  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  2196  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  2197  02AD  1691               	bsf	17,5	;volatile
  2198  02AE                     l143:	
  2199                           ;Digital2_toolbox.c: 241:     }
  2200                           
  2201                           
  2202                           ;Digital2_toolbox.c: 242:     SSPCON2bits.ACKEN = 1;
  2203  02AE  1611               	bsf	17,4	;volatile
  2204  02AF                     l1299:
  2205                           
  2206                           ;Digital2_toolbox.c: 243:     return temp;
  2207  02AF  0877               	movf	I2C_Master_Read@temp+1,w
  2208  02B0  00F3               	movwf	?_I2C_Master_Read+1
  2209  02B1  0876               	movf	I2C_Master_Read@temp,w
  2210  02B2  00F2               	movwf	?_I2C_Master_Read
  2211  02B3                     l144:
  2212  02B3  0008               	return
  2213  02B4                     __end_of_I2C_Master_Read:
  2214                           
  2215                           	psect	text13
  2216  0346                     __ptext13:	
  2217 ;; *************** function _I2C_Master_Wait *****************
  2218 ;; Defined at:
  2219 ;;		line 187 in file "Digital2_toolbox.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;		None
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;		None
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      void 
  2226 ;; Registers used:
  2227 ;;		wreg, status,2
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2233 ;;      Params:         0       0       0       0       0
  2234 ;;      Locals:         0       0       0       0       0
  2235 ;;      Temps:          0       0       0       0       0
  2236 ;;      Totals:         0       0       0       0       0
  2237 ;;Total ram usage:        0 bytes
  2238 ;; Hardware stack levels used: 1
  2239 ;; Hardware stack levels required when called: 1
  2240 ;; This function calls:
  2241 ;;		Nothing
  2242 ;; This function is called by:
  2243 ;;		_I2C_Master_Start
  2244 ;;		_I2C_Master_Stop
  2245 ;;		_I2C_Master_Write
  2246 ;;		_I2C_Master_Read
  2247 ;;		_I2C_Master_RepeatedStart
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           
  2252                           ;psect for function _I2C_Master_Wait
  2253  0346                     _I2C_Master_Wait:
  2254  0346                     l1263:	
  2255                           ;incstack = 0
  2256                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2257                           
  2258  0346                     l124:	
  2259                           ;Digital2_toolbox.c: 189:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2260                           
  2261  0346  1683               	bsf	3,5	;RP0=1, select bank1
  2262  0347  1303               	bcf	3,6	;RP1=0, select bank1
  2263  0348  1914               	btfsc	20,2	;volatile
  2264  0349  2B4B               	goto	u341
  2265  034A  2B4C               	goto	u340
  2266  034B                     u341:
  2267  034B  2B46               	goto	l124
  2268  034C                     u340:
  2269  034C                     l1265:
  2270  034C  0811               	movf	17,w	;volatile
  2271  034D  391F               	andlw	31
  2272  034E  1D03               	btfss	3,2
  2273  034F  2B51               	goto	u351
  2274  0350  2B52               	goto	u350
  2275  0351                     u351:
  2276  0351  2B46               	goto	l124
  2277  0352                     u350:
  2278  0352                     l127:
  2279  0352  0008               	return
  2280  0353                     __end_of_I2C_Master_Wait:
  2281                           
  2282                           	psect	text14
  2283  036F                     __ptext14:	
  2284 ;; *************** function _isr *****************
  2285 ;; Defined at:
  2286 ;;		line 194 in file "main.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;		None
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;		None
  2291 ;; Return value:  Size  Location     Type
  2292 ;;                  1    wreg      void 
  2293 ;; Registers used:
  2294 ;;		None
  2295 ;; Tracked objects:
  2296 ;;		On entry : 0/0
  2297 ;;		On exit  : 0/0
  2298 ;;		Unchanged: 0/0
  2299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2300 ;;      Params:         0       0       0       0       0
  2301 ;;      Locals:         0       0       0       0       0
  2302 ;;      Temps:          2       0       0       0       0
  2303 ;;      Totals:         2       0       0       0       0
  2304 ;;Total ram usage:        2 bytes
  2305 ;; Hardware stack levels used: 1
  2306 ;; This function calls:
  2307 ;;		Nothing
  2308 ;; This function is called by:
  2309 ;;		Interrupt level 1
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           
  2314                           ;psect for function _isr
  2315  036F                     _isr:
  2316  036F                     i1l265:
  2317  036F  0871               	movf	??_isr+1,w
  2318  0370  008A               	movwf	10
  2319  0371  0E70               	swapf	??_isr,w
  2320  0372  0083               	movwf	3
  2321  0373  0EFE               	swapf	btemp,f
  2322  0374  0E7E               	swapf	btemp,w
  2323  0375  0009               	retfie
  2324  0376                     __end_of_isr:
  2325  007E                     btemp	set	126	;btemp
  2326  007E                     wtemp0	set	126
  2327                           
  2328                           	psect	intentry
  2329  0004                     __pintentry:	
  2330                           ;incstack = 0
  2331                           ; Regs used in _isr: []
  2332                           
  2333  0004                     interrupt_function:
  2334  007E                     saved_w	set	btemp
  2335  0004  00FE               	movwf	btemp
  2336  0005  0E03               	swapf	3,w
  2337  0006  00F0               	movwf	??_isr
  2338  0007  080A               	movf	10,w
  2339  0008  00F1               	movwf	??_isr+1
  2340  0009  120A  118A  2B6F   	ljmp	_isr
  2341                           
  2342                           	psect	config
  2343                           
  2344                           ;Config register CONFIG1 @ 0x2007
  2345                           ;	Oscillator Selection bits
  2346                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2347                           ;	Watchdog Timer Enable bit
  2348                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2349                           ;	Power-up Timer Enable bit
  2350                           ;	PWRTE = OFF, PWRT disabled
  2351                           ;	RE3/MCLR pin function select bit
  2352                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2353                           ;	Code Protection bit
  2354                           ;	CP = OFF, Program memory code protection is disabled
  2355                           ;	Data Code Protection bit
  2356                           ;	CPD = OFF, Data memory code protection is disabled
  2357                           ;	Brown Out Reset Selection bits
  2358                           ;	BOREN = OFF, BOR disabled
  2359                           ;	Internal External Switchover bit
  2360                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2361                           ;	Fail-Safe Clock Monitor Enabled bit
  2362                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2363                           ;	Low Voltage Programming Enable bit
  2364                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2365                           ;	In-Circuit Debugger Mode bit
  2366                           ;	DEBUG = 0x1, unprogrammed default
  2367  2007                     	org	8199
  2368  2007  20D4               	dw	8404
  2369                           
  2370                           ;Config register CONFIG2 @ 0x2008
  2371                           ;	Brown-out Reset Selection bit
  2372                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2373                           ;	Flash Program Memory Self Write Enable bits
  2374                           ;	WRT = OFF, Write protection off
  2375  2008                     	org	8200
  2376  2008  3FFF               	dw	16383

Data Sizes:
    Strings     36
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     19      27
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 18
		 -> STR_7(CODE[4]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[4]), 
		 -> STR_3(CODE[5]), STR_2(CODE[4]), STR_1(CODE[18]), 


Critical Paths under _main in COMMON

    _main->_I2C_Master_Read
    _main->_Lcd_Write_String
    _Lcd_Init->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _Lcd_Write_String->_Lcd_Write_Char

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1300
                                             16 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _Lcd_Cmd
                   _Lcd_Write_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     564
                    _I2C_Master_Init
                           _Lcd_Init
                          _UART_Init
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      22
                                              5 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              8 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     343
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     174
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
     _UART_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      26       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      1B       5       33.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      26      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Aug 30 13:40:46 2021

                        pc 0002                _SSPSTATbits 0094                         l63 0345  
                       l72 031A                         l81 0331                         l69 0202  
                       l78 0302                         _cL 0078                         _dL 0039  
                       _mL 0079                         _uL 0038                         fsr 0004  
                      l121 0285                        l130 036E                        l124 0346  
                      l142 02AB                        l127 0352                        l143 02AE  
                      l144 02B3                        l136 0365                        l139 035C  
                      l260 024B                        l247 0043                        l257 0239  
                      l259 023D                        l387 01AA                        _GIE 005F  
                      _RD0 0040                        _RD1 0041                        _RE0 0048  
                      _RE1 0049                        u340 034C                        u341 034B  
                      u350 0352                        u510 01A2                        _PR2 0092  
                      u351 0351                        u511 01A1                        u360 0302  
                      u520 0263                        u361 0301                        u505 0194  
                      u370 02A7                        u450 0155                        u530 023D  
                      u371 02A6                        u451 0154                        u531 023C  
                      u540 00B6                        u525 025E                        u541 00B5  
                      u470 0169                        u550 00CB                        u471 0168  
                      u551 00CA                        u607 006C                        u560 00D0  
                      u465 015A                        u561 00CF                        u617 009C  
                      u490 0184                        u570 00F6                        u707 030C  
                      u491 0183                        u571 00F5                        u627 00E8  
                      u580 00FD                        u717 0315                        u485 016B  
                      u637 011B                        u581 00FC                        u590 0102  
                      u495 0180                        u647 012B                        u591 0101  
                      u657 01B2                        u667 01C1                        u677 01CD  
                      u687 01FD                        u697 033D                        _isr 036F  
                      fsr0 0004                       l1211 01B7                       l1221 01D5  
                     l1213 01BD                       l1231 01F3                       l1223 01DB  
                     l1215 01C5                       l1207 01AB                       l1241 030E  
                     l1233 01F9                       l1225 01E1                       l1217 01CB  
                     l1209 01AE                       l1235 0304                       l1227 01E7  
                     l1219 01CF                       l1243 031B                       l1237 0308  
                     l1181 0342                       l1229 01ED                       l1245 0329  
                     l1501 0025                       l1263 0346                       l1239 0309  
                     l1271 02EF                       l1431 0158                       l1175 0333  
                     l1247 032C                       l1511 0073                       l1503 002B  
                     l1265 034C                       l1281 0362                       l1273 02F5  
                     l1441 0192                       l1433 0165                       l1177 0336  
                     l1249 032E                       l1521 00A3                       l1513 0078  
                     l1505 0037                       l1291 0293                       l1275 0366  
                     l1283 0353                       l1267 02DF                       l1443 0193  
                     l1435 0169                       l1427 0143                       l1451 024C  
                     l1179 0338                       l1531 00B8                       l1523 00AA  
                     l1515 0081                       l1507 003D                       l1293 029C  
                     l1277 036B                       l1285 0358                       l1269 02E2  
                     l1445 019C                       l1437 0172                       l1429 0155  
                     l1461 0284                       l1453 0250                       l1541 00D6  
                     l1533 00BE                       l1525 00AF                       l1517 008F  
                     l1509 0064                       l1295 02A1                       l1287 0286  
                     l1279 035D                       l1439 0184                       l1447 01A2  
                     l1455 0253                       l1471 020F                       l1463 0203  
                     l1543 00DC                       l1551 00F1                       l1535 00C4  
                     l1527 00B1                       l1519 0094                       l1297 02A7  
                     l1289 028B                       l1457 0282                       l1481 022A  
                     l1473 0210                       l1465 020B                       l1561 0103  
                     l1553 00F6                       l1545 00DF                       l1537 00CB  
                     l1529 00B6                       l1299 02AF                       l1459 0283  
                     l1491 0235                       l1483 022D                       l1475 0211  
                     l1467 020D                       l1571 0122                       l1563 0109  
                     l1555 00F8                       l1547 00E0                       l1539 00D0  
                     l1493 0236                       l1485 022F                       l1477 0216  
                     l1469 020E                       l1573 0125                       l1565 010F  
                     l1557 00FD                       l1549 00EE                       l1495 0238  
                     l1487 0232                       l1479 021B                       l1575 012F  
                     l1567 0112                       l1559 0102                       l1497 0240  
                     l1489 0233                       l1577 0133                       l1569 0113  
                     l1579 0139                       l1499 0020                       ?_isr 0070  
                     STR_1 02BA                       STR_2 02DA                       STR_3 02CC  
                     STR_4 02D6                       STR_5 02D1                       STR_6 02CC  
                     STR_7 02DA                       _PEIE 005E          ?_Lcd_Write_String 0070  
                     _door 0035                       _main 0020                       _lock 0036  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0075  
          __end_of_Lcd_Cmd 0346                      ??_isr 0070           ?_I2C_Master_Init 0028  
         ?_I2C_Master_Read 0072           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070                      _BRG16 0C3B                      _ANSEL 0188  
          __end_of___lldiv 01AB                      _T2CON 0012                      i1l265 036F  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063                      _TXREG 0019         __size_of_UART_Init 0017  
                    _light 003A                      _setup 0203                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 0203  
          __initialization 000F               __end_of_main 0143                     ??_main 0030  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0072         ??_I2C_Master_Start 0072  
       ??_I2C_Master_Write 0074                     _CCP1M2 00BA                     _CCP1M3 00BB  
                   _ADRESH 001E                     _ADRESL 009E                     _CCPR1L 0015  
                   ?_setup 0070                     _ANSELH 0189                  ??_Lcd_Cmd 0072  
                   _TMR2IF 0061                     _SPBRGH 009A    __size_of_Lcd_Write_Char 0018  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _TRISC5 043D                     _SSPCON 0014                     _SSPBUF 0013  
        __end_of_UART_Init 0332                  ??___lldiv 0072                     saved_w 007E  
  __end_of__initialization 001C              _light_compare 007A             __pcstackCOMMON 0070  
            __end_of_setup 024C                  ?_Lcd_Init 0070                    ??_setup 0078  
               __pbssBANK0 0033                 __pmaintext 0020                 __pintentry 0004  
__size_of_Lcd_Write_String 0025                 ??_Lcd_Init 0075                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 02B4             _Lcd_Write_Char 0303  
                  _Lcd_Cmd 0332                 _in_counter 0033                    ___lldiv 0143  
                  __ptext1 0203                    __ptext2 031B                    __ptext3 01AB  
                  __ptext4 0332                    __ptext5 024C                    __ptext6 0143  
                  __ptext7 02DE                    __ptext8 0303                    __ptext9 0353  
                _T2CONbits 0012               __size_of_isr 0007   __size_of_I2C_Master_Init 003A  
 __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
   __end_of_Lcd_Write_Char 031B       end_of_initialization 001C  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0020            ___lldiv@counter 0077  
                _RCSTAbits 0018           I2C_Master_Init@c 0028           I2C_Master_Read@a 0072  
                _UART_Init 031B                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0077          Lcd_Write_String@i 0075                  _TXSTAbits 0098  
         _Lcd_Write_String 02DE                 ?_UART_Init 0070        start_initialization 000F  
              __end_of_isr 0376          __size_of_Lcd_Init 0058          ??_I2C_Master_Init 002C  
        ??_I2C_Master_Read 0074          ??_I2C_Master_Wait 0072          ??_I2C_Master_Stop 0072  
          Lcd_Write_Char@a 0074                __pbssCOMMON 0078                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Lcd_Cmd 0070           _I2C_Master_Start 0366  
         _I2C_Master_Write 0353                   ?___lldiv 0020                ??_UART_Init 0072  
                __pstrings 02B4                  _in_sensor 0034             __size_of_setup 0049  
        interrupt_function 0004                   Lcd_Cmd@a 0074                __stringbase 02B9  
         ??_Lcd_Write_Char 0072                   _Lcd_Init 01AB        I2C_Master_Read@temp 0076  
 __end_of_Lcd_Write_String 0303           __size_of_Lcd_Cmd 0014           __size_of___lldiv 0068  
       __end_of__stringtab 02BA            _I2C_Master_Init 024C            _I2C_Master_Read 0286  
          _I2C_Master_Wait 0346            _I2C_Master_Stop 035D                   __ptext10 035D  
                 __ptext11 0366                   __ptext12 0286                   __ptext13 0346  
                 __ptext14 036F              __size_of_main 0123                   _out_flag 0037  
 __end_of_I2C_Master_Start 036F   __end_of_I2C_Master_Write 035D                   intlevel1 0000  
         ___lldiv@dividend 0024                  stringcode 02B4    __end_of_I2C_Master_Init 0286  
  __end_of_I2C_Master_Read 02B4    __end_of_I2C_Master_Wait 0353    __end_of_I2C_Master_Stop 0366  
         ___lldiv@quotient 0073          I2C_Master_Write@d 0072                   stringdir 02B4  
                 stringtab 02B4                _SSPCON2bits 0091  
