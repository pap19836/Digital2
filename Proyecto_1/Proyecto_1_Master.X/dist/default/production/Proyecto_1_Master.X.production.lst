

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Sep 02 23:06:45 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  000E                     _TMR1	set	14
   299  0009                     _PORTE	set	9
   300  0008                     _PORTD	set	8
   301  0007                     _PORTC	set	7
   302  0006                     _PORTB	set	6
   303  0012                     _T2CONbits	set	18
   304  0012                     _T2CON	set	18
   305  0010                     _T1CONbits	set	16
   306  0015                     _CCPR1L	set	21
   307  0013                     _SSPBUF	set	19
   308  0014                     _SSPCON	set	20
   309  0019                     _TXREG	set	25
   310  0018                     _RCSTAbits	set	24
   311  0005                     _PORTA	set	5
   312  001E                     _ADRESH	set	30
   313  0061                     _TMR2IF	set	97
   314  00BA                     _CCP1M2	set	186
   315  00BB                     _CCP1M3	set	187
   316  0060                     _TMR1IF	set	96
   317  0042                     _RD2	set	66
   318  0080                     _TMR1ON	set	128
   319  0041                     _RD1	set	65
   320  0040                     _RD0	set	64
   321  0063                     _SSPIF	set	99
   322  005E                     _PEIE	set	94
   323  005F                     _GIE	set	95
   324  0049                     _RE1	set	73
   325  0048                     _RE0	set	72
   326  0092                     _PR2	set	146
   327  0089                     _TRISE	set	137
   328  0088                     _TRISD	set	136
   329  0087                     _TRISC	set	135
   330  0086                     _TRISB	set	134
   331  0085                     _TRISA	set	133
   332  0091                     _SSPCON2bits	set	145
   333  0093                     _SSPADD	set	147
   334  0091                     _SSPCON2	set	145
   335  0094                     _SSPSTATbits	set	148
   336  0094                     _SSPSTAT	set	148
   337  0099                     _SPBRG	set	153
   338  009A                     _SPBRGH	set	154
   339  0098                     _TXSTAbits	set	152
   340  0087                     _TRISCbits	set	135
   341  009E                     _ADRESL	set	158
   342  0460                     _TMR1IE	set	1120
   343  0463                     _SSPIE	set	1123
   344  043C                     _TRISC4	set	1084
   345  043B                     _TRISC3	set	1083
   346  043D                     _TRISC5	set	1085
   347  0189                     _ANSELH	set	393
   348  0188                     _ANSEL	set	392
   349  0C3B                     _BRG16	set	3131
   350                           
   351                           	psect	strings
   352  041A                     __pstrings:
   353  041A                     stringtab:
   354  041A                     __stringtab:
   355  041A                     stringcode:	
   356                           ;	String table - string pointers are 1 byte each
   357                           
   358  041A                     stringdir:
   359  041A  3004               	movlw	high stringdir
   360  041B  008A               	movwf	10
   361  041C  0804               	movf	4,w
   362  041D  0A84               	incf	4,f
   363  041E  0782               	addwf	2,f
   364  041F                     __stringbase:
   365  041F  3400               	retlw	0
   366  0420                     __end_of__stringtab:
   367  0420                     STR_1:
   368  0420  3420               	retlw	32	;' '
   369  0421  344C               	retlw	76	;'L'
   370  0422  346F               	retlw	111	;'o'
   371  0423  3463               	retlw	99	;'c'
   372  0424  346B               	retlw	107	;'k'
   373  0425  3420               	retlw	32	;' '
   374  0426  3444               	retlw	68	;'D'
   375  0427  346F               	retlw	111	;'o'
   376  0428  346F               	retlw	111	;'o'
   377  0429  3472               	retlw	114	;'r'
   378  042A  3420               	retlw	32	;' '
   379  042B  344C               	retlw	76	;'L'
   380  042C  3469               	retlw	105	;'i'
   381  042D  3467               	retlw	103	;'g'
   382  042E  3468               	retlw	104	;'h'
   383  042F  3474               	retlw	116	;'t'
   384  0430  3473               	retlw	115	;'s'
   385  0431  3400               	retlw	0
   386  0432                     STR_3:
   387  0432  3420               	retlw	32	;' '
   388  0433  344E               	retlw	78	;'N'
   389  0434  344F               	retlw	79	;'O'
   390  0435  3420               	retlw	32	;' '
   391  0436  3400               	retlw	0
   392  0437                     STR_5:
   393  0437  344F               	retlw	79	;'O'
   394  0438  3450               	retlw	80	;'P'
   395  0439  3445               	retlw	69	;'E'
   396  043A  344E               	retlw	78	;'N'
   397  043B  3400               	retlw	0
   398  043C                     STR_4:
   399  043C  344F               	retlw	79	;'O'
   400  043D  3446               	retlw	70	;'F'
   401  043E  3446               	retlw	70	;'F'
   402  043F  3400               	retlw	0
   403  0440                     STR_2:
   404  0440  3420               	retlw	32	;' '
   405  0441  344F               	retlw	79	;'O'
   406  0442  344E               	retlw	78	;'N'
   407  0443  3400               	retlw	0
   408  0432                     
   409                           	psect	cinit
   410  000F                     start_initialization:	
   411                           ; #config settings
   412                           
   413  000F                     __initialization:
   414                           
   415                           ; Clear objects allocated to COMMON
   416  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   417  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   418  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   419                           
   420                           ; Clear objects allocated to BANK0
   421  0012  1283               	bcf	3,5	;RP0=0, select bank0
   422  0013  1303               	bcf	3,6	;RP1=0, select bank0
   423  0014  01B5               	clrf	__pbssBANK0& (0+127)
   424  0015  01B6               	clrf	(__pbssBANK0+1)& (0+127)
   425  0016  01B7               	clrf	(__pbssBANK0+2)& (0+127)
   426  0017  01B8               	clrf	(__pbssBANK0+3)& (0+127)
   427  0018  01B9               	clrf	(__pbssBANK0+4)& (0+127)
   428  0019  01BA               	clrf	(__pbssBANK0+5)& (0+127)
   429  001A  01BB               	clrf	(__pbssBANK0+6)& (0+127)
   430  001B  01BC               	clrf	(__pbssBANK0+7)& (0+127)
   431  001C  01BD               	clrf	(__pbssBANK0+8)& (0+127)
   432  001D  01BE               	clrf	(__pbssBANK0+9)& (0+127)
   433  001E  01BF               	clrf	(__pbssBANK0+10)& (0+127)
   434  001F  01C0               	clrf	(__pbssBANK0+11)& (0+127)
   435  0020  01C1               	clrf	(__pbssBANK0+12)& (0+127)
   436  0021  01C2               	clrf	(__pbssBANK0+13)& (0+127)
   437  0022  01C3               	clrf	(__pbssBANK0+14)& (0+127)
   438  0023                     end_of_initialization:	
   439                           ;End of C runtime variable initialization code
   440                           
   441  0023                     __end_of__initialization:
   442  0023  0183               	clrf	3
   443  0024  120A  118A  2827   	ljmp	_main	;jump to C main() function
   444                           
   445                           	psect	bssCOMMON
   446  0078                     __pbssCOMMON:
   447  0078                     _cL:
   448  0078                     	ds	1
   449  0079                     _mL:
   450  0079                     	ds	1
   451  007A                     _light_compare:
   452  007A                     	ds	1
   453                           
   454                           	psect	bssBANK0
   455  0035                     __pbssBANK0:
   456  0035                     _light:
   457  0035                     	ds	2
   458  0037                     _Adafruit_light:
   459  0037                     	ds	1
   460  0038                     _close:
   461  0038                     	ds	1
   462  0039                     _time:
   463  0039                     	ds	1
   464  003A                     _in_sensor:
   465  003A                     	ds	1
   466  003B                     _keep_door_open:
   467  003B                     	ds	1
   468  003C                     _door:
   469  003C                     	ds	1
   470  003D                     _keep_lock_off:
   471  003D                     	ds	1
   472  003E                     _lock:
   473  003E                     	ds	1
   474  003F                     _out_flag:
   475  003F                     	ds	1
   476  0040                     _uL:
   477  0040                     	ds	1
   478  0041                     _dL:
   479  0041                     	ds	1
   480  0042                     _light_high:
   481  0042                     	ds	1
   482  0043                     _light_low:
   483  0043                     	ds	1
   484                           
   485                           	psect	cstackCOMMON
   486  0070                     __pcstackCOMMON:
   487  0070                     ?_setup:
   488  0070                     ?_Lcd_Cmd:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?_Lcd_Init:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?_Lcd_Write_Char:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ?_Lcd_Write_String:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_UART_Init:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?_UART_Write_Char:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_I2C_Master_Wait:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_I2C_Master_Start:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?_I2C_Master_Stop:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_main:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_isr:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ??_isr:	
   522                           ; 1 bytes @ 0x0
   523                           
   524                           
   525                           ; 1 bytes @ 0x0
   526  0070                     	ds	3
   527  0073                     ??_Lcd_Cmd:
   528  0073                     ??_Lcd_Write_Char:	
   529                           ; 1 bytes @ 0x3
   530                           
   531  0073                     ??_UART_Init:	
   532                           ; 1 bytes @ 0x3
   533                           
   534  0073                     ??_UART_Write_Char:	
   535                           ; 1 bytes @ 0x3
   536                           
   537  0073                     ??_I2C_Master_Wait:	
   538                           ; 1 bytes @ 0x3
   539                           
   540  0073                     ??_I2C_Master_Start:	
   541                           ; 1 bytes @ 0x3
   542                           
   543  0073                     ??_I2C_Master_Stop:	
   544                           ; 1 bytes @ 0x3
   545                           
   546  0073                     ?_I2C_Master_Write:	
   547                           ; 1 bytes @ 0x3
   548                           
   549  0073                     ??___lldiv:	
   550                           ; 1 bytes @ 0x3
   551                           
   552  0073                     ?_I2C_Master_Read:	
   553                           ; 1 bytes @ 0x3
   554                           
   555  0073                     UART_Write_Char@character:	
   556                           ; 2 bytes @ 0x3
   557                           
   558  0073                     I2C_Master_Write@d:	
   559                           ; 1 bytes @ 0x3
   560                           
   561  0073                     I2C_Master_Read@a:	
   562                           ; 2 bytes @ 0x3
   563                           
   564                           
   565                           ; 2 bytes @ 0x3
   566  0073                     	ds	1
   567  0074                     ??_I2C_Master_Init:
   568                           
   569                           ; 1 bytes @ 0x4
   570  0074                     	ds	1
   571  0075                     ??_I2C_Master_Write:
   572  0075                     ??_I2C_Master_Read:	
   573                           ; 1 bytes @ 0x5
   574                           
   575  0075                     Lcd_Cmd@a:	
   576                           ; 1 bytes @ 0x5
   577                           
   578  0075                     Lcd_Write_Char@a:	
   579                           ; 1 bytes @ 0x5
   580                           
   581                           
   582                           ; 1 bytes @ 0x5
   583  0075                     	ds	1
   584  0076                     ??_Lcd_Init:
   585  0076                     ??_Lcd_Write_String:	
   586                           ; 1 bytes @ 0x6
   587                           
   588                           
   589                           ; 1 bytes @ 0x6
   590  0076                     	ds	2
   591  0078                     ??_setup:
   592                           
   593                           	psect	cstackBANK0
   594  0020                     __pcstackBANK0:	
   595                           ; 1 bytes @ 0x8
   596                           
   597  0020                     ?___lldiv:
   598  0020                     Lcd_Write_String@i:	
   599                           ; 4 bytes @ 0x0
   600                           
   601  0020                     I2C_Master_Read@temp:	
   602                           ; 2 bytes @ 0x0
   603                           
   604  0020                     ___lldiv@divisor:	
   605                           ; 2 bytes @ 0x0
   606                           
   607                           
   608                           ; 4 bytes @ 0x0
   609  0020                     	ds	2
   610  0022                     Lcd_Write_String@a:
   611                           
   612                           ; 1 bytes @ 0x2
   613  0022                     	ds	2
   614  0024                     ___lldiv@dividend:
   615                           
   616                           ; 4 bytes @ 0x4
   617  0024                     	ds	4
   618  0028                     ___lldiv@quotient:
   619                           
   620                           ; 4 bytes @ 0x8
   621  0028                     	ds	4
   622  002C                     ___lldiv@counter:
   623                           
   624                           ; 1 bytes @ 0xC
   625  002C                     	ds	1
   626  002D                     ?_I2C_Master_Init:
   627  002D                     I2C_Master_Init@c:	
   628                           ; 1 bytes @ 0xD
   629                           
   630                           
   631                           ; 4 bytes @ 0xD
   632  002D                     	ds	4
   633  0031                     ??_main:
   634                           
   635                           ; 1 bytes @ 0x11
   636  0031                     	ds	4
   637                           
   638                           	psect	maintext
   639  0027                     __pmaintext:	
   640 ;;
   641 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   642 ;;
   643 ;; *************** function _main *****************
   644 ;; Defined at:
   645 ;;		line 73 in file "main.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;		None
   648 ;; Auto vars:     Size  Location     Type
   649 ;;		None
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      void 
   652 ;; Registers used:
   653 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   654 ;; Tracked objects:
   655 ;;		On entry : B00/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   659 ;;      Params:         0       0       0       0       0
   660 ;;      Locals:         0       0       0       0       0
   661 ;;      Temps:          0       4       0       0       0
   662 ;;      Totals:         0       4       0       0       0
   663 ;;Total ram usage:        4 bytes
   664 ;; Hardware stack levels required when called: 4
   665 ;; This function calls:
   666 ;;		_I2C_Master_Read
   667 ;;		_I2C_Master_Start
   668 ;;		_I2C_Master_Stop
   669 ;;		_I2C_Master_Write
   670 ;;		_Lcd_Cmd
   671 ;;		_Lcd_Write_String
   672 ;;		_UART_Write_Char
   673 ;;		_setup
   674 ;; This function is called by:
   675 ;;		Startup code after reset
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           
   680                           ;psect for function _main
   681  0027                     _main:
   682  0027                     l1815:	
   683                           ;incstack = 0
   684                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   685                           
   686                           
   687                           ;main.c: 74:     setup();
   688  0027  120A  118A  235B  120A  118A  	fcall	_setup
   689  002C                     l1817:
   690                           
   691                           ;main.c: 75:     Lcd_Write_String(" Lock Door Lights");
   692  002C  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   693  002D  120A  118A  2444  120A  118A  	fcall	_Lcd_Write_String
   694  0032                     l1819:
   695                           
   696                           ;main.c: 76:     Lcd_Cmd(0b11000000);
   697  0032  30C0               	movlw	192
   698  0033  120A  118A  249C  120A  118A  	fcall	_Lcd_Cmd
   699                           
   700                           ;main.c: 77:     Lcd_Write_String(" ON");
   701  0038  3021               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   702  0039  120A  118A  2444  120A  118A  	fcall	_Lcd_Write_String
   703  003E                     l1821:
   704                           
   705                           ;main.c: 78:     Lcd_Cmd(0b11000100);
   706  003E  30C4               	movlw	196
   707  003F  120A  118A  249C  120A  118A  	fcall	_Lcd_Cmd
   708  0044                     l1823:
   709                           
   710                           ;main.c: 79:     Lcd_Write_String(" NO ");
   711  0044  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   712  0045  120A  118A  2444  120A  118A  	fcall	_Lcd_Write_String
   713  004A                     l273:	
   714                           ;main.c: 82:     while(1){
   715                           
   716                           
   717                           ;main.c: 83:         I2C_Master_Start();
   718  004A  120A  118A  24F0  120A  118A  	fcall	_I2C_Master_Start
   719                           
   720                           ;main.c: 84:         I2C_Master_Write(0b01110010);
   721  004F  3072               	movlw	114
   722  0050  00F3               	movwf	I2C_Master_Write@d
   723  0051  3000               	movlw	0
   724  0052  00F4               	movwf	I2C_Master_Write@d+1
   725  0053  120A  118A  24DD  120A  118A  	fcall	_I2C_Master_Write
   726                           
   727                           ;main.c: 85:         I2C_Master_Write(0b10000000);
   728  0058  3080               	movlw	128
   729  0059  00F3               	movwf	I2C_Master_Write@d
   730  005A  3000               	movlw	0
   731  005B  00F4               	movwf	I2C_Master_Write@d+1
   732  005C  120A  118A  24DD  120A  118A  	fcall	_I2C_Master_Write
   733                           
   734                           ;main.c: 86:         I2C_Master_Write(0b00000011);
   735  0061  3003               	movlw	3
   736  0062  00F3               	movwf	I2C_Master_Write@d
   737  0063  3000               	movlw	0
   738  0064  00F4               	movwf	I2C_Master_Write@d+1
   739  0065  120A  118A  24DD  120A  118A  	fcall	_I2C_Master_Write
   740                           
   741                           ;main.c: 87:         I2C_Master_Stop();
   742  006A  120A  118A  24E7  120A  118A  	fcall	_I2C_Master_Stop
   743  006F                     l1825:
   744                           
   745                           ;main.c: 89:         _delay((unsigned long)((403)*(4000000/4000.0)));
   746  006F  3003               	movlw	3
   747  0070  1283               	bcf	3,5	;RP0=0, select bank0
   748  0071  1303               	bcf	3,6	;RP1=0, select bank0
   749  0072  00B3               	movwf	??_main+2
   750  0073  300C               	movlw	12
   751  0074  00B2               	movwf	??_main+1
   752  0075  305B               	movlw	91
   753  0076  00B1               	movwf	??_main
   754  0077                     u857:
   755  0077  0BB1               	decfsz	??_main,f
   756  0078  2877               	goto	u857
   757  0079  0BB2               	decfsz	??_main+1,f
   758  007A  2877               	goto	u857
   759  007B  0BB3               	decfsz	??_main+2,f
   760  007C  2877               	goto	u857
   761  007D  287E               	nop2
   762  007E                     l1827:
   763                           
   764                           ;main.c: 90:         I2C_Master_Start();
   765  007E  120A  118A  24F0  120A  118A  	fcall	_I2C_Master_Start
   766  0083                     l1829:
   767                           
   768                           ;main.c: 91:         I2C_Master_Write(0b01110010);
   769  0083  3072               	movlw	114
   770  0084  00F3               	movwf	I2C_Master_Write@d
   771  0085  3000               	movlw	0
   772  0086  00F4               	movwf	I2C_Master_Write@d+1
   773  0087  120A  118A  24DD  120A  118A  	fcall	_I2C_Master_Write
   774  008C                     l1831:
   775                           
   776                           ;main.c: 92:         I2C_Master_Write(0b10101100);
   777  008C  30AC               	movlw	172
   778  008D  00F3               	movwf	I2C_Master_Write@d
   779  008E  3000               	movlw	0
   780  008F  00F4               	movwf	I2C_Master_Write@d+1
   781  0090  120A  118A  24DD  120A  118A  	fcall	_I2C_Master_Write
   782  0095                     l1833:
   783                           
   784                           ;main.c: 93:         I2C_Master_Stop();
   785  0095  120A  118A  24E7  120A  118A  	fcall	_I2C_Master_Stop
   786  009A                     l1835:
   787                           
   788                           ;main.c: 95:         I2C_Master_Start();
   789  009A  120A  118A  24F0  120A  118A  	fcall	_I2C_Master_Start
   790  009F                     l1837:
   791                           
   792                           ;main.c: 96:         I2C_Master_Write(0b01110011);
   793  009F  3073               	movlw	115
   794  00A0  00F3               	movwf	I2C_Master_Write@d
   795  00A1  3000               	movlw	0
   796  00A2  00F4               	movwf	I2C_Master_Write@d+1
   797  00A3  120A  118A  24DD  120A  118A  	fcall	_I2C_Master_Write
   798  00A8                     l1839:
   799                           
   800                           ;main.c: 97:         light_low = I2C_Master_Read(0);
   801  00A8  3000               	movlw	0
   802  00A9  00F3               	movwf	I2C_Master_Read@a
   803  00AA  00F4               	movwf	I2C_Master_Read@a+1
   804  00AB  120A  118A  23EA  120A  118A  	fcall	_I2C_Master_Read
   805  00B0  0873               	movf	?_I2C_Master_Read,w
   806  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   807  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   808  00B3  00B1               	movwf	??_main
   809  00B4  0831               	movf	??_main,w
   810  00B5  00C3               	movwf	_light_low
   811  00B6                     l1841:
   812                           
   813                           ;main.c: 98:         I2C_Master_Stop();
   814  00B6  120A  118A  24E7  120A  118A  	fcall	_I2C_Master_Stop
   815  00BB                     l1843:
   816                           
   817                           ;main.c: 100:         I2C_Master_Start();
   818  00BB  120A  118A  24F0  120A  118A  	fcall	_I2C_Master_Start
   819  00C0                     l1845:
   820                           
   821                           ;main.c: 101:         I2C_Master_Write(0b01110010);
   822  00C0  3072               	movlw	114
   823  00C1  00F3               	movwf	I2C_Master_Write@d
   824  00C2  3000               	movlw	0
   825  00C3  00F4               	movwf	I2C_Master_Write@d+1
   826  00C4  120A  118A  24DD  120A  118A  	fcall	_I2C_Master_Write
   827  00C9                     l1847:
   828                           
   829                           ;main.c: 102:         I2C_Master_Write(0b10101100);
   830  00C9  30AC               	movlw	172
   831  00CA  00F3               	movwf	I2C_Master_Write@d
   832  00CB  3000               	movlw	0
   833  00CC  00F4               	movwf	I2C_Master_Write@d+1
   834  00CD  120A  118A  24DD  120A  118A  	fcall	_I2C_Master_Write
   835  00D2                     l1849:
   836                           
   837                           ;main.c: 103:         I2C_Master_Stop();
   838  00D2  120A  118A  24E7  120A  118A  	fcall	_I2C_Master_Stop
   839  00D7                     l1851:
   840                           
   841                           ;main.c: 105:         I2C_Master_Start();
   842  00D7  120A  118A  24F0  120A  118A  	fcall	_I2C_Master_Start
   843  00DC                     l1853:
   844                           
   845                           ;main.c: 106:         I2C_Master_Write(0b01110011);
   846  00DC  3073               	movlw	115
   847  00DD  00F3               	movwf	I2C_Master_Write@d
   848  00DE  3000               	movlw	0
   849  00DF  00F4               	movwf	I2C_Master_Write@d+1
   850  00E0  120A  118A  24DD  120A  118A  	fcall	_I2C_Master_Write
   851  00E5                     l1855:
   852                           
   853                           ;main.c: 107:         light_high = I2C_Master_Read(0);
   854  00E5  3000               	movlw	0
   855  00E6  00F3               	movwf	I2C_Master_Read@a
   856  00E7  00F4               	movwf	I2C_Master_Read@a+1
   857  00E8  120A  118A  23EA  120A  118A  	fcall	_I2C_Master_Read
   858  00ED  0873               	movf	?_I2C_Master_Read,w
   859  00EE  1283               	bcf	3,5	;RP0=0, select bank0
   860  00EF  1303               	bcf	3,6	;RP1=0, select bank0
   861  00F0  00B1               	movwf	??_main
   862  00F1  0831               	movf	??_main,w
   863  00F2  00C2               	movwf	_light_high
   864  00F3                     l1857:
   865                           
   866                           ;main.c: 108:         I2C_Master_Stop();
   867  00F3  120A  118A  24E7  120A  118A  	fcall	_I2C_Master_Stop
   868  00F8                     l1859:
   869                           
   870                           ;main.c: 109:         _delay((unsigned long)((200)*(4000000/4000.0)));
   871  00F8  3002               	movlw	2
   872  00F9  1283               	bcf	3,5	;RP0=0, select bank0
   873  00FA  1303               	bcf	3,6	;RP1=0, select bank0
   874  00FB  00B3               	movwf	??_main+2
   875  00FC  3004               	movlw	4
   876  00FD  00B2               	movwf	??_main+1
   877  00FE  30B9               	movlw	185
   878  00FF  00B1               	movwf	??_main
   879  0100                     u867:
   880  0100  0BB1               	decfsz	??_main,f
   881  0101  2900               	goto	u867
   882  0102  0BB2               	decfsz	??_main+1,f
   883  0103  2900               	goto	u867
   884  0104  0BB3               	decfsz	??_main+2,f
   885  0105  2900               	goto	u867
   886  0106  2907               	nop2
   887  0107                     l1861:
   888                           
   889                           ;main.c: 111:         light = (light_high<<8)| light_low;
   890  0107  1283               	bcf	3,5	;RP0=0, select bank0
   891  0108  1303               	bcf	3,6	;RP1=0, select bank0
   892  0109  0843               	movf	_light_low,w
   893  010A  00B1               	movwf	??_main
   894  010B  01B2               	clrf	??_main+1
   895  010C  0842               	movf	_light_high,w
   896  010D  00B3               	movwf	??_main+2
   897  010E  01B4               	clrf	??_main+3
   898  010F  0833               	movf	??_main+2,w
   899  0110  00B4               	movwf	??_main+3
   900  0111  01B3               	clrf	??_main+2
   901  0112  0831               	movf	??_main,w
   902  0113  0433               	iorwf	??_main+2,w
   903  0114  00B5               	movwf	_light
   904  0115  0832               	movf	??_main+1,w
   905  0116  0434               	iorwf	??_main+3,w
   906  0117  00B6               	movwf	_light+1
   907  0118                     l1863:
   908                           
   909                           ;main.c: 114:         I2C_Master_Start();
   910  0118  120A  118A  24F0  120A  118A  	fcall	_I2C_Master_Start
   911  011D                     l1865:
   912                           
   913                           ;main.c: 115:         I2C_Master_Write(0b00000001);
   914  011D  3001               	movlw	1
   915  011E  00F3               	movwf	I2C_Master_Write@d
   916  011F  3000               	movlw	0
   917  0120  00F4               	movwf	I2C_Master_Write@d+1
   918  0121  120A  118A  24DD  120A  118A  	fcall	_I2C_Master_Write
   919  0126                     l1867:
   920                           
   921                           ;main.c: 116:         out_flag = I2C_Master_Read(0);
   922  0126  3000               	movlw	0
   923  0127  00F3               	movwf	I2C_Master_Read@a
   924  0128  00F4               	movwf	I2C_Master_Read@a+1
   925  0129  120A  118A  23EA  120A  118A  	fcall	_I2C_Master_Read
   926  012E  0873               	movf	?_I2C_Master_Read,w
   927  012F  1283               	bcf	3,5	;RP0=0, select bank0
   928  0130  1303               	bcf	3,6	;RP1=0, select bank0
   929  0131  00B1               	movwf	??_main
   930  0132  0831               	movf	??_main,w
   931  0133  00BF               	movwf	_out_flag
   932  0134                     l1869:
   933                           
   934                           ;main.c: 117:         I2C_Master_Stop();
   935  0134  120A  118A  24E7  120A  118A  	fcall	_I2C_Master_Stop
   936  0139                     l1871:
   937                           
   938                           ;main.c: 118:         _delay((unsigned long)((200)*(4000000/4000.0)));
   939  0139  3002               	movlw	2
   940  013A  1283               	bcf	3,5	;RP0=0, select bank0
   941  013B  1303               	bcf	3,6	;RP1=0, select bank0
   942  013C  00B3               	movwf	??_main+2
   943  013D  3004               	movlw	4
   944  013E  00B2               	movwf	??_main+1
   945  013F  30B9               	movlw	185
   946  0140  00B1               	movwf	??_main
   947  0141                     u877:
   948  0141  0BB1               	decfsz	??_main,f
   949  0142  2941               	goto	u877
   950  0143  0BB2               	decfsz	??_main+1,f
   951  0144  2941               	goto	u877
   952  0145  0BB3               	decfsz	??_main+2,f
   953  0146  2941               	goto	u877
   954  0147  2948               	nop2
   955  0148                     l1873:
   956                           
   957                           ;main.c: 119:         lock = out_flag & 0b00000001;
   958  0148  1283               	bcf	3,5	;RP0=0, select bank0
   959  0149  1303               	bcf	3,6	;RP1=0, select bank0
   960  014A  083F               	movf	_out_flag,w
   961  014B  3901               	andlw	1
   962  014C  00B1               	movwf	??_main
   963  014D  0831               	movf	??_main,w
   964  014E  00BE               	movwf	_lock
   965  014F                     l1875:
   966                           
   967                           ;main.c: 120:         door = out_flag & 0b00000010;
   968  014F  083F               	movf	_out_flag,w
   969  0150  3902               	andlw	2
   970  0151  00B1               	movwf	??_main
   971  0152  0831               	movf	??_main,w
   972  0153  00BC               	movwf	_door
   973  0154                     l1877:
   974                           
   975                           ;main.c: 123:         I2C_Master_Start();
   976  0154  120A  118A  24F0  120A  118A  	fcall	_I2C_Master_Start
   977  0159                     l1879:
   978                           
   979                           ;main.c: 124:         I2C_Master_Write(0b00000011);
   980  0159  3003               	movlw	3
   981  015A  00F3               	movwf	I2C_Master_Write@d
   982  015B  3000               	movlw	0
   983  015C  00F4               	movwf	I2C_Master_Write@d+1
   984  015D  120A  118A  24DD  120A  118A  	fcall	_I2C_Master_Write
   985  0162                     l1881:
   986                           
   987                           ;main.c: 125:         in_sensor = I2C_Master_Read(0);
   988  0162  3000               	movlw	0
   989  0163  00F3               	movwf	I2C_Master_Read@a
   990  0164  00F4               	movwf	I2C_Master_Read@a+1
   991  0165  120A  118A  23EA  120A  118A  	fcall	_I2C_Master_Read
   992  016A  0873               	movf	?_I2C_Master_Read,w
   993  016B  1283               	bcf	3,5	;RP0=0, select bank0
   994  016C  1303               	bcf	3,6	;RP1=0, select bank0
   995  016D  00B1               	movwf	??_main
   996  016E  0831               	movf	??_main,w
   997  016F  00BA               	movwf	_in_sensor
   998  0170                     l1883:
   999                           
  1000                           ;main.c: 126:         I2C_Master_Stop();
  1001  0170  120A  118A  24E7  120A  118A  	fcall	_I2C_Master_Stop
  1002  0175                     l1885:
  1003                           
  1004                           ;main.c: 127:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1005  0175  3002               	movlw	2
  1006  0176  1283               	bcf	3,5	;RP0=0, select bank0
  1007  0177  1303               	bcf	3,6	;RP1=0, select bank0
  1008  0178  00B3               	movwf	??_main+2
  1009  0179  3004               	movlw	4
  1010  017A  00B2               	movwf	??_main+1
  1011  017B  30B9               	movlw	185
  1012  017C  00B1               	movwf	??_main
  1013  017D                     u887:
  1014  017D  0BB1               	decfsz	??_main,f
  1015  017E  297D               	goto	u887
  1016  017F  0BB2               	decfsz	??_main+1,f
  1017  0180  297D               	goto	u887
  1018  0181  0BB3               	decfsz	??_main+2,f
  1019  0182  297D               	goto	u887
  1020  0183  2984               	nop2
  1021  0184                     l1887:
  1022                           
  1023                           ;main.c: 130:         UART_Write_Char(91);
  1024  0184  305B               	movlw	91
  1025  0185  120A  118A  24D1  120A  118A  	fcall	_UART_Write_Char
  1026  018A                     l1889:
  1027                           
  1028                           ;main.c: 131:         UART_Write_Char(keep_lock_off+48);
  1029  018A  1283               	bcf	3,5	;RP0=0, select bank0
  1030  018B  1303               	bcf	3,6	;RP1=0, select bank0
  1031  018C  083D               	movf	_keep_lock_off,w
  1032  018D  3E30               	addlw	48
  1033  018E  120A  118A  24D1  120A  118A  	fcall	_UART_Write_Char
  1034  0193                     l1891:
  1035                           
  1036                           ;main.c: 132:         UART_Write_Char(44);
  1037  0193  302C               	movlw	44
  1038  0194  120A  118A  24D1  120A  118A  	fcall	_UART_Write_Char
  1039  0199                     l1893:
  1040                           
  1041                           ;main.c: 133:         UART_Write_Char(keep_door_open+48);
  1042  0199  1283               	bcf	3,5	;RP0=0, select bank0
  1043  019A  1303               	bcf	3,6	;RP1=0, select bank0
  1044  019B  083B               	movf	_keep_door_open,w
  1045  019C  3E30               	addlw	48
  1046  019D  120A  118A  24D1  120A  118A  	fcall	_UART_Write_Char
  1047  01A2                     l1895:
  1048                           
  1049                           ;main.c: 134:         UART_Write_Char(44);
  1050  01A2  302C               	movlw	44
  1051  01A3  120A  118A  24D1  120A  118A  	fcall	_UART_Write_Char
  1052  01A8                     l1897:
  1053                           
  1054                           ;main.c: 135:         UART_Write_Char(light+48);
  1055  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1056  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1057  01AA  0835               	movf	_light,w
  1058  01AB  3E30               	addlw	48
  1059  01AC  120A  118A  24D1  120A  118A  	fcall	_UART_Write_Char
  1060  01B1                     l1899:
  1061                           
  1062                           ;main.c: 136:         UART_Write_Char(44);
  1063  01B1  302C               	movlw	44
  1064  01B2  120A  118A  24D1  120A  118A  	fcall	_UART_Write_Char
  1065  01B7                     l1901:
  1066                           
  1067                           ;main.c: 137:         UART_Write_Char(93);
  1068  01B7  305D               	movlw	93
  1069  01B8  120A  118A  24D1  120A  118A  	fcall	_UART_Write_Char
  1070  01BD                     l1903:
  1071                           
  1072                           ;main.c: 140:         if(lock != 0 && keep_lock_off == 0){
  1073  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1074  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1075  01BF  083E               	movf	_lock,w
  1076  01C0  1903               	btfsc	3,2
  1077  01C1  29C3               	goto	u731
  1078  01C2  29C4               	goto	u730
  1079  01C3                     u731:
  1080  01C3  29DB               	goto	l1915
  1081  01C4                     u730:
  1082  01C4                     l1905:
  1083  01C4  083D               	movf	_keep_lock_off,w
  1084  01C5  1D03               	btfss	3,2
  1085  01C6  29C8               	goto	u741
  1086  01C7  29C9               	goto	u740
  1087  01C8                     u741:
  1088  01C8  29DB               	goto	l1915
  1089  01C9                     u740:
  1090  01C9                     l1907:
  1091                           
  1092                           ;main.c: 141:             CCPR1L = 128;
  1093  01C9  3080               	movlw	128
  1094  01CA  0095               	movwf	21	;volatile
  1095  01CB                     l1909:
  1096                           
  1097                           ;main.c: 142:             Lcd_Cmd(0b11000000);
  1098  01CB  30C0               	movlw	192
  1099  01CC  120A  118A  249C  120A  118A  	fcall	_Lcd_Cmd
  1100  01D1                     l1911:
  1101                           
  1102                           ;main.c: 143:             Lcd_Write_String("OFF");
  1103  01D1  301D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1104  01D2  120A  118A  2444  120A  118A  	fcall	_Lcd_Write_String
  1105  01D7                     l1913:
  1106                           
  1107                           ;main.c: 144:             keep_lock_off = 1;
  1108  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  1109  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  1110  01D9  01BD               	clrf	_keep_lock_off
  1111  01DA  0ABD               	incf	_keep_lock_off,f
  1112  01DB                     l1915:
  1113                           
  1114                           ;main.c: 147:         if (door != 0 && keep_door_open == 0){
  1115  01DB  083C               	movf	_door,w
  1116  01DC  1903               	btfsc	3,2
  1117  01DD  29DF               	goto	u751
  1118  01DE  29E0               	goto	u750
  1119  01DF                     u751:
  1120  01DF  2A05               	goto	l1933
  1121  01E0                     u750:
  1122  01E0                     l1917:
  1123  01E0  083B               	movf	_keep_door_open,w
  1124  01E1  1D03               	btfss	3,2
  1125  01E2  29E4               	goto	u761
  1126  01E3  29E5               	goto	u760
  1127  01E4                     u761:
  1128  01E4  2A05               	goto	l1933
  1129  01E5                     u760:
  1130  01E5                     l1919:
  1131                           
  1132                           ;main.c: 148:             Lcd_Cmd(0b11000101);
  1133  01E5  30C5               	movlw	197
  1134  01E6  120A  118A  249C  120A  118A  	fcall	_Lcd_Cmd
  1135  01EB                     l1921:
  1136                           
  1137                           ;main.c: 149:             Lcd_Write_String("OPEN");
  1138  01EB  3018               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1139  01EC  120A  118A  2444  120A  118A  	fcall	_Lcd_Write_String
  1140  01F1                     l1923:
  1141                           
  1142                           ;main.c: 150:             RD0 = 0;
  1143  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  1144  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  1145  01F3  1008               	bcf	8,0	;volatile
  1146  01F4                     l1925:
  1147                           
  1148                           ;main.c: 151:             RD1 = 1;
  1149  01F4  1488               	bsf	8,1	;volatile
  1150  01F5                     l1927:
  1151                           
  1152                           ;main.c: 152:             _delay((unsigned long)((150)*(4000000/4000.0)));
  1153  01F5  30C3               	movlw	195
  1154  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  1155  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  1156  01F8  00B2               	movwf	??_main+1
  1157  01F9  30CC               	movlw	204
  1158  01FA  00B1               	movwf	??_main
  1159  01FB                     u897:
  1160  01FB  0BB1               	decfsz	??_main,f
  1161  01FC  29FB               	goto	u897
  1162  01FD  0BB2               	decfsz	??_main+1,f
  1163  01FE  29FB               	goto	u897
  1164  01FF  0000               	nop
  1165  0200                     l1929:
  1166                           
  1167                           ;main.c: 153:             RD1 = 0;
  1168  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1169  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1170  0202  1088               	bcf	8,1	;volatile
  1171  0203                     l1931:
  1172                           
  1173                           ;main.c: 154:             keep_door_open = 1;
  1174  0203  01BB               	clrf	_keep_door_open
  1175  0204  0ABB               	incf	_keep_door_open,f
  1176  0205                     l1933:
  1177                           
  1178                           ;main.c: 157:         if(in_sensor!=0 && keep_lock_off && keep_door_open){
  1179  0205  083A               	movf	_in_sensor,w
  1180  0206  1903               	btfsc	3,2
  1181  0207  2A09               	goto	u771
  1182  0208  2A0A               	goto	u770
  1183  0209                     u771:
  1184  0209  2A17               	goto	l1943
  1185  020A                     u770:
  1186  020A                     l1935:
  1187  020A  083D               	movf	_keep_lock_off,w
  1188  020B  1903               	btfsc	3,2
  1189  020C  2A0E               	goto	u781
  1190  020D  2A0F               	goto	u780
  1191  020E                     u781:
  1192  020E  2A17               	goto	l1943
  1193  020F                     u780:
  1194  020F                     l1937:
  1195  020F  083B               	movf	_keep_door_open,w
  1196  0210  1903               	btfsc	3,2
  1197  0211  2A13               	goto	u791
  1198  0212  2A14               	goto	u790
  1199  0213                     u791:
  1200  0213  2A17               	goto	l1943
  1201  0214                     u790:
  1202  0214                     l1939:
  1203                           
  1204                           ;main.c: 158:             TMR1 = 0;
  1205  0214  018E               	clrf	14	;volatile
  1206  0215  018F               	clrf	15	;volatile
  1207  0216                     l1941:
  1208                           
  1209                           ;main.c: 159:             TMR1ON = 1;
  1210  0216  1410               	bsf	16,0	;volatile
  1211  0217                     l1943:
  1212                           
  1213                           ;main.c: 162:         if(time>=4){
  1214  0217  3004               	movlw	4
  1215  0218  0239               	subwf	_time,w
  1216  0219  1C03               	skipc
  1217  021A  2A1C               	goto	u801
  1218  021B  2A1D               	goto	u800
  1219  021C                     u801:
  1220  021C  2A21               	goto	l1951
  1221  021D                     u800:
  1222  021D                     l1945:
  1223                           
  1224                           ;main.c: 163:             time = 0;
  1225  021D  01B9               	clrf	_time
  1226  021E                     l1947:
  1227                           
  1228                           ;main.c: 164:             TMR1ON = 0;
  1229  021E  1010               	bcf	16,0	;volatile
  1230  021F                     l1949:
  1231                           
  1232                           ;main.c: 165:             close = 1;
  1233  021F  01B8               	clrf	_close
  1234  0220  0AB8               	incf	_close,f
  1235  0221                     l1951:
  1236                           
  1237                           ;main.c: 168:         if(close == 1 && keep_door_open == 1 && keep_lock_off == 1){
  1238  0221  0338               	decf	_close,w
  1239  0222  1D03               	btfss	3,2
  1240  0223  2A25               	goto	u811
  1241  0224  2A26               	goto	u810
  1242  0225                     u811:
  1243  0225  2A6C               	goto	l1979
  1244  0226                     u810:
  1245  0226                     l1953:
  1246  0226  033B               	decf	_keep_door_open,w
  1247  0227  1D03               	btfss	3,2
  1248  0228  2A2A               	goto	u821
  1249  0229  2A2B               	goto	u820
  1250  022A                     u821:
  1251  022A  2A6C               	goto	l1979
  1252  022B                     u820:
  1253  022B                     l1955:
  1254  022B  033D               	decf	_keep_lock_off,w
  1255  022C  1D03               	btfss	3,2
  1256  022D  2A2F               	goto	u831
  1257  022E  2A30               	goto	u830
  1258  022F                     u831:
  1259  022F  2A6C               	goto	l1979
  1260  0230                     u830:
  1261  0230                     l1957:
  1262                           
  1263                           ;main.c: 169:             close = 0;
  1264  0230  01B8               	clrf	_close
  1265                           
  1266                           ;main.c: 170:             keep_door_open = 0;
  1267  0231  01BB               	clrf	_keep_door_open
  1268                           
  1269                           ;main.c: 171:             keep_lock_off = 0;
  1270  0232  01BD               	clrf	_keep_lock_off
  1271  0233                     l1959:
  1272                           
  1273                           ;main.c: 172:             Lcd_Cmd(0b11000101);
  1274  0233  30C5               	movlw	197
  1275  0234  120A  118A  249C  120A  118A  	fcall	_Lcd_Cmd
  1276  0239                     l1961:
  1277                           
  1278                           ;main.c: 173:             Lcd_Write_String(" NO ");
  1279  0239  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1280  023A  120A  118A  2444  120A  118A  	fcall	_Lcd_Write_String
  1281  023F                     l1963:
  1282                           
  1283                           ;main.c: 174:             RD0=1;
  1284  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1285  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1286  0241  1408               	bsf	8,0	;volatile
  1287  0242                     l1965:
  1288                           
  1289                           ;main.c: 175:             RD1=0;
  1290  0242  1088               	bcf	8,1	;volatile
  1291  0243                     l1967:
  1292                           
  1293                           ;main.c: 176:             _delay((unsigned long)((150)*(4000000/4000.0)));
  1294  0243  30C3               	movlw	195
  1295  0244  1283               	bcf	3,5	;RP0=0, select bank0
  1296  0245  1303               	bcf	3,6	;RP1=0, select bank0
  1297  0246  00B2               	movwf	??_main+1
  1298  0247  30CC               	movlw	204
  1299  0248  00B1               	movwf	??_main
  1300  0249                     u907:
  1301  0249  0BB1               	decfsz	??_main,f
  1302  024A  2A49               	goto	u907
  1303  024B  0BB2               	decfsz	??_main+1,f
  1304  024C  2A49               	goto	u907
  1305  024D  0000               	nop
  1306  024E                     l1969:
  1307                           
  1308                           ;main.c: 177:             RD0=0;
  1309  024E  1283               	bcf	3,5	;RP0=0, select bank0
  1310  024F  1303               	bcf	3,6	;RP1=0, select bank0
  1311  0250  1008               	bcf	8,0	;volatile
  1312  0251                     l1971:
  1313                           
  1314                           ;main.c: 178:             _delay((unsigned long)((150)*(4000000/4000.0)));
  1315  0251  30C3               	movlw	195
  1316  0252  1283               	bcf	3,5	;RP0=0, select bank0
  1317  0253  1303               	bcf	3,6	;RP1=0, select bank0
  1318  0254  00B2               	movwf	??_main+1
  1319  0255  30CC               	movlw	204
  1320  0256  00B1               	movwf	??_main
  1321  0257                     u917:
  1322  0257  0BB1               	decfsz	??_main,f
  1323  0258  2A57               	goto	u917
  1324  0259  0BB2               	decfsz	??_main+1,f
  1325  025A  2A57               	goto	u917
  1326  025B  0000               	nop
  1327  025C                     l1973:
  1328                           
  1329                           ;main.c: 179:             CCPR1L = 32;
  1330  025C  3020               	movlw	32
  1331  025D  1283               	bcf	3,5	;RP0=0, select bank0
  1332  025E  1303               	bcf	3,6	;RP1=0, select bank0
  1333  025F  0095               	movwf	21	;volatile
  1334  0260                     l1975:
  1335                           
  1336                           ;main.c: 180:             Lcd_Cmd(0b11000000);
  1337  0260  30C0               	movlw	192
  1338  0261  120A  118A  249C  120A  118A  	fcall	_Lcd_Cmd
  1339  0266                     l1977:
  1340                           
  1341                           ;main.c: 181:             Lcd_Write_String(" ON");
  1342  0266  3021               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1343  0267  120A  118A  2444  120A  118A  	fcall	_Lcd_Write_String
  1344  026C                     l1979:
  1345                           
  1346                           ;main.c: 184:         if(light<200 | Adafruit_light==1){
  1347  026C  3000               	movlw	0
  1348  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1349  026E  1303               	bcf	3,6	;RP1=0, select bank0
  1350  026F  0236               	subwf	_light+1,w
  1351  0270  30C8               	movlw	200
  1352  0271  1903               	skipnz
  1353  0272  0235               	subwf	_light,w
  1354  0273  1C03               	skipc
  1355  0274  2A76               	goto	u841
  1356  0275  2A77               	goto	u840
  1357  0276                     u841:
  1358  0276  2A78               	goto	l1983
  1359  0277                     u840:
  1360  0277  2A88               	goto	l1989
  1361  0278                     l1983:
  1362                           
  1363                           ;main.c: 185:             Lcd_Cmd(0b11001100);
  1364  0278  30CC               	movlw	204
  1365  0279  120A  118A  249C  120A  118A  	fcall	_Lcd_Cmd
  1366  027E                     l1985:
  1367                           
  1368                           ;main.c: 186:             Lcd_Write_String(" ON");
  1369  027E  3021               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1370  027F  120A  118A  2444  120A  118A  	fcall	_Lcd_Write_String
  1371  0284                     l1987:
  1372                           
  1373                           ;main.c: 187:             RD2 = 1;
  1374  0284  1283               	bcf	3,5	;RP0=0, select bank0
  1375  0285  1303               	bcf	3,6	;RP1=0, select bank0
  1376  0286  1508               	bsf	8,2	;volatile
  1377                           
  1378                           ;main.c: 188:         }
  1379  0287  284A               	goto	l273
  1380  0288                     l1989:
  1381                           
  1382                           ;main.c: 190:             Lcd_Cmd(0b11001100);
  1383  0288  30CC               	movlw	204
  1384  0289  120A  118A  249C  120A  118A  	fcall	_Lcd_Cmd
  1385  028E                     l1991:
  1386                           
  1387                           ;main.c: 191:             Lcd_Write_String("OFF");
  1388  028E  301D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1389  028F  120A  118A  2444  120A  118A  	fcall	_Lcd_Write_String
  1390  0294                     l1993:
  1391                           
  1392                           ;main.c: 192:             RD2 = 0;
  1393  0294  1283               	bcf	3,5	;RP0=0, select bank0
  1394  0295  1303               	bcf	3,6	;RP1=0, select bank0
  1395  0296  1108               	bcf	8,2	;volatile
  1396  0297  284A               	goto	l273
  1397  0298  120A  118A  280C   	ljmp	start
  1398  029B                     __end_of_main:
  1399                           
  1400                           	psect	text1
  1401  035B                     __ptext1:	
  1402 ;; *************** function _setup *****************
  1403 ;; Defined at:
  1404 ;;		line 200 in file "main.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;		None
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;		None
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      void 
  1411 ;; Registers used:
  1412 ;;		wreg, status,2, status,0, pclath, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1418 ;;      Params:         0       0       0       0       0
  1419 ;;      Locals:         0       0       0       0       0
  1420 ;;      Temps:          0       0       0       0       0
  1421 ;;      Totals:         0       0       0       0       0
  1422 ;;Total ram usage:        0 bytes
  1423 ;; Hardware stack levels used: 1
  1424 ;; Hardware stack levels required when called: 3
  1425 ;; This function calls:
  1426 ;;		_I2C_Master_Init
  1427 ;;		_Lcd_Init
  1428 ;;		_UART_Init
  1429 ;; This function is called by:
  1430 ;;		_main
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           
  1435                           ;psect for function _setup
  1436  035B                     _setup:
  1437  035B                     l1769:	
  1438                           ;incstack = 0
  1439                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1440                           
  1441                           
  1442                           ;main.c: 202:     ANSEL = 0;
  1443  035B  1683               	bsf	3,5	;RP0=1, select bank3
  1444  035C  1703               	bsf	3,6	;RP1=1, select bank3
  1445  035D  0188               	clrf	8	;volatile
  1446                           
  1447                           ;main.c: 203:     ANSELH = 0;
  1448  035E  0189               	clrf	9	;volatile
  1449                           
  1450                           ;main.c: 204:     TRISA = 0;
  1451  035F  1683               	bsf	3,5	;RP0=1, select bank1
  1452  0360  1303               	bcf	3,6	;RP1=0, select bank1
  1453  0361  0185               	clrf	5	;volatile
  1454                           
  1455                           ;main.c: 205:     TRISB = 0;
  1456  0362  0186               	clrf	6	;volatile
  1457  0363                     l1771:
  1458                           
  1459                           ;main.c: 206:     TRISC = 0b10010000;
  1460  0363  3090               	movlw	144
  1461  0364  0087               	movwf	7	;volatile
  1462  0365                     l1773:
  1463                           
  1464                           ;main.c: 207:     TRISD = 0;
  1465  0365  0188               	clrf	8	;volatile
  1466  0366                     l1775:
  1467                           
  1468                           ;main.c: 208:     TRISE = 0;
  1469  0366  0189               	clrf	9	;volatile
  1470  0367                     l1777:
  1471                           
  1472                           ;main.c: 212:     GIE = 1;
  1473  0367  178B               	bsf	11,7	;volatile
  1474  0368                     l1779:
  1475                           
  1476                           ;main.c: 213:     PEIE = 1;
  1477  0368  170B               	bsf	11,6	;volatile
  1478  0369                     l1781:
  1479                           
  1480                           ;main.c: 214:     TMR1IE = 1;
  1481  0369  140C               	bsf	12,0	;volatile
  1482  036A                     l1783:
  1483                           
  1484                           ;main.c: 215:     TMR1IF = 0;
  1485  036A  1283               	bcf	3,5	;RP0=0, select bank0
  1486  036B  1303               	bcf	3,6	;RP1=0, select bank0
  1487  036C  100C               	bcf	12,0	;volatile
  1488  036D                     l1785:
  1489                           
  1490                           ;main.c: 219:     T1CONbits.T1CKPS = 3;
  1491  036D  3030               	movlw	48
  1492  036E  0490               	iorwf	16,f	;volatile
  1493  036F                     l1787:
  1494                           
  1495                           ;main.c: 221:     Lcd_Init();
  1496  036F  120A  118A  2303  120A  118A  	fcall	_Lcd_Init
  1497  0374                     l1789:
  1498                           
  1499                           ;main.c: 223:     UART_Init();
  1500  0374  120A  118A  2485  120A  118A  	fcall	_UART_Init
  1501  0379                     l1791:
  1502                           
  1503                           ;main.c: 225:     I2C_Master_Init(400000);
  1504  0379  3000               	movlw	0
  1505  037A  1283               	bcf	3,5	;RP0=0, select bank0
  1506  037B  1303               	bcf	3,6	;RP1=0, select bank0
  1507  037C  00B0               	movwf	I2C_Master_Init@c+3
  1508  037D  3006               	movlw	6
  1509  037E  00AF               	movwf	I2C_Master_Init@c+2
  1510  037F  301A               	movlw	26
  1511  0380  00AE               	movwf	I2C_Master_Init@c+1
  1512  0381  3080               	movlw	128
  1513  0382  00AD               	movwf	I2C_Master_Init@c
  1514  0383  120A  118A  23B0  120A  118A  	fcall	_I2C_Master_Init
  1515  0388                     l1793:
  1516                           
  1517                           ;main.c: 229:     TRISCbits.TRISC2 = 1;
  1518  0388  1683               	bsf	3,5	;RP0=1, select bank1
  1519  0389  1303               	bcf	3,6	;RP1=0, select bank1
  1520  038A  1507               	bsf	7,2	;volatile
  1521  038B                     l1795:
  1522                           
  1523                           ;main.c: 230:     PR2 = 249;
  1524  038B  30F9               	movlw	249
  1525  038C  0092               	movwf	18	;volatile
  1526  038D                     l1797:
  1527                           
  1528                           ;main.c: 231:     CCP1M3 = 1;
  1529  038D  1283               	bcf	3,5	;RP0=0, select bank0
  1530  038E  1303               	bcf	3,6	;RP1=0, select bank0
  1531  038F  1597               	bsf	23,3	;volatile
  1532  0390                     l1799:
  1533                           
  1534                           ;main.c: 232:     CCP1M2 = 1;
  1535  0390  1517               	bsf	23,2	;volatile
  1536  0391                     l1801:
  1537                           
  1538                           ;main.c: 233:     CCPR1L = 32;
  1539  0391  3020               	movlw	32
  1540  0392  0095               	movwf	21	;volatile
  1541  0393                     l1803:
  1542                           
  1543                           ;main.c: 235:     TMR2IF = 0;
  1544  0393  108C               	bcf	12,1	;volatile
  1545  0394                     l1805:
  1546                           
  1547                           ;main.c: 236:     T2CON = 3;
  1548  0394  3003               	movlw	3
  1549  0395  0092               	movwf	18	;volatile
  1550  0396                     l1807:
  1551                           
  1552                           ;main.c: 237:     T2CONbits.TMR2ON = 1;
  1553  0396  1512               	bsf	18,2	;volatile
  1554  0397                     l288:	
  1555                           ;main.c: 239:     }
  1556                           
  1557                           
  1558                           ;main.c: 238:     while(TMR2IF==0){
  1559  0397  1C8C               	btfss	12,1	;volatile
  1560  0398  2B9A               	goto	u721
  1561  0399  2B9B               	goto	u720
  1562  039A                     u721:
  1563  039A  2B97               	goto	l288
  1564  039B                     u720:
  1565  039B                     l290:
  1566                           
  1567                           ;main.c: 240:     TRISCbits.TRISC2 = 0;
  1568  039B  1683               	bsf	3,5	;RP0=1, select bank1
  1569  039C  1303               	bcf	3,6	;RP1=0, select bank1
  1570  039D  1107               	bcf	7,2	;volatile
  1571  039E                     l1809:
  1572                           
  1573                           ;main.c: 243:     PORTA = 0;
  1574  039E  1283               	bcf	3,5	;RP0=0, select bank0
  1575  039F  1303               	bcf	3,6	;RP1=0, select bank0
  1576  03A0  0185               	clrf	5	;volatile
  1577                           
  1578                           ;main.c: 244:     PORTB = 0;
  1579  03A1  0186               	clrf	6	;volatile
  1580                           
  1581                           ;main.c: 245:     PORTC = 0;
  1582  03A2  0187               	clrf	7	;volatile
  1583                           
  1584                           ;main.c: 246:     PORTD = 0;
  1585  03A3  0188               	clrf	8	;volatile
  1586                           
  1587                           ;main.c: 247:     PORTE = 0;
  1588  03A4  0189               	clrf	9	;volatile
  1589                           
  1590                           ;main.c: 250:     light_high = 0;
  1591  03A5  01C2               	clrf	_light_high
  1592                           
  1593                           ;main.c: 251:     light_low = 0;
  1594  03A6  01C3               	clrf	_light_low
  1595                           
  1596                           ;main.c: 252:     light = 0;
  1597  03A7  01B5               	clrf	_light
  1598  03A8  01B6               	clrf	_light+1
  1599                           
  1600                           ;main.c: 253:     door = 0;
  1601  03A9  01BC               	clrf	_door
  1602                           
  1603                           ;main.c: 254:     keep_door_open = 0;
  1604  03AA  01BB               	clrf	_keep_door_open
  1605                           
  1606                           ;main.c: 255:     lock = 0;
  1607  03AB  01BE               	clrf	_lock
  1608                           
  1609                           ;main.c: 256:     keep_lock_off = 0;
  1610  03AC  01BD               	clrf	_keep_lock_off
  1611                           
  1612                           ;main.c: 257:     in_sensor = 0;
  1613  03AD  01BA               	clrf	_in_sensor
  1614                           
  1615                           ;main.c: 258:     close = 0;
  1616  03AE  01B8               	clrf	_close
  1617  03AF                     l291:
  1618  03AF  0008               	return
  1619  03B0                     __end_of_setup:
  1620                           
  1621                           	psect	text2
  1622  0485                     __ptext2:	
  1623 ;; *************** function _UART_Init *****************
  1624 ;; Defined at:
  1625 ;;		line 80 in file "Digital2_toolbox.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;		None
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;		None
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  1    wreg      void 
  1632 ;; Registers used:
  1633 ;;		wreg, status,2
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1639 ;;      Params:         0       0       0       0       0
  1640 ;;      Locals:         0       0       0       0       0
  1641 ;;      Temps:          0       0       0       0       0
  1642 ;;      Totals:         0       0       0       0       0
  1643 ;;Total ram usage:        0 bytes
  1644 ;; Hardware stack levels used: 1
  1645 ;; Hardware stack levels required when called: 1
  1646 ;; This function calls:
  1647 ;;		Nothing
  1648 ;; This function is called by:
  1649 ;;		_setup
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           
  1654                           ;psect for function _UART_Init
  1655  0485                     _UART_Init:
  1656  0485                     l1387:	
  1657                           ;incstack = 0
  1658                           ; Regs used in _UART_Init: [wreg+status,2]
  1659                           
  1660                           
  1661                           ;Digital2_toolbox.c: 81:     TRISCbits.TRISC7 = 1;
  1662  0485  1683               	bsf	3,5	;RP0=1, select bank1
  1663  0486  1303               	bcf	3,6	;RP1=0, select bank1
  1664  0487  1787               	bsf	7,7	;volatile
  1665                           
  1666                           ;Digital2_toolbox.c: 83:     TXSTAbits.TXEN = 1;
  1667  0488  1698               	bsf	24,5	;volatile
  1668                           
  1669                           ;Digital2_toolbox.c: 84:     TXSTAbits.SYNC = 0;
  1670  0489  1218               	bcf	24,4	;volatile
  1671                           
  1672                           ;Digital2_toolbox.c: 85:     RCSTAbits.SPEN = 1;
  1673  048A  1283               	bcf	3,5	;RP0=0, select bank0
  1674  048B  1303               	bcf	3,6	;RP1=0, select bank0
  1675  048C  1798               	bsf	24,7	;volatile
  1676                           
  1677                           ;Digital2_toolbox.c: 86:     TXSTAbits.BRGH = 1;
  1678  048D  1683               	bsf	3,5	;RP0=1, select bank1
  1679  048E  1303               	bcf	3,6	;RP1=0, select bank1
  1680  048F  1518               	bsf	24,2	;volatile
  1681                           
  1682                           ;Digital2_toolbox.c: 87:     BRG16 = 0;
  1683  0490  1683               	bsf	3,5	;RP0=1, select bank3
  1684  0491  1703               	bsf	3,6	;RP1=1, select bank3
  1685  0492  1187               	bcf	7,3	;volatile
  1686  0493                     l1389:
  1687                           
  1688                           ;Digital2_toolbox.c: 88:     SPBRGH = 0;
  1689  0493  1683               	bsf	3,5	;RP0=1, select bank1
  1690  0494  1303               	bcf	3,6	;RP1=0, select bank1
  1691  0495  019A               	clrf	26	;volatile
  1692  0496                     l1391:
  1693                           
  1694                           ;Digital2_toolbox.c: 89:     SPBRG = 25;
  1695  0496  3019               	movlw	25
  1696  0497  0099               	movwf	25	;volatile
  1697  0498                     l1393:
  1698                           
  1699                           ;Digital2_toolbox.c: 93:     RCSTAbits.CREN = 1;
  1700  0498  1283               	bcf	3,5	;RP0=0, select bank0
  1701  0499  1303               	bcf	3,6	;RP1=0, select bank0
  1702  049A  1618               	bsf	24,4	;volatile
  1703  049B                     l81:
  1704  049B  0008               	return
  1705  049C                     __end_of_UART_Init:
  1706                           
  1707                           	psect	text3
  1708  0303                     __ptext3:	
  1709 ;; *************** function _Lcd_Init *****************
  1710 ;; Defined at:
  1711 ;;		line 42 in file "Digital2_toolbox.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, status,0, pclath, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1725 ;;      Params:         0       0       0       0       0
  1726 ;;      Locals:         0       0       0       0       0
  1727 ;;      Temps:          2       0       0       0       0
  1728 ;;      Totals:         2       0       0       0       0
  1729 ;;Total ram usage:        2 bytes
  1730 ;; Hardware stack levels used: 1
  1731 ;; Hardware stack levels required when called: 2
  1732 ;; This function calls:
  1733 ;;		_Lcd_Cmd
  1734 ;; This function is called by:
  1735 ;;		_setup
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           
  1740                           ;psect for function _Lcd_Init
  1741  0303                     _Lcd_Init:
  1742  0303                     l1351:	
  1743                           ;incstack = 0
  1744                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1745                           
  1746                           
  1747                           ;Digital2_toolbox.c: 43:     PORTA = 0;
  1748  0303  1283               	bcf	3,5	;RP0=0, select bank0
  1749  0304  1303               	bcf	3,6	;RP1=0, select bank0
  1750  0305  0185               	clrf	5	;volatile
  1751  0306                     l1353:
  1752                           
  1753                           ;Digital2_toolbox.c: 44:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1754  0306  301A               	movlw	26
  1755  0307  00F7               	movwf	??_Lcd_Init+1
  1756  0308  30F8               	movlw	248
  1757  0309  00F6               	movwf	??_Lcd_Init
  1758  030A                     u927:
  1759  030A  0BF6               	decfsz	??_Lcd_Init,f
  1760  030B  2B0A               	goto	u927
  1761  030C  0BF7               	decfsz	??_Lcd_Init+1,f
  1762  030D  2B0A               	goto	u927
  1763  030E  0000               	nop
  1764  030F                     l1355:
  1765                           
  1766                           ;Digital2_toolbox.c: 45:     Lcd_Cmd(0x030);
  1767  030F  3030               	movlw	48
  1768  0310  120A  118A  249C  120A  118A  	fcall	_Lcd_Cmd
  1769  0315                     l1357:
  1770                           
  1771                           ;Digital2_toolbox.c: 46:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1772  0315  3007               	movlw	7
  1773  0316  00F7               	movwf	??_Lcd_Init+1
  1774  0317  307D               	movlw	125
  1775  0318  00F6               	movwf	??_Lcd_Init
  1776  0319                     u937:
  1777  0319  0BF6               	decfsz	??_Lcd_Init,f
  1778  031A  2B19               	goto	u937
  1779  031B  0BF7               	decfsz	??_Lcd_Init+1,f
  1780  031C  2B19               	goto	u937
  1781  031D                     l1359:
  1782                           
  1783                           ;Digital2_toolbox.c: 47:     Lcd_Cmd(0x030);
  1784  031D  3030               	movlw	48
  1785  031E  120A  118A  249C  120A  118A  	fcall	_Lcd_Cmd
  1786  0323                     l1361:
  1787                           
  1788                           ;Digital2_toolbox.c: 48:     _delay((unsigned long)((160)*(4000000/4000000.0)));
  1789  0323  3035               	movlw	53
  1790  0324  00F6               	movwf	??_Lcd_Init
  1791  0325                     u947:
  1792  0325  0BF6               	decfsz	??_Lcd_Init,f
  1793  0326  2B25               	goto	u947
  1794  0327                     l1363:
  1795                           
  1796                           ;Digital2_toolbox.c: 49:     Lcd_Cmd(0x030);
  1797  0327  3030               	movlw	48
  1798  0328  120A  118A  249C  120A  118A  	fcall	_Lcd_Cmd
  1799  032D                     l1365:
  1800                           
  1801                           ;Digital2_toolbox.c: 51:     Lcd_Cmd(0b00111000);
  1802  032D  3038               	movlw	56
  1803  032E  120A  118A  249C  120A  118A  	fcall	_Lcd_Cmd
  1804  0333                     l1367:
  1805                           
  1806                           ;Digital2_toolbox.c: 52:     Lcd_Cmd(0x10);
  1807  0333  3010               	movlw	16
  1808  0334  120A  118A  249C  120A  118A  	fcall	_Lcd_Cmd
  1809  0339                     l1369:
  1810                           
  1811                           ;Digital2_toolbox.c: 53:     Lcd_Cmd(0x01);
  1812  0339  3001               	movlw	1
  1813  033A  120A  118A  249C  120A  118A  	fcall	_Lcd_Cmd
  1814  033F                     l1371:
  1815                           
  1816                           ;Digital2_toolbox.c: 54:     Lcd_Cmd(0b00000110);
  1817  033F  3006               	movlw	6
  1818  0340  120A  118A  249C  120A  118A  	fcall	_Lcd_Cmd
  1819  0345                     l1373:
  1820                           
  1821                           ;Digital2_toolbox.c: 55:     Lcd_Cmd(0x10);
  1822  0345  3010               	movlw	16
  1823  0346  120A  118A  249C  120A  118A  	fcall	_Lcd_Cmd
  1824  034B                     l1375:
  1825                           
  1826                           ;Digital2_toolbox.c: 56:     Lcd_Cmd(0b00001100);
  1827  034B  300C               	movlw	12
  1828  034C  120A  118A  249C  120A  118A  	fcall	_Lcd_Cmd
  1829  0351                     l1377:
  1830                           
  1831                           ;Digital2_toolbox.c: 57:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1832  0351  3082               	movlw	130
  1833  0352  00F7               	movwf	??_Lcd_Init+1
  1834  0353  30DD               	movlw	221
  1835  0354  00F6               	movwf	??_Lcd_Init
  1836  0355                     u957:
  1837  0355  0BF6               	decfsz	??_Lcd_Init,f
  1838  0356  2B55               	goto	u957
  1839  0357  0BF7               	decfsz	??_Lcd_Init+1,f
  1840  0358  2B55               	goto	u957
  1841  0359  2B5A               	nop2
  1842  035A                     l69:
  1843  035A  0008               	return
  1844  035B                     __end_of_Lcd_Init:
  1845                           
  1846                           	psect	text4
  1847  049C                     __ptext4:	
  1848 ;; *************** function _Lcd_Cmd *****************
  1849 ;; Defined at:
  1850 ;;		line 28 in file "Digital2_toolbox.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;  a               1    wreg     unsigned char 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;  a               1    5[COMMON] unsigned char 
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      void 
  1857 ;; Registers used:
  1858 ;;		wreg
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1864 ;;      Params:         0       0       0       0       0
  1865 ;;      Locals:         1       0       0       0       0
  1866 ;;      Temps:          2       0       0       0       0
  1867 ;;      Totals:         3       0       0       0       0
  1868 ;;Total ram usage:        3 bytes
  1869 ;; Hardware stack levels used: 1
  1870 ;; Hardware stack levels required when called: 1
  1871 ;; This function calls:
  1872 ;;		Nothing
  1873 ;; This function is called by:
  1874 ;;		_Lcd_Init
  1875 ;;		_main
  1876 ;;		_Lcd_Clear
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           
  1881                           ;psect for function _Lcd_Cmd
  1882  049C                     _Lcd_Cmd:
  1883                           
  1884                           ;incstack = 0
  1885                           ; Regs used in _Lcd_Cmd: [wreg]
  1886                           ;Lcd_Cmd@a stored from wreg
  1887  049C  00F5               	movwf	Lcd_Cmd@a
  1888  049D                     l1319:
  1889                           
  1890                           ;Digital2_toolbox.c: 29:     RE0 = 0;
  1891  049D  1283               	bcf	3,5	;RP0=0, select bank0
  1892  049E  1303               	bcf	3,6	;RP1=0, select bank0
  1893  049F  1009               	bcf	9,0	;volatile
  1894  04A0                     l1321:
  1895                           
  1896                           ;Digital2_toolbox.c: 30:     PORTA = a;
  1897  04A0  0875               	movf	Lcd_Cmd@a,w
  1898  04A1  0085               	movwf	5	;volatile
  1899  04A2                     l1323:
  1900                           
  1901                           ;Digital2_toolbox.c: 31:     RE1 = 1;
  1902  04A2  1489               	bsf	9,1	;volatile
  1903                           
  1904                           ;Digital2_toolbox.c: 32:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1905  04A3  3006               	movlw	6
  1906  04A4  00F4               	movwf	??_Lcd_Cmd+1
  1907  04A5  3030               	movlw	48
  1908  04A6  00F3               	movwf	??_Lcd_Cmd
  1909  04A7                     u967:
  1910  04A7  0BF3               	decfsz	??_Lcd_Cmd,f
  1911  04A8  2CA7               	goto	u967
  1912  04A9  0BF4               	decfsz	??_Lcd_Cmd+1,f
  1913  04AA  2CA7               	goto	u967
  1914  04AB  0000               	nop
  1915  04AC                     l1325:
  1916                           
  1917                           ;Digital2_toolbox.c: 33:     RE1 = 0;
  1918  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  1919  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  1920  04AE  1089               	bcf	9,1	;volatile
  1921  04AF                     l63:
  1922  04AF  0008               	return
  1923  04B0                     __end_of_Lcd_Cmd:
  1924                           
  1925                           	psect	text5
  1926  03B0                     __ptext5:	
  1927 ;; *************** function _I2C_Master_Init *****************
  1928 ;; Defined at:
  1929 ;;		line 171 in file "Digital2_toolbox.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  c               4   13[BANK0 ] const unsigned long 
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;		None
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      void 
  1936 ;; Registers used:
  1937 ;;		wreg, status,2, status,0, pclath, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1943 ;;      Params:         0       4       0       0       0
  1944 ;;      Locals:         0       0       0       0       0
  1945 ;;      Temps:          4       0       0       0       0
  1946 ;;      Totals:         4       4       0       0       0
  1947 ;;Total ram usage:        8 bytes
  1948 ;; Hardware stack levels used: 1
  1949 ;; Hardware stack levels required when called: 2
  1950 ;; This function calls:
  1951 ;;		___lldiv
  1952 ;; This function is called by:
  1953 ;;		_setup
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           
  1958                           ;psect for function _I2C_Master_Init
  1959  03B0                     _I2C_Master_Init:
  1960  03B0                     l1717:	
  1961                           ;incstack = 0
  1962                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1963                           
  1964                           
  1965                           ;Digital2_toolbox.c: 171: void I2C_Master_Init(const unsigned long c);Digital2_toolbox.c
      +                          : 172: {;Digital2_toolbox.c: 173:     SSPCON = 0b00101000;
  1966  03B0  3028               	movlw	40
  1967  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  1968  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  1969  03B3  0094               	movwf	20	;volatile
  1970  03B4                     l1719:
  1971                           
  1972                           ;Digital2_toolbox.c: 174:     SSPCON2 = 0;
  1973  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  1974  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  1975  03B6  0191               	clrf	17	;volatile
  1976  03B7                     l1721:
  1977                           
  1978                           ;Digital2_toolbox.c: 175:     SSPADD = (4000000/(4*c))-1;
  1979  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  1980  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  1981  03B9  082D               	movf	I2C_Master_Init@c,w
  1982  03BA  00F4               	movwf	??_I2C_Master_Init
  1983  03BB  082E               	movf	I2C_Master_Init@c+1,w
  1984  03BC  00F5               	movwf	??_I2C_Master_Init+1
  1985  03BD  082F               	movf	I2C_Master_Init@c+2,w
  1986  03BE  00F6               	movwf	??_I2C_Master_Init+2
  1987  03BF  0830               	movf	I2C_Master_Init@c+3,w
  1988  03C0  00F7               	movwf	??_I2C_Master_Init+3
  1989  03C1  3002               	movlw	2
  1990  03C2                     u675:
  1991  03C2  1003               	clrc
  1992  03C3  0DF4               	rlf	??_I2C_Master_Init,f
  1993  03C4  0DF5               	rlf	??_I2C_Master_Init+1,f
  1994  03C5  0DF6               	rlf	??_I2C_Master_Init+2,f
  1995  03C6  0DF7               	rlf	??_I2C_Master_Init+3,f
  1996  03C7                     u670:
  1997  03C7  3EFF               	addlw	-1
  1998  03C8  1D03               	skipz
  1999  03C9  2BC2               	goto	u675
  2000  03CA  0877               	movf	??_I2C_Master_Init+3,w
  2001  03CB  00A3               	movwf	___lldiv@divisor+3
  2002  03CC  0876               	movf	??_I2C_Master_Init+2,w
  2003  03CD  00A2               	movwf	___lldiv@divisor+2
  2004  03CE  0875               	movf	??_I2C_Master_Init+1,w
  2005  03CF  00A1               	movwf	___lldiv@divisor+1
  2006  03D0  0874               	movf	??_I2C_Master_Init,w
  2007  03D1  00A0               	movwf	___lldiv@divisor
  2008  03D2  3000               	movlw	0
  2009  03D3  00A7               	movwf	___lldiv@dividend+3
  2010  03D4  303D               	movlw	61
  2011  03D5  00A6               	movwf	___lldiv@dividend+2
  2012  03D6  3009               	movlw	9
  2013  03D7  00A5               	movwf	___lldiv@dividend+1
  2014  03D8  3000               	movlw	0
  2015  03D9  00A4               	movwf	___lldiv@dividend
  2016  03DA  120A  118A  229B  120A  118A  	fcall	___lldiv
  2017  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  2018  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  2019  03E1  0820               	movf	?___lldiv,w
  2020  03E2  3EFF               	addlw	255
  2021  03E3  1683               	bsf	3,5	;RP0=1, select bank1
  2022  03E4  1303               	bcf	3,6	;RP1=0, select bank1
  2023  03E5  0093               	movwf	19	;volatile
  2024  03E6                     l1723:
  2025                           
  2026                           ;Digital2_toolbox.c: 176:     SSPSTAT = 0;
  2027  03E6  0194               	clrf	20	;volatile
  2028  03E7                     l1725:
  2029                           
  2030                           ;Digital2_toolbox.c: 177:     TRISCbits.TRISC3 = 1;
  2031  03E7  1587               	bsf	7,3	;volatile
  2032  03E8                     l1727:
  2033                           
  2034                           ;Digital2_toolbox.c: 178:     TRISCbits.TRISC4 = 1;
  2035  03E8  1607               	bsf	7,4	;volatile
  2036  03E9                     l121:
  2037  03E9  0008               	return
  2038  03EA                     __end_of_I2C_Master_Init:
  2039                           
  2040                           	psect	text6
  2041  029B                     __ptext6:	
  2042 ;; *************** function ___lldiv *****************
  2043 ;; Defined at:
  2044 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;  divisor         4    0[BANK0 ] unsigned long 
  2047 ;;  dividend        4    4[BANK0 ] unsigned long 
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;  quotient        4    8[BANK0 ] unsigned long 
  2050 ;;  counter         1   12[BANK0 ] unsigned char 
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  4    0[BANK0 ] unsigned long 
  2053 ;; Registers used:
  2054 ;;		wreg, status,2, status,0
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2060 ;;      Params:         0       8       0       0       0
  2061 ;;      Locals:         0       5       0       0       0
  2062 ;;      Temps:          1       0       0       0       0
  2063 ;;      Totals:         1      13       0       0       0
  2064 ;;Total ram usage:       14 bytes
  2065 ;; Hardware stack levels used: 1
  2066 ;; Hardware stack levels required when called: 1
  2067 ;; This function calls:
  2068 ;;		Nothing
  2069 ;; This function is called by:
  2070 ;;		_I2C_Master_Init
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           
  2075                           ;psect for function ___lldiv
  2076  029B                     ___lldiv:
  2077  029B                     l1685:	
  2078                           ;incstack = 0
  2079                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2080                           
  2081  029B  3000               	movlw	0
  2082  029C  1283               	bcf	3,5	;RP0=0, select bank0
  2083  029D  1303               	bcf	3,6	;RP1=0, select bank0
  2084  029E  00AB               	movwf	___lldiv@quotient+3
  2085  029F  3000               	movlw	0
  2086  02A0  00AA               	movwf	___lldiv@quotient+2
  2087  02A1  3000               	movlw	0
  2088  02A2  00A9               	movwf	___lldiv@quotient+1
  2089  02A3  3000               	movlw	0
  2090  02A4  00A8               	movwf	___lldiv@quotient
  2091  02A5  0823               	movf	___lldiv@divisor+3,w
  2092  02A6  0422               	iorwf	___lldiv@divisor+2,w
  2093  02A7  0421               	iorwf	___lldiv@divisor+1,w
  2094  02A8  0420               	iorwf	___lldiv@divisor,w
  2095  02A9  1903               	skipnz
  2096  02AA  2AAC               	goto	u601
  2097  02AB  2AAD               	goto	u600
  2098  02AC                     u601:
  2099  02AC  2AFA               	goto	l1705
  2100  02AD                     u600:
  2101  02AD                     l1687:
  2102  02AD  01AC               	clrf	___lldiv@counter
  2103  02AE  0AAC               	incf	___lldiv@counter,f
  2104  02AF  2ABD               	goto	l1691
  2105  02B0                     l1689:
  2106  02B0  3001               	movlw	1
  2107  02B1  00F3               	movwf	??___lldiv
  2108  02B2                     u615:
  2109  02B2  1003               	clrc
  2110  02B3  0DA0               	rlf	___lldiv@divisor,f
  2111  02B4  0DA1               	rlf	___lldiv@divisor+1,f
  2112  02B5  0DA2               	rlf	___lldiv@divisor+2,f
  2113  02B6  0DA3               	rlf	___lldiv@divisor+3,f
  2114  02B7  0BF3               	decfsz	??___lldiv,f
  2115  02B8  2AB2               	goto	u615
  2116  02B9  3001               	movlw	1
  2117  02BA  00F3               	movwf	??___lldiv
  2118  02BB  0873               	movf	??___lldiv,w
  2119  02BC  07AC               	addwf	___lldiv@counter,f
  2120  02BD                     l1691:
  2121  02BD  1FA3               	btfss	___lldiv@divisor+3,7
  2122  02BE  2AC0               	goto	u621
  2123  02BF  2AC1               	goto	u620
  2124  02C0                     u621:
  2125  02C0  2AB0               	goto	l1689
  2126  02C1                     u620:
  2127  02C1                     l1693:
  2128  02C1  3001               	movlw	1
  2129  02C2  00F3               	movwf	??___lldiv
  2130  02C3                     u635:
  2131  02C3  1003               	clrc
  2132  02C4  0DA8               	rlf	___lldiv@quotient,f
  2133  02C5  0DA9               	rlf	___lldiv@quotient+1,f
  2134  02C6  0DAA               	rlf	___lldiv@quotient+2,f
  2135  02C7  0DAB               	rlf	___lldiv@quotient+3,f
  2136  02C8  0BF3               	decfsz	??___lldiv,f
  2137  02C9  2AC3               	goto	u635
  2138  02CA                     l1695:
  2139  02CA  0823               	movf	___lldiv@divisor+3,w
  2140  02CB  0227               	subwf	___lldiv@dividend+3,w
  2141  02CC  1D03               	skipz
  2142  02CD  2AD8               	goto	u645
  2143  02CE  0822               	movf	___lldiv@divisor+2,w
  2144  02CF  0226               	subwf	___lldiv@dividend+2,w
  2145  02D0  1D03               	skipz
  2146  02D1  2AD8               	goto	u645
  2147  02D2  0821               	movf	___lldiv@divisor+1,w
  2148  02D3  0225               	subwf	___lldiv@dividend+1,w
  2149  02D4  1D03               	skipz
  2150  02D5  2AD8               	goto	u645
  2151  02D6  0820               	movf	___lldiv@divisor,w
  2152  02D7  0224               	subwf	___lldiv@dividend,w
  2153  02D8                     u645:
  2154  02D8  1C03               	skipc
  2155  02D9  2ADB               	goto	u641
  2156  02DA  2ADC               	goto	u640
  2157  02DB                     u641:
  2158  02DB  2AEB               	goto	l1701
  2159  02DC                     u640:
  2160  02DC                     l1697:
  2161  02DC  0820               	movf	___lldiv@divisor,w
  2162  02DD  02A4               	subwf	___lldiv@dividend,f
  2163  02DE  0821               	movf	___lldiv@divisor+1,w
  2164  02DF  1C03               	skipc
  2165  02E0  0F21               	incfsz	___lldiv@divisor+1,w
  2166  02E1  02A5               	subwf	___lldiv@dividend+1,f
  2167  02E2  0822               	movf	___lldiv@divisor+2,w
  2168  02E3  1C03               	skipc
  2169  02E4  0F22               	incfsz	___lldiv@divisor+2,w
  2170  02E5  02A6               	subwf	___lldiv@dividend+2,f
  2171  02E6  0823               	movf	___lldiv@divisor+3,w
  2172  02E7  1C03               	skipc
  2173  02E8  0F23               	incfsz	___lldiv@divisor+3,w
  2174  02E9  02A7               	subwf	___lldiv@dividend+3,f
  2175  02EA                     l1699:
  2176  02EA  1428               	bsf	___lldiv@quotient,0
  2177  02EB                     l1701:
  2178  02EB  3001               	movlw	1
  2179  02EC                     u655:
  2180  02EC  1003               	clrc
  2181  02ED  0CA3               	rrf	___lldiv@divisor+3,f
  2182  02EE  0CA2               	rrf	___lldiv@divisor+2,f
  2183  02EF  0CA1               	rrf	___lldiv@divisor+1,f
  2184  02F0  0CA0               	rrf	___lldiv@divisor,f
  2185  02F1  3EFF               	addlw	-1
  2186  02F2  1D03               	skipz
  2187  02F3  2AEC               	goto	u655
  2188  02F4                     l1703:
  2189  02F4  3001               	movlw	1
  2190  02F5  02AC               	subwf	___lldiv@counter,f
  2191  02F6  1D03               	btfss	3,2
  2192  02F7  2AF9               	goto	u661
  2193  02F8  2AFA               	goto	u660
  2194  02F9                     u661:
  2195  02F9  2AC1               	goto	l1693
  2196  02FA                     u660:
  2197  02FA                     l1705:
  2198  02FA  082B               	movf	___lldiv@quotient+3,w
  2199  02FB  00A3               	movwf	?___lldiv+3
  2200  02FC  082A               	movf	___lldiv@quotient+2,w
  2201  02FD  00A2               	movwf	?___lldiv+2
  2202  02FE  0829               	movf	___lldiv@quotient+1,w
  2203  02FF  00A1               	movwf	?___lldiv+1
  2204  0300  0828               	movf	___lldiv@quotient,w
  2205  0301  00A0               	movwf	?___lldiv
  2206  0302                     l419:
  2207  0302  0008               	return
  2208  0303                     __end_of___lldiv:
  2209                           
  2210                           	psect	text7
  2211  04D1                     __ptext7:	
  2212 ;; *************** function _UART_Write_Char *****************
  2213 ;; Defined at:
  2214 ;;		line 104 in file "Digital2_toolbox.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;  character       1    wreg     unsigned char 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  character       1    3[COMMON] unsigned char 
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  1    wreg      void 
  2221 ;; Registers used:
  2222 ;;		wreg
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2228 ;;      Params:         0       0       0       0       0
  2229 ;;      Locals:         1       0       0       0       0
  2230 ;;      Temps:          0       0       0       0       0
  2231 ;;      Totals:         1       0       0       0       0
  2232 ;;Total ram usage:        1 bytes
  2233 ;; Hardware stack levels used: 1
  2234 ;; Hardware stack levels required when called: 1
  2235 ;; This function calls:
  2236 ;;		Nothing
  2237 ;; This function is called by:
  2238 ;;		_main
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           
  2243                           ;psect for function _UART_Write_Char
  2244  04D1                     _UART_Write_Char:
  2245                           
  2246                           ;incstack = 0
  2247                           ; Regs used in _UART_Write_Char: [wreg]
  2248                           ;UART_Write_Char@character stored from wreg
  2249  04D1  00F3               	movwf	UART_Write_Char@character
  2250  04D2                     l1419:
  2251                           
  2252                           ;Digital2_toolbox.c: 105:     TXREG = character;
  2253  04D2  0873               	movf	UART_Write_Char@character,w
  2254  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  2255  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  2256  04D5  0099               	movwf	25	;volatile
  2257  04D6                     l93:	
  2258                           ;Digital2_toolbox.c: 106:     while (!TXSTAbits.TRMT);
  2259                           
  2260  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  2261  04D7  1303               	bcf	3,6	;RP1=0, select bank1
  2262  04D8  1C98               	btfss	24,1	;volatile
  2263  04D9  2CDB               	goto	u441
  2264  04DA  2CDC               	goto	u440
  2265  04DB                     u441:
  2266  04DB  2CD6               	goto	l93
  2267  04DC                     u440:
  2268  04DC                     l96:
  2269  04DC  0008               	return
  2270  04DD                     __end_of_UART_Write_Char:
  2271                           
  2272                           	psect	text8
  2273  0444                     __ptext8:	
  2274 ;; *************** function _Lcd_Write_String *****************
  2275 ;; Defined at:
  2276 ;;		line 69 in file "Digital2_toolbox.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  a               1    wreg     PTR unsigned char 
  2279 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(5), 
  2280 ;;		 -> STR_5(5), STR_4(4), STR_3(5), STR_2(4), 
  2281 ;;		 -> STR_1(18), 
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2284 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(5), 
  2285 ;;		 -> STR_5(5), STR_4(4), STR_3(5), STR_2(4), 
  2286 ;;		 -> STR_1(18), 
  2287 ;;  i               2    0[BANK0 ] int 
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  1    wreg      void 
  2290 ;; Registers used:
  2291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2297 ;;      Params:         0       0       0       0       0
  2298 ;;      Locals:         0       3       0       0       0
  2299 ;;      Temps:          0       0       0       0       0
  2300 ;;      Totals:         0       3       0       0       0
  2301 ;;Total ram usage:        3 bytes
  2302 ;; Hardware stack levels used: 1
  2303 ;; Hardware stack levels required when called: 2
  2304 ;; This function calls:
  2305 ;;		_Lcd_Write_Char
  2306 ;; This function is called by:
  2307 ;;		_main
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           
  2312                           ;psect for function _Lcd_Write_String
  2313  0444                     _Lcd_Write_String:
  2314                           
  2315                           ;incstack = 0
  2316                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2317                           ;Lcd_Write_String@a stored from wreg
  2318  0444  1283               	bcf	3,5	;RP0=0, select bank0
  2319  0445  1303               	bcf	3,6	;RP1=0, select bank0
  2320  0446  00A2               	movwf	Lcd_Write_String@a
  2321  0447                     l1733:
  2322                           
  2323                           ;Digital2_toolbox.c: 70:     int i;;Digital2_toolbox.c: 71:     for (i = 0; a[i] != '\0'
      +                          ; i++){
  2324  0447  01A0               	clrf	Lcd_Write_String@i
  2325  0448  01A1               	clrf	Lcd_Write_String@i+1
  2326  0449  2C5F               	goto	l1739
  2327  044A                     l1735:
  2328                           
  2329                           ;Digital2_toolbox.c: 72:         Lcd_Write_Char(a[i]);
  2330  044A  0820               	movf	Lcd_Write_String@i,w
  2331  044B  0722               	addwf	Lcd_Write_String@a,w
  2332  044C  0084               	movwf	4
  2333  044D  120A  118A  241A  120A  118A  	fcall	stringdir
  2334  0452  120A  118A  246D  120A  118A  	fcall	_Lcd_Write_Char
  2335  0457                     l1737:
  2336                           
  2337                           ;Digital2_toolbox.c: 73:     }
  2338  0457  3001               	movlw	1
  2339  0458  1283               	bcf	3,5	;RP0=0, select bank0
  2340  0459  1303               	bcf	3,6	;RP1=0, select bank0
  2341  045A  07A0               	addwf	Lcd_Write_String@i,f
  2342  045B  1803               	skipnc
  2343  045C  0AA1               	incf	Lcd_Write_String@i+1,f
  2344  045D  3000               	movlw	0
  2345  045E  07A1               	addwf	Lcd_Write_String@i+1,f
  2346  045F                     l1739:
  2347  045F  0820               	movf	Lcd_Write_String@i,w
  2348  0460  0722               	addwf	Lcd_Write_String@a,w
  2349  0461  0084               	movwf	4
  2350  0462  120A  118A  241A  120A  118A  	fcall	stringdir
  2351  0467  3A00               	xorlw	0
  2352  0468  1D03               	skipz
  2353  0469  2C6B               	goto	u701
  2354  046A  2C6C               	goto	u700
  2355  046B                     u701:
  2356  046B  2C4A               	goto	l1735
  2357  046C                     u700:
  2358  046C                     l78:
  2359  046C  0008               	return
  2360  046D                     __end_of_Lcd_Write_String:
  2361                           
  2362                           	psect	text9
  2363  046D                     __ptext9:	
  2364 ;; *************** function _Lcd_Write_Char *****************
  2365 ;; Defined at:
  2366 ;;		line 60 in file "Digital2_toolbox.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  a               1    wreg     unsigned char 
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;  a               1    5[COMMON] unsigned char 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  1    wreg      void 
  2373 ;; Registers used:
  2374 ;;		wreg
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2380 ;;      Params:         0       0       0       0       0
  2381 ;;      Locals:         1       0       0       0       0
  2382 ;;      Temps:          2       0       0       0       0
  2383 ;;      Totals:         3       0       0       0       0
  2384 ;;Total ram usage:        3 bytes
  2385 ;; Hardware stack levels used: 1
  2386 ;; Hardware stack levels required when called: 1
  2387 ;; This function calls:
  2388 ;;		Nothing
  2389 ;; This function is called by:
  2390 ;;		_Lcd_Write_String
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394                           
  2395                           ;psect for function _Lcd_Write_Char
  2396  046D                     _Lcd_Write_Char:
  2397                           
  2398                           ;incstack = 0
  2399                           ; Regs used in _Lcd_Write_Char: [wreg]
  2400                           ;Lcd_Write_Char@a stored from wreg
  2401  046D  00F5               	movwf	Lcd_Write_Char@a
  2402  046E                     l1709:
  2403                           
  2404                           ;Digital2_toolbox.c: 61:     PORTA = a;
  2405  046E  0875               	movf	Lcd_Write_Char@a,w
  2406  046F  1283               	bcf	3,5	;RP0=0, select bank0
  2407  0470  1303               	bcf	3,6	;RP1=0, select bank0
  2408  0471  0085               	movwf	5	;volatile
  2409  0472                     l1711:
  2410                           
  2411                           ;Digital2_toolbox.c: 62:     RE0 = 1;
  2412  0472  1409               	bsf	9,0	;volatile
  2413  0473                     l1713:
  2414                           
  2415                           ;Digital2_toolbox.c: 63:     RE1 = 1;
  2416  0473  1489               	bsf	9,1	;volatile
  2417                           
  2418                           ;Digital2_toolbox.c: 64:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  2419  0474  3021               	movlw	33
  2420  0475  00F3               	movwf	??_Lcd_Write_Char
  2421  0476                     u977:
  2422  0476  0BF3               	decfsz	??_Lcd_Write_Char,f
  2423  0477  2C76               	goto	u977
  2424  0478                     l1715:
  2425                           
  2426                           ;Digital2_toolbox.c: 65:     RE1 = 0;
  2427  0478  1283               	bcf	3,5	;RP0=0, select bank0
  2428  0479  1303               	bcf	3,6	;RP1=0, select bank0
  2429  047A  1089               	bcf	9,1	;volatile
  2430                           
  2431                           ;Digital2_toolbox.c: 66:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2432  047B  300D               	movlw	13
  2433  047C  00F4               	movwf	??_Lcd_Write_Char+1
  2434  047D  30FB               	movlw	251
  2435  047E  00F3               	movwf	??_Lcd_Write_Char
  2436  047F                     u987:
  2437  047F  0BF3               	decfsz	??_Lcd_Write_Char,f
  2438  0480  2C7F               	goto	u987
  2439  0481  0BF4               	decfsz	??_Lcd_Write_Char+1,f
  2440  0482  2C7F               	goto	u987
  2441  0483  2C84               	nop2
  2442  0484                     l72:
  2443  0484  0008               	return
  2444  0485                     __end_of_Lcd_Write_Char:
  2445                           
  2446                           	psect	text10
  2447  04DD                     __ptext10:	
  2448 ;; *************** function _I2C_Master_Write *****************
  2449 ;; Defined at:
  2450 ;;		line 220 in file "Digital2_toolbox.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;  d               2    3[COMMON] unsigned int 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;		None
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      void 
  2457 ;; Registers used:
  2458 ;;		wreg, status,2, status,0, pclath, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2464 ;;      Params:         2       0       0       0       0
  2465 ;;      Locals:         0       0       0       0       0
  2466 ;;      Temps:          0       0       0       0       0
  2467 ;;      Totals:         2       0       0       0       0
  2468 ;;Total ram usage:        2 bytes
  2469 ;; Hardware stack levels used: 1
  2470 ;; Hardware stack levels required when called: 2
  2471 ;; This function calls:
  2472 ;;		_I2C_Master_Wait
  2473 ;; This function is called by:
  2474 ;;		_main
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           
  2479                           ;psect for function _I2C_Master_Write
  2480  04DD                     _I2C_Master_Write:
  2481  04DD                     l1749:	
  2482                           ;incstack = 0
  2483                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2484                           
  2485                           
  2486                           ;Digital2_toolbox.c: 220: void I2C_Master_Write(unsigned d);Digital2_toolbox.c: 221: {;D
      +                          igital2_toolbox.c: 222:     I2C_Master_Wait();
  2487  04DD  120A  118A  24C4  120A  118A  	fcall	_I2C_Master_Wait
  2488  04E2                     l1751:
  2489                           
  2490                           ;Digital2_toolbox.c: 223:     SSPBUF = d;
  2491  04E2  0873               	movf	I2C_Master_Write@d,w
  2492  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  2493  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  2494  04E5  0093               	movwf	19	;volatile
  2495  04E6                     l139:
  2496  04E6  0008               	return
  2497  04E7                     __end_of_I2C_Master_Write:
  2498                           
  2499                           	psect	text11
  2500  04E7                     __ptext11:	
  2501 ;; *************** function _I2C_Master_Stop *****************
  2502 ;; Defined at:
  2503 ;;		line 210 in file "Digital2_toolbox.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;		None
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;		None
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  1    wreg      void 
  2510 ;; Registers used:
  2511 ;;		wreg, status,2, status,0, pclath, cstack
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2517 ;;      Params:         0       0       0       0       0
  2518 ;;      Locals:         0       0       0       0       0
  2519 ;;      Temps:          0       0       0       0       0
  2520 ;;      Totals:         0       0       0       0       0
  2521 ;;Total ram usage:        0 bytes
  2522 ;; Hardware stack levels used: 1
  2523 ;; Hardware stack levels required when called: 2
  2524 ;; This function calls:
  2525 ;;		_I2C_Master_Wait
  2526 ;; This function is called by:
  2527 ;;		_main
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           
  2532                           ;psect for function _I2C_Master_Stop
  2533  04E7                     _I2C_Master_Stop:
  2534  04E7                     l1745:	
  2535                           ;incstack = 0
  2536                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2537                           
  2538                           
  2539                           ;Digital2_toolbox.c: 212:     I2C_Master_Wait();
  2540  04E7  120A  118A  24C4  120A  118A  	fcall	_I2C_Master_Wait
  2541  04EC                     l1747:
  2542                           
  2543                           ;Digital2_toolbox.c: 213:     SSPCON2bits.PEN = 1;
  2544  04EC  1683               	bsf	3,5	;RP0=1, select bank1
  2545  04ED  1303               	bcf	3,6	;RP1=0, select bank1
  2546  04EE  1511               	bsf	17,2	;volatile
  2547  04EF                     l136:
  2548  04EF  0008               	return
  2549  04F0                     __end_of_I2C_Master_Stop:
  2550                           
  2551                           	psect	text12
  2552  04F0                     __ptext12:	
  2553 ;; *************** function _I2C_Master_Start *****************
  2554 ;; Defined at:
  2555 ;;		line 194 in file "Digital2_toolbox.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;		None
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;		None
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  1    wreg      void 
  2562 ;; Registers used:
  2563 ;;		wreg, status,2, status,0, pclath, cstack
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2569 ;;      Params:         0       0       0       0       0
  2570 ;;      Locals:         0       0       0       0       0
  2571 ;;      Temps:          0       0       0       0       0
  2572 ;;      Totals:         0       0       0       0       0
  2573 ;;Total ram usage:        0 bytes
  2574 ;; Hardware stack levels used: 1
  2575 ;; Hardware stack levels required when called: 2
  2576 ;; This function calls:
  2577 ;;		_I2C_Master_Wait
  2578 ;; This function is called by:
  2579 ;;		_main
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           
  2584                           ;psect for function _I2C_Master_Start
  2585  04F0                     _I2C_Master_Start:
  2586  04F0                     l1741:	
  2587                           ;incstack = 0
  2588                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2589                           
  2590                           
  2591                           ;Digital2_toolbox.c: 196:     I2C_Master_Wait();
  2592  04F0  120A  118A  24C4  120A  118A  	fcall	_I2C_Master_Wait
  2593  04F5                     l1743:
  2594                           
  2595                           ;Digital2_toolbox.c: 197:     SSPCON2bits.SEN = 1;
  2596  04F5  1683               	bsf	3,5	;RP0=1, select bank1
  2597  04F6  1303               	bcf	3,6	;RP1=0, select bank1
  2598  04F7  1411               	bsf	17,0	;volatile
  2599  04F8                     l130:
  2600  04F8  0008               	return
  2601  04F9                     __end_of_I2C_Master_Start:
  2602                           
  2603                           	psect	text13
  2604  03EA                     __ptext13:	
  2605 ;; *************** function _I2C_Master_Read *****************
  2606 ;; Defined at:
  2607 ;;		line 229 in file "Digital2_toolbox.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  a               2    3[COMMON] unsigned short 
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;  temp            2    0[BANK0 ] unsigned short 
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  2    3[COMMON] unsigned short 
  2614 ;; Registers used:
  2615 ;;		wreg, status,2, status,0, pclath, cstack
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2621 ;;      Params:         2       0       0       0       0
  2622 ;;      Locals:         0       2       0       0       0
  2623 ;;      Temps:          2       0       0       0       0
  2624 ;;      Totals:         4       2       0       0       0
  2625 ;;Total ram usage:        6 bytes
  2626 ;; Hardware stack levels used: 1
  2627 ;; Hardware stack levels required when called: 2
  2628 ;; This function calls:
  2629 ;;		_I2C_Master_Wait
  2630 ;; This function is called by:
  2631 ;;		_main
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           
  2636                           ;psect for function _I2C_Master_Read
  2637  03EA                     _I2C_Master_Read:
  2638  03EA                     l1753:	
  2639                           ;incstack = 0
  2640                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2641                           
  2642                           
  2643                           ;Digital2_toolbox.c: 229: unsigned short I2C_Master_Read(unsigned short a);Digital2_tool
      +                          box.c: 230: {;Digital2_toolbox.c: 231:     unsigned short temp;;Digital2_toolbox.c: 232:
      +                               I2C_Master_Wait();
  2644  03EA  120A  118A  24C4  120A  118A  	fcall	_I2C_Master_Wait
  2645  03EF                     l1755:
  2646                           
  2647                           ;Digital2_toolbox.c: 233:     SSPCON2bits.RCEN = 1;
  2648  03EF  1683               	bsf	3,5	;RP0=1, select bank1
  2649  03F0  1303               	bcf	3,6	;RP1=0, select bank1
  2650  03F1  1591               	bsf	17,3	;volatile
  2651                           
  2652                           ;Digital2_toolbox.c: 234:     I2C_Master_Wait();
  2653  03F2  120A  118A  24C4  120A  118A  	fcall	_I2C_Master_Wait
  2654  03F7                     l1757:
  2655                           
  2656                           ;Digital2_toolbox.c: 235:     temp = SSPBUF;
  2657  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  2658  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  2659  03F9  0813               	movf	19,w	;volatile
  2660  03FA  00F5               	movwf	??_I2C_Master_Read
  2661  03FB  01F6               	clrf	??_I2C_Master_Read+1
  2662  03FC  0875               	movf	??_I2C_Master_Read,w
  2663  03FD  00A0               	movwf	I2C_Master_Read@temp
  2664  03FE  0876               	movf	??_I2C_Master_Read+1,w
  2665  03FF  00A1               	movwf	I2C_Master_Read@temp+1
  2666  0400                     l1759:
  2667                           
  2668                           ;Digital2_toolbox.c: 236:     I2C_Master_Wait();
  2669  0400  120A  118A  24C4  120A  118A  	fcall	_I2C_Master_Wait
  2670  0405                     l1761:
  2671                           
  2672                           ;Digital2_toolbox.c: 237:     if(a == 1){
  2673  0405  0373               	decf	I2C_Master_Read@a,w
  2674  0406  0474               	iorwf	I2C_Master_Read@a+1,w
  2675  0407  1D03               	btfss	3,2
  2676  0408  2C0A               	goto	u711
  2677  0409  2C0B               	goto	u710
  2678  040A                     u711:
  2679  040A  2C0F               	goto	l142
  2680  040B                     u710:
  2681  040B                     l1763:
  2682                           
  2683                           ;Digital2_toolbox.c: 238:         SSPCON2bits.ACKDT = 0;
  2684  040B  1683               	bsf	3,5	;RP0=1, select bank1
  2685  040C  1303               	bcf	3,6	;RP1=0, select bank1
  2686  040D  1291               	bcf	17,5	;volatile
  2687                           
  2688                           ;Digital2_toolbox.c: 239:     }else{
  2689  040E  2C12               	goto	l143
  2690  040F                     l142:
  2691                           
  2692                           ;Digital2_toolbox.c: 240:         SSPCON2bits.ACKDT = 1;
  2693  040F  1683               	bsf	3,5	;RP0=1, select bank1
  2694  0410  1303               	bcf	3,6	;RP1=0, select bank1
  2695  0411  1691               	bsf	17,5	;volatile
  2696  0412                     l143:	
  2697                           ;Digital2_toolbox.c: 241:     }
  2698                           
  2699                           
  2700                           ;Digital2_toolbox.c: 242:     SSPCON2bits.ACKEN = 1;
  2701  0412  1611               	bsf	17,4	;volatile
  2702  0413                     l1765:
  2703                           
  2704                           ;Digital2_toolbox.c: 243:     return temp;
  2705  0413  1283               	bcf	3,5	;RP0=0, select bank0
  2706  0414  1303               	bcf	3,6	;RP1=0, select bank0
  2707  0415  0821               	movf	I2C_Master_Read@temp+1,w
  2708  0416  00F4               	movwf	?_I2C_Master_Read+1
  2709  0417  0820               	movf	I2C_Master_Read@temp,w
  2710  0418  00F3               	movwf	?_I2C_Master_Read
  2711  0419                     l144:
  2712  0419  0008               	return
  2713  041A                     __end_of_I2C_Master_Read:
  2714                           
  2715                           	psect	text14
  2716  04C4                     __ptext14:	
  2717 ;; *************** function _I2C_Master_Wait *****************
  2718 ;; Defined at:
  2719 ;;		line 187 in file "Digital2_toolbox.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;		None
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;		None
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      void 
  2726 ;; Registers used:
  2727 ;;		wreg, status,2
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2733 ;;      Params:         0       0       0       0       0
  2734 ;;      Locals:         0       0       0       0       0
  2735 ;;      Temps:          0       0       0       0       0
  2736 ;;      Totals:         0       0       0       0       0
  2737 ;;Total ram usage:        0 bytes
  2738 ;; Hardware stack levels used: 1
  2739 ;; Hardware stack levels required when called: 1
  2740 ;; This function calls:
  2741 ;;		Nothing
  2742 ;; This function is called by:
  2743 ;;		_I2C_Master_Start
  2744 ;;		_I2C_Master_Stop
  2745 ;;		_I2C_Master_Write
  2746 ;;		_I2C_Master_Read
  2747 ;;		_I2C_Master_RepeatedStart
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           
  2752                           ;psect for function _I2C_Master_Wait
  2753  04C4                     _I2C_Master_Wait:
  2754  04C4                     l1729:	
  2755                           ;incstack = 0
  2756                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2757                           
  2758  04C4                     l124:	
  2759                           ;Digital2_toolbox.c: 189:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2760                           
  2761  04C4  1683               	bsf	3,5	;RP0=1, select bank1
  2762  04C5  1303               	bcf	3,6	;RP1=0, select bank1
  2763  04C6  1914               	btfsc	20,2	;volatile
  2764  04C7  2CC9               	goto	u681
  2765  04C8  2CCA               	goto	u680
  2766  04C9                     u681:
  2767  04C9  2CC4               	goto	l124
  2768  04CA                     u680:
  2769  04CA                     l1731:
  2770  04CA  0811               	movf	17,w	;volatile
  2771  04CB  391F               	andlw	31
  2772  04CC  1D03               	btfss	3,2
  2773  04CD  2CCF               	goto	u691
  2774  04CE  2CD0               	goto	u690
  2775  04CF                     u691:
  2776  04CF  2CC4               	goto	l124
  2777  04D0                     u690:
  2778  04D0                     l127:
  2779  04D0  0008               	return
  2780  04D1                     __end_of_I2C_Master_Wait:
  2781                           
  2782                           	psect	text15
  2783  04B0                     __ptext15:	
  2784 ;; *************** function _isr *****************
  2785 ;; Defined at:
  2786 ;;		line 264 in file "main.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;		None
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;		None
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  1    wreg      void 
  2793 ;; Registers used:
  2794 ;;		wreg, status,2, status,0
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2800 ;;      Params:         0       0       0       0       0
  2801 ;;      Locals:         0       0       0       0       0
  2802 ;;      Temps:          3       0       0       0       0
  2803 ;;      Totals:         3       0       0       0       0
  2804 ;;Total ram usage:        3 bytes
  2805 ;; Hardware stack levels used: 1
  2806 ;; This function calls:
  2807 ;;		Nothing
  2808 ;; This function is called by:
  2809 ;;		Interrupt level 1
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           
  2814                           ;psect for function _isr
  2815  04B0                     _isr:
  2816  04B0                     i1l1677:
  2817                           
  2818                           ;main.c: 265:     if(TMR1IF){
  2819  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  2820  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  2821  04B2  1C0C               	btfss	12,0	;volatile
  2822  04B3  2CB5               	goto	u59_21
  2823  04B4  2CB6               	goto	u59_20
  2824  04B5                     u59_21:
  2825  04B5  2CBD               	goto	i1l297
  2826  04B6                     u59_20:
  2827  04B6                     i1l1679:
  2828                           
  2829                           ;main.c: 266:         TMR1 = 0;
  2830  04B6  018E               	clrf	14	;volatile
  2831  04B7  018F               	clrf	15	;volatile
  2832  04B8                     i1l1681:
  2833                           
  2834                           ;main.c: 267:         time++;
  2835  04B8  3001               	movlw	1
  2836  04B9  00F0               	movwf	??_isr
  2837  04BA  0870               	movf	??_isr,w
  2838  04BB  07B9               	addwf	_time,f
  2839  04BC                     i1l1683:
  2840                           
  2841                           ;main.c: 268:         TMR1IF = 0;
  2842  04BC  100C               	bcf	12,0	;volatile
  2843  04BD                     i1l297:
  2844  04BD  0872               	movf	??_isr+2,w
  2845  04BE  008A               	movwf	10
  2846  04BF  0E71               	swapf	??_isr+1,w
  2847  04C0  0083               	movwf	3
  2848  04C1  0EFE               	swapf	btemp,f
  2849  04C2  0E7E               	swapf	btemp,w
  2850  04C3  0009               	retfie
  2851  04C4                     __end_of_isr:
  2852  007E                     btemp	set	126	;btemp
  2853  007E                     wtemp0	set	126
  2854                           
  2855                           	psect	intentry
  2856  0004                     __pintentry:	
  2857                           ;incstack = 0
  2858                           ; Regs used in _isr: [wreg+status,2+status,0]
  2859                           
  2860  0004                     interrupt_function:
  2861  007E                     saved_w	set	btemp
  2862  0004  00FE               	movwf	btemp
  2863  0005  0E03               	swapf	3,w
  2864  0006  00F1               	movwf	??_isr+1
  2865  0007  080A               	movf	10,w
  2866  0008  00F2               	movwf	??_isr+2
  2867  0009  120A  118A  2CB0   	ljmp	_isr
  2868                           
  2869                           	psect	config
  2870                           
  2871                           ;Config register CONFIG1 @ 0x2007
  2872                           ;	Oscillator Selection bits
  2873                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2874                           ;	Watchdog Timer Enable bit
  2875                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2876                           ;	Power-up Timer Enable bit
  2877                           ;	PWRTE = OFF, PWRT disabled
  2878                           ;	RE3/MCLR pin function select bit
  2879                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2880                           ;	Code Protection bit
  2881                           ;	CP = OFF, Program memory code protection is disabled
  2882                           ;	Data Code Protection bit
  2883                           ;	CPD = OFF, Data memory code protection is disabled
  2884                           ;	Brown Out Reset Selection bits
  2885                           ;	BOREN = OFF, BOR disabled
  2886                           ;	Internal External Switchover bit
  2887                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2888                           ;	Fail-Safe Clock Monitor Enabled bit
  2889                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2890                           ;	Low Voltage Programming Enable bit
  2891                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2892                           ;	In-Circuit Debugger Mode bit
  2893                           ;	DEBUG = 0x1, unprogrammed default
  2894  2007                     	org	8199
  2895  2007  20D4               	dw	8404
  2896                           
  2897                           ;Config register CONFIG2 @ 0x2008
  2898                           ;	Brown-out Reset Selection bit
  2899                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2900                           ;	Flash Program Memory Self Write Enable bits
  2901                           ;	WRT = OFF, Write protection off
  2902  2008                     	org	8200
  2903  2008  3FFF               	dw	16383

Data Sizes:
    Strings     36
    Constant    0
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     21      36
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 18
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[5]), 
		 -> STR_5(CODE[5]), STR_4(CODE[4]), STR_3(CODE[5]), STR_2(CODE[4]), 
		 -> STR_1(CODE[18]), 


Critical Paths under _main in COMMON

    _setup->_I2C_Master_Init
    _setup->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _Lcd_Write_String->_Lcd_Write_Char

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    2539
                                             17 BANK0      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _Lcd_Cmd
                   _Lcd_Write_String
                    _UART_Write_Char
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     564
                    _I2C_Master_Init
                           _Lcd_Init
                          _UART_Init
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      22
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Char                                      1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     485
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0      31
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    1021
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     425
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
   _UART_Write_Char
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
     _UART_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      24       5       45.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2F      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Sep 02 23:06:45 2021

                        pc 0002                _SSPSTATbits 0094                         l63 04AF  
                       l72 0484                         l81 049B                         l93 04D6  
                       l69 035A                         l78 046C                         l96 04DC  
                       _cL 0078                         _dL 0041                         _mL 0079  
                       _uL 0040                         fsr 0004                        l121 03E9  
                      l130 04F8                        l124 04C4                        l142 040F  
                      l127 04D0                        l143 0412                        l144 0419  
                      l136 04EF                        l139 04E6                        l273 004A  
                      l290 039B                        l419 0302                        l291 03AF  
                      l288 0397                        _GIE 005F                        _RD0 0040  
                      _RD1 0041                        _RE0 0048                        _RD2 0042  
                      _RE1 0049                        _PR2 0092                        u440 04DC  
                      u600 02AD                        u441 04DB                        u601 02AC  
                      u700 046C                        u620 02C1                        u701 046B  
                      u621 02C0                        u710 040B                        u711 040A  
                      u615 02B2                        u640 02DC                        u720 039B  
                      u800 021D                        u641 02DB                        u721 039A  
                      u801 021C                        u810 0226                        u730 01C4  
                      u635 02C3                        u811 0225                        u731 01C3  
                      u660 02FA                        u820 022B                        u740 01C9  
                      u661 02F9                        u645 02D8                        u821 022A  
                      u741 01C8                        u670 03C7                        u830 0230  
                      u750 01E0                        u655 02EC                        u831 022F  
                      u751 01DF                        u680 04CA                        u840 0277  
                      u760 01E5                        u681 04C9                        u841 0276  
                      u761 01E4                        u690 04D0                        u770 020A  
                      u691 04CF                        u675 03C2                        u907 0249  
                      u771 0209                        u780 020F                        u917 0257  
                      u781 020E                        u790 0214                        u927 030A  
                      u791 0213                        u937 0319                        u857 0077  
                      u947 0325                        u867 0100                        u957 0355  
                      u877 0141                        u967 04A7                        u887 017D  
                      u977 0476                        u897 01FB                        u987 047F  
                      _isr 04B0                        fsr0 0004              _keep_lock_off 003D  
                     l1321 04A0                       l1323 04A2                       l1325 04AC  
                     l1319 049D                       l1351 0303                       l1361 0323  
                     l1353 0306                       l1419 04D2                       l1371 033F  
                     l1363 0327                       l1355 030F                       l1701 02EB  
                     l1373 0345                       l1365 032D                       l1357 0315  
                     l1711 0472                       l1703 02F4                       l1375 034B  
                     l1367 0333                       l1359 031D                       l1391 0496  
                     l1713 0473                       l1705 02FA                       l1721 03B7  
                     l1377 0351                       l1369 0339                       l1393 0498  
                     l1801 0391                       l1731 04CA                       l1715 0478  
                     l1723 03E6                       l1387 0485                       l1803 0393  
                     l1741 04F0                       l1709 046E                       l1733 0447  
                     l1725 03E7                       l1717 03B0                       l1389 0493  
                     l1805 0394                       l1901 01B7                       l1821 003E  
                     l1743 04F5                       l1751 04E2                       l1735 044A  
                     l1727 03E8                       l1719 03B4                       l1807 0396  
                     l1911 01D1                       l1903 01BD                       l1831 008C  
                     l1823 0044                       l1815 0027                       l1729 04C4  
                     l1761 0405                       l1753 03EA                       l1745 04E7  
                     l1737 0457                       l1809 039E                       l1921 01EB  
                     l1913 01D7                       l1905 01C4                       l1841 00B6  
                     l1833 0095                       l1825 006F                       l1817 002C  
                     l1763 040B                       l1755 03EF                       l1747 04EC  
                     l1739 045F                       l1691 02BD                       l1771 0363  
                     l1931 0203                       l1923 01F1                       l1907 01C9  
                     l1915 01DB                       l1851 00D7                       l1843 00BB  
                     l1835 009A                       l1827 007E                       l1819 0032  
                     l1765 0413                       l1757 03F7                       l1749 04DD  
                     l1693 02C1                       l1685 029B                       l1781 0369  
                     l1773 0365                       l1941 0216                       l1925 01F4  
                     l1917 01E0                       l1933 0205                       l1909 01CB  
                     l1861 0107                       l1853 00DC                       l1845 00C0  
                     l1837 009F                       l1829 0083                       l1759 0400  
                     l1695 02CA                       l1687 02AD                       l1791 0379  
                     l1783 036A                       l1775 0366                       l1951 0221  
                     l1935 020A                       l1943 0217                       l1927 01F5  
                     l1919 01E5                       l1871 0139                       l1863 0118  
                     l1855 00E5                       l1847 00C9                       l1839 00A8  
                     l1697 02DC                       l1689 02B0                       l1793 0388  
                     l1785 036D                       l1777 0367                       l1769 035B  
                     l1961 0239                       l1953 0226                       l1945 021D  
                     l1937 020F                       l1929 0200                       l1881 0162  
                     l1873 0148                       l1865 011D                       l1857 00F3  
                     l1849 00D2                       l1699 02EA                       l1795 038B  
                     l1787 036F                       l1779 0368                       l1971 0251  
                     l1963 023F                       l1955 022B                       l1947 021E  
                     l1939 0214                       l1891 0193                       l1883 0170  
                     l1875 014F                       l1867 0126                       l1859 00F8  
                     l1797 038D                       l1789 0374                       l1973 025C  
                     l1965 0242                       l1957 0230                       l1949 021F  
                     l1893 0199                       l1885 0175                       l1877 0154  
                     l1869 0134                       l1799 0390                       l1991 028E  
                     l1983 0278                       l1975 0260                       l1967 0243  
                     l1959 0233                       l1895 01A2                       l1887 0184  
                     l1879 0159                       l1993 0294                       l1985 027E  
                     l1977 0266                       l1969 024E                       l1897 01A8  
                     l1889 018A                       l1987 0284                       l1979 026C  
                     l1899 01B1                       l1989 0288                       ?_isr 0070  
                     STR_1 0420                       STR_2 0440                       STR_3 0432  
                     STR_4 043C                       STR_5 0437                       STR_6 0432  
                     STR_7 0440                       STR_8 0440                       STR_9 043C  
                     _PEIE 005E                       _TMR1 000E          ?_Lcd_Write_String 0070  
                     _door 003C                       _main 0027                       _lock 003E  
                     _time 0039                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0076            __end_of_Lcd_Cmd 04B0             _keep_door_open 003B  
  __end_of_UART_Write_Char 04DD                      ??_isr 0070           ?_I2C_Master_Init 002D  
         ?_I2C_Master_Read 0073           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070                      _BRG16 0C3B                      _ANSEL 0188  
          __end_of___lldiv 0303                      _T2CON 0012                      i1l297 04BD  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063                      u59_20 04B6                      u59_21 04B5  
                    _TXREG 0019         __size_of_UART_Init 0017                      _close 0038  
                    _light 0035                      _setup 035B                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 035B  
          __initialization 000F               __end_of_main 029B                     ??_main 0031  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0073         ??_I2C_Master_Start 0073  
       ??_I2C_Master_Write 0075                     _CCP1M2 00BA                     _CCP1M3 00BB  
                   _ADRESH 001E                     _ADRESL 009E                     _CCPR1L 0015  
                   ?_setup 0070                     _ANSELH 0189                     i1l1681 04B8  
                   i1l1683 04BC                     i1l1677 04B0                     i1l1679 04B6  
                ??_Lcd_Cmd 0073                     _TMR1IE 0460                     _TMR1IF 0060  
                   _TMR2IF 0061                     _SPBRGH 009A                     _TMR1ON 0080  
  __size_of_Lcd_Write_Char 0018                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _TRISC5 043D                     _SSPCON 0014  
                   _SSPBUF 0013          __end_of_UART_Init 049C           ?_UART_Write_Char 0070  
                ??___lldiv 0073             _Adafruit_light 0037                     saved_w 007E  
  __end_of__initialization 0023              _light_compare 007A             __pcstackCOMMON 0070  
            __end_of_setup 03B0   UART_Write_Char@character 0073                  ?_Lcd_Init 0070  
                  ??_setup 0078                 __pbssBANK0 0035                 __pmaintext 0027  
               __pintentry 0004  __size_of_Lcd_Write_String 0029                 ??_Lcd_Init 0076  
                  _SSPCON2 0091                    _SSPSTAT 0094                 __stringtab 041A  
           _Lcd_Write_Char 046D                    _Lcd_Cmd 049C                    ___lldiv 029B  
               _light_high 0042                    __ptext1 035B                    __ptext2 0485  
                  __ptext3 0303                    __ptext4 049C                    __ptext5 03B0  
                  __ptext6 029B                    __ptext7 04D1                    __ptext8 0444  
                  __ptext9 046D                  _T1CONbits 0010                  _T2CONbits 0012  
             __size_of_isr 0014   __size_of_I2C_Master_Init 003A   __size_of_I2C_Master_Read 0030  
 __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009     __end_of_Lcd_Write_Char 0485  
     end_of_initialization 0023  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0020            ___lldiv@counter 002C                  _RCSTAbits 0018  
         I2C_Master_Init@c 002D           I2C_Master_Read@a 0073                  _UART_Init 0485  
                _TRISCbits 0087            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0022  
        Lcd_Write_String@i 0020                  _TXSTAbits 0098           _Lcd_Write_String 0444  
               ?_UART_Init 0070   __size_of_UART_Write_Char 000C        start_initialization 000F  
              __end_of_isr 04C4          __size_of_Lcd_Init 0058          ??_I2C_Master_Init 0074  
        ??_I2C_Master_Read 0075          ??_I2C_Master_Wait 0073          ??_I2C_Master_Stop 0073  
          Lcd_Write_Char@a 0075                __pbssCOMMON 0078                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Lcd_Cmd 0070           _I2C_Master_Start 04F0  
         _I2C_Master_Write 04DD                   ?___lldiv 0020                ??_UART_Init 0073  
                __pstrings 041A                  _in_sensor 003A                  _light_low 0043  
        ??_UART_Write_Char 0073             __size_of_setup 0055          interrupt_function 0004  
                 Lcd_Cmd@a 0075                __stringbase 041F           ??_Lcd_Write_Char 0073  
                 _Lcd_Init 0303        I2C_Master_Read@temp 0020   __end_of_Lcd_Write_String 046D  
         __size_of_Lcd_Cmd 0014           __size_of___lldiv 0068         __end_of__stringtab 0420  
          _I2C_Master_Init 03B0            _I2C_Master_Read 03EA            _I2C_Master_Wait 04C4  
          _I2C_Master_Stop 04E7                   __ptext10 04DD                   __ptext11 04E7  
                 __ptext12 04F0                   __ptext13 03EA                   __ptext14 04C4  
                 __ptext15 04B0              __size_of_main 0274                   _out_flag 003F  
 __end_of_I2C_Master_Start 04F9   __end_of_I2C_Master_Write 04E7                   intlevel1 0000  
         ___lldiv@dividend 0024                  stringcode 041A    __end_of_I2C_Master_Init 03EA  
  __end_of_I2C_Master_Read 041A    __end_of_I2C_Master_Wait 04D1    __end_of_I2C_Master_Stop 04F0  
          _UART_Write_Char 04D1           ___lldiv@quotient 0028          I2C_Master_Write@d 0073  
                 stringdir 041A                   stringtab 041A                _SSPCON2bits 0091  
