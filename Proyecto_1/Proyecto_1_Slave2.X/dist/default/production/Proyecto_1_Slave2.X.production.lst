

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Aug 31 18:07:38 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0014                     _SSPCONbits	set	20
   287  000C                     _PIR1bits	set	12
   288  0009                     _PORTE	set	9
   289  0008                     _PORTD	set	8
   290  0007                     _PORTC	set	7
   291  0006                     _PORTB	set	6
   292  000E                     _TMR1L	set	14
   293  000F                     _TMR1H	set	15
   294  0013                     _SSPBUF	set	19
   295  0014                     _SSPCON	set	20
   296  0019                     _TXREG	set	25
   297  0018                     _RCSTAbits	set	24
   298  0005                     _PORTA	set	5
   299  001E                     _ADRESH	set	30
   300  0080                     _TMR1ON	set	128
   301  0031                     _RB1	set	49
   302  0030                     _RB0	set	48
   303  0063                     _SSPIF	set	99
   304  005E                     _PEIE	set	94
   305  005F                     _GIE	set	95
   306  0049                     _RE1	set	73
   307  0048                     _RE0	set	72
   308  0089                     _TRISE	set	137
   309  0088                     _TRISD	set	136
   310  0087                     _TRISC	set	135
   311  0086                     _TRISB	set	134
   312  0085                     _TRISA	set	133
   313  0091                     _SSPCON2bits	set	145
   314  0093                     _SSPADD	set	147
   315  0091                     _SSPCON2	set	145
   316  0094                     _SSPSTATbits	set	148
   317  0094                     _SSPSTAT	set	148
   318  0099                     _SPBRG	set	153
   319  009A                     _SPBRGH	set	154
   320  0098                     _TXSTAbits	set	152
   321  0087                     _TRISCbits	set	135
   322  009E                     _ADRESL	set	158
   323  04A0                     _BF	set	1184
   324  0463                     _SSPIE	set	1123
   325  043C                     _TRISC4	set	1084
   326  043B                     _TRISC3	set	1083
   327  043D                     _TRISC5	set	1085
   328  0189                     _ANSELH	set	393
   329  0188                     _ANSEL	set	392
   330  0C3B                     _BRG16	set	3131
   331                           
   332                           	psect	cinit
   333  000F                     start_initialization:	
   334                           ; #config settings
   335                           
   336  000F                     __initialization:
   337                           
   338                           ; Clear objects allocated to COMMON
   339  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   340  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   341  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   342                           
   343                           ; Clear objects allocated to BANK0
   344  0012  1283               	bcf	3,5	;RP0=0, select bank0
   345  0013  1303               	bcf	3,6	;RP1=0, select bank0
   346  0014  01A6               	clrf	__pbssBANK0& (0+127)
   347  0015  01A7               	clrf	(__pbssBANK0+1)& (0+127)
   348  0016  01A8               	clrf	(__pbssBANK0+2)& (0+127)
   349  0017  01A9               	clrf	(__pbssBANK0+3)& (0+127)
   350  0018                     end_of_initialization:	
   351                           ;End of C runtime variable initialization code
   352                           
   353  0018                     __end_of__initialization:
   354  0018  0183               	clrf	3
   355  0019  120A  118A  2885   	ljmp	_main	;jump to C main() function
   356                           
   357                           	psect	bssCOMMON
   358  0078                     __pbssCOMMON:
   359  0078                     _out:
   360  0078                     	ds	1
   361  0079                     _flags:
   362  0079                     	ds	1
   363  007A                     _z:
   364  007A                     	ds	1
   365                           
   366                           	psect	bssBANK0
   367  0026                     __pbssBANK0:
   368  0026                     _D:
   369  0026                     	ds	2
   370  0028                     _V:
   371  0028                     	ds	2
   372                           
   373                           	psect	cstackCOMMON
   374  0070                     __pcstackCOMMON:
   375  0070                     ?_setup:
   376  0070                     ?_I2C_Slave_Init:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ?_main:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_isr:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ??_isr:	
   386                           ; 1 bytes @ 0x0
   387                           
   388                           
   389                           ; 1 bytes @ 0x0
   390  0070                     	ds	3
   391  0073                     ??_I2C_Slave_Init:
   392  0073                     ?___awdiv:	
   393                           ; 1 bytes @ 0x3
   394                           
   395  0073                     I2C_Slave_Init@address:	
   396                           ; 2 bytes @ 0x3
   397                           
   398  0073                     ___awdiv@divisor:	
   399                           ; 1 bytes @ 0x3
   400                           
   401                           
   402                           ; 2 bytes @ 0x3
   403  0073                     	ds	1
   404  0074                     ??_setup:
   405                           
   406                           ; 1 bytes @ 0x4
   407  0074                     	ds	1
   408  0075                     ___awdiv@dividend:
   409                           
   410                           ; 2 bytes @ 0x5
   411  0075                     	ds	2
   412  0077                     ??___awdiv:
   413                           
   414                           ; 1 bytes @ 0x7
   415  0077                     	ds	1
   416                           
   417                           	psect	cstackBANK0
   418  0020                     __pcstackBANK0:
   419  0020                     ___awdiv@counter:
   420                           
   421                           ; 1 bytes @ 0x0
   422  0020                     	ds	1
   423  0021                     ___awdiv@sign:
   424                           
   425                           ; 1 bytes @ 0x1
   426  0021                     	ds	1
   427  0022                     ___awdiv@quotient:
   428                           
   429                           ; 2 bytes @ 0x2
   430  0022                     	ds	2
   431  0024                     ??_main:
   432                           
   433                           ; 1 bytes @ 0x4
   434  0024                     	ds	2
   435                           
   436                           	psect	maintext
   437  0085                     __pmaintext:	
   438 ;;
   439 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   440 ;;
   441 ;; *************** function _main *****************
   442 ;; Defined at:
   443 ;;		line 64 in file "main.c"
   444 ;; Parameters:    Size  Location     Type
   445 ;;		None
   446 ;; Auto vars:     Size  Location     Type
   447 ;;		None
   448 ;; Return value:  Size  Location     Type
   449 ;;                  1    wreg      void 
   450 ;; Registers used:
   451 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   452 ;; Tracked objects:
   453 ;;		On entry : B00/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   457 ;;      Params:         0       0       0       0       0
   458 ;;      Locals:         0       0       0       0       0
   459 ;;      Temps:          0       2       0       0       0
   460 ;;      Totals:         0       2       0       0       0
   461 ;;Total ram usage:        2 bytes
   462 ;; Hardware stack levels required when called: 3
   463 ;; This function calls:
   464 ;;		___awdiv
   465 ;;		_setup
   466 ;; This function is called by:
   467 ;;		Startup code after reset
   468 ;; This function uses a non-reentrant model
   469 ;;
   470                           
   471                           
   472                           ;psect for function _main
   473  0085                     _main:
   474  0085                     l1253:	
   475                           ;incstack = 0
   476                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   477                           
   478                           
   479                           ;main.c: 65:     setup();
   480  0085  120A  118A  2149  120A  118A  	fcall	_setup
   481  008A                     l1255:
   482                           
   483                           ;main.c: 72:         TMR1H = 0;
   484  008A  1283               	bcf	3,5	;RP0=0, select bank0
   485  008B  1303               	bcf	3,6	;RP1=0, select bank0
   486  008C  018F               	clrf	15	;volatile
   487  008D                     l1257:
   488                           
   489                           ;main.c: 73:         TMR1L = 0;
   490  008D  018E               	clrf	14	;volatile
   491  008E                     l1259:
   492                           
   493                           ;main.c: 75:         RB0 = 1;
   494  008E  1406               	bsf	6,0	;volatile
   495  008F                     l1261:
   496                           
   497                           ;main.c: 76:         _delay((unsigned long)((10)*(4000000/4000000.0)));
   498  008F  3002               	movlw	2
   499  0090  1283               	bcf	3,5	;RP0=0, select bank0
   500  0091  1303               	bcf	3,6	;RP1=0, select bank0
   501  0092  00A4               	movwf	??_main
   502  0093                     u537:
   503  0093  0BA4               	decfsz	??_main,f
   504  0094  2893               	goto	u537
   505  0095  0000               	nop
   506  0096                     l1263:
   507                           
   508                           ;main.c: 77:         RB0 = 0;
   509  0096  1283               	bcf	3,5	;RP0=0, select bank0
   510  0097  1303               	bcf	3,6	;RP1=0, select bank0
   511  0098  1006               	bcf	6,0	;volatile
   512  0099                     l218:	
   513                           ;main.c: 80:         while(!RB1);
   514                           
   515  0099  1C86               	btfss	6,1	;volatile
   516  009A  289C               	goto	u491
   517  009B  289D               	goto	u490
   518  009C                     u491:
   519  009C  2899               	goto	l218
   520  009D                     u490:
   521  009D                     l220:
   522                           
   523                           ;main.c: 81:         TMR1ON = 1;
   524  009D  1410               	bsf	16,0	;volatile
   525  009E                     l221:	
   526                           ;main.c: 82:         while(RB1);
   527                           
   528  009E  1886               	btfsc	6,1	;volatile
   529  009F  28A1               	goto	u501
   530  00A0  28A2               	goto	u500
   531  00A1                     u501:
   532  00A1  289E               	goto	l221
   533  00A2                     u500:
   534  00A2                     l223:
   535                           
   536                           ;main.c: 83:         TMR1ON = 0;
   537  00A2  1010               	bcf	16,0	;volatile
   538  00A3                     l1265:
   539                           
   540                           ;main.c: 85:         V = (TMR1L | (TMR1H<<8));
   541  00A3  080F               	movf	15,w	;volatile
   542  00A4  00A9               	movwf	_V+1
   543  00A5  080E               	movf	14,w	;volatile
   544  00A6  00A8               	movwf	_V
   545  00A7                     l1267:
   546                           
   547                           ;main.c: 86:         D = V/58;
   548  00A7  303A               	movlw	58
   549  00A8  00F3               	movwf	___awdiv@divisor
   550  00A9  3000               	movlw	0
   551  00AA  00F4               	movwf	___awdiv@divisor+1
   552  00AB  0829               	movf	_V+1,w
   553  00AC  00F6               	movwf	___awdiv@dividend+1
   554  00AD  0828               	movf	_V,w
   555  00AE  00F5               	movwf	___awdiv@dividend
   556  00AF  120A  118A  201C  120A  118A  	fcall	___awdiv
   557  00B4  0874               	movf	?___awdiv+1,w
   558  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   559  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   560  00B7  00A7               	movwf	_D+1
   561  00B8  0873               	movf	?___awdiv,w
   562  00B9  00A6               	movwf	_D
   563  00BA                     l1269:
   564                           
   565                           ;main.c: 88:         if(D > 5){
   566  00BA  0827               	movf	_D+1,w
   567  00BB  3A80               	xorlw	128
   568  00BC  00FF               	movwf	btemp+1
   569  00BD  3080               	movlw	128
   570  00BE  027F               	subwf	btemp+1,w
   571  00BF  1D03               	skipz
   572  00C0  28C3               	goto	u515
   573  00C1  3006               	movlw	6
   574  00C2  0226               	subwf	_D,w
   575  00C3                     u515:
   576  00C3  1C03               	skipc
   577  00C4  28C6               	goto	u511
   578  00C5  28C7               	goto	u510
   579  00C6                     u511:
   580  00C6  28C8               	goto	l1273
   581  00C7                     u510:
   582  00C7                     l1271:
   583                           
   584                           ;main.c: 89:             flags = 0;
   585  00C7  01F9               	clrf	_flags
   586  00C8                     l1273:
   587                           
   588                           ;main.c: 91:         if(D < 5){
   589  00C8  1283               	bcf	3,5	;RP0=0, select bank0
   590  00C9  1303               	bcf	3,6	;RP1=0, select bank0
   591  00CA  0827               	movf	_D+1,w
   592  00CB  3A80               	xorlw	128
   593  00CC  00FF               	movwf	btemp+1
   594  00CD  3080               	movlw	128
   595  00CE  027F               	subwf	btemp+1,w
   596  00CF  1D03               	skipz
   597  00D0  28D3               	goto	u525
   598  00D1  3005               	movlw	5
   599  00D2  0226               	subwf	_D,w
   600  00D3                     u525:
   601  00D3  1803               	skipnc
   602  00D4  28D6               	goto	u521
   603  00D5  28D7               	goto	u520
   604  00D6                     u521:
   605  00D6  28D9               	goto	l1277
   606  00D7                     u520:
   607  00D7                     l1275:
   608                           
   609                           ;main.c: 92:             flags = 1;
   610  00D7  01F9               	clrf	_flags
   611  00D8  0AF9               	incf	_flags,f
   612  00D9                     l1277:
   613                           
   614                           ;main.c: 95:        _delay((unsigned long)((50)*(4000000/4000.0)));
   615  00D9  3041               	movlw	65
   616  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   617  00DB  1303               	bcf	3,6	;RP1=0, select bank0
   618  00DC  00A5               	movwf	??_main+1
   619  00DD  30ED               	movlw	237
   620  00DE  00A4               	movwf	??_main
   621  00DF                     u547:
   622  00DF  0BA4               	decfsz	??_main,f
   623  00E0  28DF               	goto	u547
   624  00E1  0BA5               	decfsz	??_main+1,f
   625  00E2  28DF               	goto	u547
   626  00E3  28E4               	nop2
   627  00E4  288A               	goto	l1255
   628  00E5  120A  118A  280C   	ljmp	start
   629  00E8                     __end_of_main:
   630                           
   631                           	psect	text1
   632  0149                     __ptext1:	
   633 ;; *************** function _setup *****************
   634 ;; Defined at:
   635 ;;		line 102 in file "main.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;		None
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		wreg, status,2, status,0, pclath, cstack
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   649 ;;      Params:         0       0       0       0       0
   650 ;;      Locals:         0       0       0       0       0
   651 ;;      Temps:          0       0       0       0       0
   652 ;;      Totals:         0       0       0       0       0
   653 ;;Total ram usage:        0 bytes
   654 ;; Hardware stack levels used: 1
   655 ;; Hardware stack levels required when called: 2
   656 ;; This function calls:
   657 ;;		_I2C_Slave_Init
   658 ;; This function is called by:
   659 ;;		_main
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           
   664                           ;psect for function _setup
   665  0149                     _setup:
   666  0149                     l1157:	
   667                           ;incstack = 0
   668                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   669                           
   670                           
   671                           ;main.c: 104:     ANSEL = 0;
   672  0149  1683               	bsf	3,5	;RP0=1, select bank3
   673  014A  1703               	bsf	3,6	;RP1=1, select bank3
   674  014B  0188               	clrf	8	;volatile
   675                           
   676                           ;main.c: 105:     ANSELH = 0;
   677  014C  0189               	clrf	9	;volatile
   678                           
   679                           ;main.c: 106:     TRISA = 0;
   680  014D  1683               	bsf	3,5	;RP0=1, select bank1
   681  014E  1303               	bcf	3,6	;RP1=0, select bank1
   682  014F  0185               	clrf	5	;volatile
   683  0150                     l1159:
   684                           
   685                           ;main.c: 107:     TRISB = 0b00000010;
   686  0150  3002               	movlw	2
   687  0151  0086               	movwf	6	;volatile
   688  0152                     l1161:
   689                           
   690                           ;main.c: 108:     TRISC = 0;
   691  0152  0187               	clrf	7	;volatile
   692  0153                     l1163:
   693                           
   694                           ;main.c: 109:     TRISD = 0;
   695  0153  0188               	clrf	8	;volatile
   696  0154                     l1165:
   697                           
   698                           ;main.c: 110:     TRISE = 0;
   699  0154  0189               	clrf	9	;volatile
   700  0155                     l1167:
   701                           
   702                           ;main.c: 114:     GIE = 1;
   703  0155  178B               	bsf	11,7	;volatile
   704  0156                     l1169:
   705                           
   706                           ;main.c: 116:     I2C_Slave_Init(0b00000010);
   707  0156  3002               	movlw	2
   708  0157  120A  118A  2165  120A  118A  	fcall	_I2C_Slave_Init
   709  015C                     l1171:
   710                           
   711                           ;main.c: 119:     PORTA = 0;
   712  015C  1283               	bcf	3,5	;RP0=0, select bank0
   713  015D  1303               	bcf	3,6	;RP1=0, select bank0
   714  015E  0185               	clrf	5	;volatile
   715  015F                     l1173:
   716                           
   717                           ;main.c: 120:     PORTB = 0;
   718  015F  0186               	clrf	6	;volatile
   719  0160                     l1175:
   720                           
   721                           ;main.c: 121:     PORTC = 0;
   722  0160  0187               	clrf	7	;volatile
   723  0161                     l1177:
   724                           
   725                           ;main.c: 122:     PORTD = 0;
   726  0161  0188               	clrf	8	;volatile
   727  0162                     l1179:
   728                           
   729                           ;main.c: 123:     PORTE = 0;
   730  0162  0189               	clrf	9	;volatile
   731  0163                     l1181:
   732                           
   733                           ;main.c: 126:     flags = 0;
   734  0163  01F9               	clrf	_flags
   735  0164                     l231:
   736  0164  0008               	return
   737  0165                     __end_of_setup:
   738                           
   739                           	psect	text2
   740  0165                     __ptext2:	
   741 ;; *************** function _I2C_Slave_Init *****************
   742 ;; Defined at:
   743 ;;		line 248 in file "Digital2_toolbox.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;  address         1    wreg     unsigned char 
   746 ;; Auto vars:     Size  Location     Type
   747 ;;  address         1    3[COMMON] unsigned char 
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		wreg
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   757 ;;      Params:         0       0       0       0       0
   758 ;;      Locals:         1       0       0       0       0
   759 ;;      Temps:          0       0       0       0       0
   760 ;;      Totals:         1       0       0       0       0
   761 ;;Total ram usage:        1 bytes
   762 ;; Hardware stack levels used: 1
   763 ;; Hardware stack levels required when called: 1
   764 ;; This function calls:
   765 ;;		Nothing
   766 ;; This function is called by:
   767 ;;		_setup
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           
   772                           ;psect for function _I2C_Slave_Init
   773  0165                     _I2C_Slave_Init:
   774                           
   775                           ;incstack = 0
   776                           ; Regs used in _I2C_Slave_Init: [wreg]
   777                           ;I2C_Slave_Init@address stored from wreg
   778  0165  00F3               	movwf	I2C_Slave_Init@address
   779  0166                     l1143:
   780                           
   781                           ;Digital2_toolbox.c: 248: void I2C_Slave_Init(uint8_t address);Digital2_toolbox.c: 249: 
      +                          {;Digital2_toolbox.c: 250:     SSPADD = address;
   782  0166  0873               	movf	I2C_Slave_Init@address,w
   783  0167  1683               	bsf	3,5	;RP0=1, select bank1
   784  0168  1303               	bcf	3,6	;RP1=0, select bank1
   785  0169  0093               	movwf	19	;volatile
   786                           
   787                           ;Digital2_toolbox.c: 251:     SSPCON = 0x36;
   788  016A  3036               	movlw	54
   789  016B  1283               	bcf	3,5	;RP0=0, select bank0
   790  016C  1303               	bcf	3,6	;RP1=0, select bank0
   791  016D  0094               	movwf	20	;volatile
   792                           
   793                           ;Digital2_toolbox.c: 252:     SSPSTAT = 0x80;
   794  016E  3080               	movlw	128
   795  016F  1683               	bsf	3,5	;RP0=1, select bank1
   796  0170  1303               	bcf	3,6	;RP1=0, select bank1
   797  0171  0094               	movwf	20	;volatile
   798                           
   799                           ;Digital2_toolbox.c: 253:     SSPCON2 = 0x01;
   800  0172  3001               	movlw	1
   801  0173  0091               	movwf	17	;volatile
   802  0174                     l1145:
   803                           
   804                           ;Digital2_toolbox.c: 254:     TRISC3 = 1;
   805  0174  1587               	bsf	7,3	;volatile
   806  0175                     l1147:
   807                           
   808                           ;Digital2_toolbox.c: 255:     TRISC4 = 1;
   809  0175  1607               	bsf	7,4	;volatile
   810  0176                     l1149:
   811                           
   812                           ;Digital2_toolbox.c: 256:     GIE = 1;
   813  0176  178B               	bsf	11,7	;volatile
   814  0177                     l1151:
   815                           
   816                           ;Digital2_toolbox.c: 257:     PEIE = 1;
   817  0177  170B               	bsf	11,6	;volatile
   818  0178                     l1153:
   819                           
   820                           ;Digital2_toolbox.c: 258:     SSPIF = 0;
   821  0178  1283               	bcf	3,5	;RP0=0, select bank0
   822  0179  1303               	bcf	3,6	;RP1=0, select bank0
   823  017A  118C               	bcf	12,3	;volatile
   824  017B                     l1155:
   825                           
   826                           ;Digital2_toolbox.c: 259:     SSPIE = 1;
   827  017B  1683               	bsf	3,5	;RP0=1, select bank1
   828  017C  1303               	bcf	3,6	;RP1=0, select bank1
   829  017D  158C               	bsf	12,3	;volatile
   830  017E                     l147:
   831  017E  0008               	return
   832  017F                     __end_of_I2C_Slave_Init:
   833                           
   834                           	psect	text3
   835  001C                     __ptext3:	
   836 ;; *************** function ___awdiv *****************
   837 ;; Defined at:
   838 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;  divisor         2    3[COMMON] int 
   841 ;;  dividend        2    5[COMMON] int 
   842 ;; Auto vars:     Size  Location     Type
   843 ;;  quotient        2    2[BANK0 ] int 
   844 ;;  sign            1    1[BANK0 ] unsigned char 
   845 ;;  counter         1    0[BANK0 ] unsigned char 
   846 ;; Return value:  Size  Location     Type
   847 ;;                  2    3[COMMON] int 
   848 ;; Registers used:
   849 ;;		wreg, status,2, status,0
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   855 ;;      Params:         4       0       0       0       0
   856 ;;      Locals:         0       4       0       0       0
   857 ;;      Temps:          1       0       0       0       0
   858 ;;      Totals:         5       4       0       0       0
   859 ;;Total ram usage:        9 bytes
   860 ;; Hardware stack levels used: 1
   861 ;; Hardware stack levels required when called: 1
   862 ;; This function calls:
   863 ;;		Nothing
   864 ;; This function is called by:
   865 ;;		_main
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           
   870                           ;psect for function ___awdiv
   871  001C                     ___awdiv:
   872  001C                     l1183:	
   873                           ;incstack = 0
   874                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   875                           
   876  001C  1283               	bcf	3,5	;RP0=0, select bank0
   877  001D  1303               	bcf	3,6	;RP1=0, select bank0
   878  001E  01A1               	clrf	___awdiv@sign
   879  001F                     l1185:
   880  001F  1FF4               	btfss	___awdiv@divisor+1,7
   881  0020  2822               	goto	u351
   882  0021  2823               	goto	u350
   883  0022                     u351:
   884  0022  282A               	goto	l1191
   885  0023                     u350:
   886  0023                     l1187:
   887  0023  09F3               	comf	___awdiv@divisor,f
   888  0024  09F4               	comf	___awdiv@divisor+1,f
   889  0025  0AF3               	incf	___awdiv@divisor,f
   890  0026  1903               	skipnz
   891  0027  0AF4               	incf	___awdiv@divisor+1,f
   892  0028                     l1189:
   893  0028  01A1               	clrf	___awdiv@sign
   894  0029  0AA1               	incf	___awdiv@sign,f
   895  002A                     l1191:
   896  002A  1FF6               	btfss	___awdiv@dividend+1,7
   897  002B  282D               	goto	u361
   898  002C  282E               	goto	u360
   899  002D                     u361:
   900  002D  2837               	goto	l1197
   901  002E                     u360:
   902  002E                     l1193:
   903  002E  09F5               	comf	___awdiv@dividend,f
   904  002F  09F6               	comf	___awdiv@dividend+1,f
   905  0030  0AF5               	incf	___awdiv@dividend,f
   906  0031  1903               	skipnz
   907  0032  0AF6               	incf	___awdiv@dividend+1,f
   908  0033                     l1195:
   909  0033  3001               	movlw	1
   910  0034  00F7               	movwf	??___awdiv
   911  0035  0877               	movf	??___awdiv,w
   912  0036  06A1               	xorwf	___awdiv@sign,f
   913  0037                     l1197:
   914  0037  01A2               	clrf	___awdiv@quotient
   915  0038  01A3               	clrf	___awdiv@quotient+1
   916  0039                     l1199:
   917  0039  0873               	movf	___awdiv@divisor,w
   918  003A  0474               	iorwf	___awdiv@divisor+1,w
   919  003B  1903               	btfsc	3,2
   920  003C  283E               	goto	u371
   921  003D  283F               	goto	u370
   922  003E                     u371:
   923  003E  2876               	goto	l1219
   924  003F                     u370:
   925  003F                     l1201:
   926  003F  01A0               	clrf	___awdiv@counter
   927  0040  0AA0               	incf	___awdiv@counter,f
   928  0041  284D               	goto	l1207
   929  0042                     l1203:
   930  0042  3001               	movlw	1
   931  0043                     u385:
   932  0043  1003               	clrc
   933  0044  0DF3               	rlf	___awdiv@divisor,f
   934  0045  0DF4               	rlf	___awdiv@divisor+1,f
   935  0046  3EFF               	addlw	-1
   936  0047  1D03               	skipz
   937  0048  2843               	goto	u385
   938  0049                     l1205:
   939  0049  3001               	movlw	1
   940  004A  00F7               	movwf	??___awdiv
   941  004B  0877               	movf	??___awdiv,w
   942  004C  07A0               	addwf	___awdiv@counter,f
   943  004D                     l1207:
   944  004D  1FF4               	btfss	___awdiv@divisor+1,7
   945  004E  2850               	goto	u391
   946  004F  2851               	goto	u390
   947  0050                     u391:
   948  0050  2842               	goto	l1203
   949  0051                     u390:
   950  0051                     l1209:
   951  0051  3001               	movlw	1
   952  0052                     u405:
   953  0052  1003               	clrc
   954  0053  0DA2               	rlf	___awdiv@quotient,f
   955  0054  0DA3               	rlf	___awdiv@quotient+1,f
   956  0055  3EFF               	addlw	-1
   957  0056  1D03               	skipz
   958  0057  2852               	goto	u405
   959  0058  0874               	movf	___awdiv@divisor+1,w
   960  0059  0276               	subwf	___awdiv@dividend+1,w
   961  005A  1D03               	skipz
   962  005B  285E               	goto	u415
   963  005C  0873               	movf	___awdiv@divisor,w
   964  005D  0275               	subwf	___awdiv@dividend,w
   965  005E                     u415:
   966  005E  1C03               	skipc
   967  005F  2861               	goto	u411
   968  0060  2862               	goto	u410
   969  0061                     u411:
   970  0061  2869               	goto	l1215
   971  0062                     u410:
   972  0062                     l1211:
   973  0062  0873               	movf	___awdiv@divisor,w
   974  0063  02F5               	subwf	___awdiv@dividend,f
   975  0064  0874               	movf	___awdiv@divisor+1,w
   976  0065  1C03               	skipc
   977  0066  03F6               	decf	___awdiv@dividend+1,f
   978  0067  02F6               	subwf	___awdiv@dividend+1,f
   979  0068                     l1213:
   980  0068  1422               	bsf	___awdiv@quotient,0
   981  0069                     l1215:
   982  0069  3001               	movlw	1
   983  006A                     u425:
   984  006A  1003               	clrc
   985  006B  0CF4               	rrf	___awdiv@divisor+1,f
   986  006C  0CF3               	rrf	___awdiv@divisor,f
   987  006D  3EFF               	addlw	-1
   988  006E  1D03               	skipz
   989  006F  286A               	goto	u425
   990  0070                     l1217:
   991  0070  3001               	movlw	1
   992  0071  02A0               	subwf	___awdiv@counter,f
   993  0072  1D03               	btfss	3,2
   994  0073  2875               	goto	u431
   995  0074  2876               	goto	u430
   996  0075                     u431:
   997  0075  2851               	goto	l1209
   998  0076                     u430:
   999  0076                     l1219:
  1000  0076  0821               	movf	___awdiv@sign,w
  1001  0077  1903               	btfsc	3,2
  1002  0078  287A               	goto	u441
  1003  0079  287B               	goto	u440
  1004  007A                     u441:
  1005  007A  2880               	goto	l1223
  1006  007B                     u440:
  1007  007B                     l1221:
  1008  007B  09A2               	comf	___awdiv@quotient,f
  1009  007C  09A3               	comf	___awdiv@quotient+1,f
  1010  007D  0AA2               	incf	___awdiv@quotient,f
  1011  007E  1903               	skipnz
  1012  007F  0AA3               	incf	___awdiv@quotient+1,f
  1013  0080                     l1223:
  1014  0080  0823               	movf	___awdiv@quotient+1,w
  1015  0081  00F4               	movwf	?___awdiv+1
  1016  0082  0822               	movf	___awdiv@quotient,w
  1017  0083  00F3               	movwf	?___awdiv
  1018  0084                     l488:
  1019  0084  0008               	return
  1020  0085                     __end_of___awdiv:
  1021                           
  1022                           	psect	text4
  1023  00E8                     __ptext4:	
  1024 ;; *************** function _isr *****************
  1025 ;; Defined at:
  1026 ;;		line 130 in file "main.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;		None
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;		None
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      void 
  1033 ;; Registers used:
  1034 ;;		wreg
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1040 ;;      Params:         0       0       0       0       0
  1041 ;;      Locals:         0       0       0       0       0
  1042 ;;      Temps:          3       0       0       0       0
  1043 ;;      Totals:         3       0       0       0       0
  1044 ;;Total ram usage:        3 bytes
  1045 ;; Hardware stack levels used: 1
  1046 ;; This function calls:
  1047 ;;		Nothing
  1048 ;; This function is called by:
  1049 ;;		Interrupt level 1
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           
  1054                           ;psect for function _isr
  1055  00E8                     _isr:
  1056  00E8                     i1l1109:
  1057                           
  1058                           ;main.c: 132:     if(PIR1bits.SSPIF == 1){
  1059  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1060  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1061  00EA  1D8C               	btfss	12,3	;volatile
  1062  00EB  28ED               	goto	u26_21
  1063  00EC  28EE               	goto	u26_20
  1064  00ED                     u26_21:
  1065  00ED  2942               	goto	i1l249
  1066  00EE                     u26_20:
  1067  00EE                     i1l1111:
  1068                           
  1069                           ;main.c: 134:         SSPCONbits.CKP = 0;
  1070  00EE  1214               	bcf	20,4	;volatile
  1071                           
  1072                           ;main.c: 136:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  1073  00EF  1B14               	btfsc	20,6	;volatile
  1074  00F0  28F2               	goto	u27_21
  1075  00F1  28F3               	goto	u27_20
  1076  00F2                     u27_21:
  1077  00F2  28F7               	goto	i1l1115
  1078  00F3                     u27_20:
  1079  00F3                     i1l1113:
  1080  00F3  1F94               	btfss	20,7	;volatile
  1081  00F4  28F6               	goto	u28_21
  1082  00F5  28F7               	goto	u28_20
  1083  00F6                     u28_21:
  1084  00F6  28FE               	goto	i1l1123
  1085  00F7                     u28_20:
  1086  00F7                     i1l1115:
  1087                           
  1088                           ;main.c: 137:             z = SSPBUF;
  1089  00F7  0813               	movf	19,w	;volatile
  1090  00F8  00F0               	movwf	??_isr
  1091  00F9  0870               	movf	??_isr,w
  1092  00FA  00FA               	movwf	_z
  1093  00FB                     i1l1117:
  1094                           
  1095                           ;main.c: 138:             SSPCONbits.SSPOV = 0;
  1096  00FB  1314               	bcf	20,6	;volatile
  1097  00FC                     i1l1119:
  1098                           
  1099                           ;main.c: 139:             SSPCONbits.WCOL = 0;
  1100  00FC  1394               	bcf	20,7	;volatile
  1101  00FD                     i1l1121:
  1102                           
  1103                           ;main.c: 140:             SSPCONbits.CKP = 1;
  1104  00FD  1614               	bsf	20,4	;volatile
  1105  00FE                     i1l1123:
  1106                           
  1107                           ;main.c: 143:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  1108  00FE  1683               	bsf	3,5	;RP0=1, select bank1
  1109  00FF  1303               	bcf	3,6	;RP1=0, select bank1
  1110  0100  1A94               	btfsc	20,5	;volatile
  1111  0101  2903               	goto	u29_21
  1112  0102  2904               	goto	u29_20
  1113  0103                     u29_21:
  1114  0103  291F               	goto	i1l240
  1115  0104                     u29_20:
  1116  0104                     i1l1125:
  1117  0104  1914               	btfsc	20,2	;volatile
  1118  0105  2907               	goto	u30_21
  1119  0106  2908               	goto	u30_20
  1120  0107                     u30_21:
  1121  0107  291F               	goto	i1l240
  1122  0108                     u30_20:
  1123  0108                     i1l1127:
  1124                           
  1125                           ;main.c: 145:             z = SSPBUF;
  1126  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1127  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1128  010A  0813               	movf	19,w	;volatile
  1129  010B  00F0               	movwf	??_isr
  1130  010C  0870               	movf	??_isr,w
  1131  010D  00FA               	movwf	_z
  1132  010E                     i1l1129:
  1133                           
  1134                           ;main.c: 147:             PIR1bits.SSPIF = 0;
  1135  010E  118C               	bcf	12,3	;volatile
  1136  010F                     i1l1131:
  1137                           
  1138                           ;main.c: 148:             SSPCONbits.CKP = 1;
  1139  010F  1614               	bsf	20,4	;volatile
  1140  0110                     i1l241:	
  1141                           ;main.c: 149:             while(!SSPSTATbits.BF);
  1142                           
  1143  0110  1683               	bsf	3,5	;RP0=1, select bank1
  1144  0111  1303               	bcf	3,6	;RP1=0, select bank1
  1145  0112  1C14               	btfss	20,0	;volatile
  1146  0113  2915               	goto	u31_21
  1147  0114  2916               	goto	u31_20
  1148  0115                     u31_21:
  1149  0115  2910               	goto	i1l241
  1150  0116                     u31_20:
  1151  0116                     i1l1133:
  1152                           
  1153                           ;main.c: 150:             PORTD = SSPBUF;
  1154  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1155  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1156  0118  0813               	movf	19,w	;volatile
  1157  0119  0088               	movwf	8	;volatile
  1158                           
  1159                           ;main.c: 151:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1160  011A  3053               	movlw	83
  1161  011B  00F0               	movwf	??_isr
  1162  011C                     u55_27:
  1163  011C  0BF0               	decfsz	??_isr,f
  1164  011D  291C               	goto	u55_27
  1165                           
  1166                           ;main.c: 153:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1167  011E  293F               	goto	i1l244
  1168  011F                     i1l240:
  1169  011F  1A94               	btfsc	20,5	;volatile
  1170  0120  2922               	goto	u32_21
  1171  0121  2923               	goto	u32_20
  1172  0122                     u32_21:
  1173  0122  293F               	goto	i1l244
  1174  0123                     u32_20:
  1175  0123                     i1l1135:
  1176  0123  1D14               	btfss	20,2	;volatile
  1177  0124  2926               	goto	u33_21
  1178  0125  2927               	goto	u33_20
  1179  0126                     u33_21:
  1180  0126  293F               	goto	i1l244
  1181  0127                     u33_20:
  1182  0127                     i1l1137:
  1183                           
  1184                           ;main.c: 154:             z = SSPBUF;
  1185  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1186  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1187  0129  0813               	movf	19,w	;volatile
  1188  012A  00F0               	movwf	??_isr
  1189  012B  0870               	movf	??_isr,w
  1190  012C  00FA               	movwf	_z
  1191  012D                     i1l1139:
  1192                           
  1193                           ;main.c: 155:             BF = 0;
  1194  012D  1683               	bsf	3,5	;RP0=1, select bank1
  1195  012E  1303               	bcf	3,6	;RP1=0, select bank1
  1196  012F  1014               	bcf	20,0	;volatile
  1197                           
  1198                           ;main.c: 156:             SSPBUF = flags;
  1199  0130  0879               	movf	_flags,w
  1200  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1201  0132  1303               	bcf	3,6	;RP1=0, select bank0
  1202  0133  0093               	movwf	19	;volatile
  1203  0134                     i1l1141:
  1204                           
  1205                           ;main.c: 157:             SSPCONbits.CKP = 1;
  1206  0134  1614               	bsf	20,4	;volatile
  1207                           
  1208                           ;main.c: 158:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1209  0135  3053               	movlw	83
  1210  0136  00F0               	movwf	??_isr
  1211  0137                     u56_27:
  1212  0137  0BF0               	decfsz	??_isr,f
  1213  0138  2937               	goto	u56_27
  1214  0139                     i1l246:	
  1215                           ;main.c: 159:             while(SSPSTATbits.BF);
  1216                           
  1217  0139  1683               	bsf	3,5	;RP0=1, select bank1
  1218  013A  1303               	bcf	3,6	;RP1=0, select bank1
  1219  013B  1814               	btfsc	20,0	;volatile
  1220  013C  293E               	goto	u34_21
  1221  013D  293F               	goto	u34_20
  1222  013E                     u34_21:
  1223  013E  2939               	goto	i1l246
  1224  013F                     u34_20:
  1225  013F                     i1l244:
  1226                           
  1227                           ;main.c: 162:         PIR1bits.SSPIF = 0;
  1228  013F  1283               	bcf	3,5	;RP0=0, select bank0
  1229  0140  1303               	bcf	3,6	;RP1=0, select bank0
  1230  0141  118C               	bcf	12,3	;volatile
  1231  0142                     i1l249:
  1232  0142  0872               	movf	??_isr+2,w
  1233  0143  008A               	movwf	10
  1234  0144  0E71               	swapf	??_isr+1,w
  1235  0145  0083               	movwf	3
  1236  0146  0EFE               	swapf	btemp,f
  1237  0147  0E7E               	swapf	btemp,w
  1238  0148  0009               	retfie
  1239  0149                     __end_of_isr:
  1240  007E                     btemp	set	126	;btemp
  1241  007E                     wtemp0	set	126
  1242                           
  1243                           	psect	intentry
  1244  0004                     __pintentry:	
  1245                           ;incstack = 0
  1246                           ; Regs used in _isr: [wreg]
  1247                           
  1248  0004                     interrupt_function:
  1249  007E                     saved_w	set	btemp
  1250  0004  00FE               	movwf	btemp
  1251  0005  0E03               	swapf	3,w
  1252  0006  00F1               	movwf	??_isr+1
  1253  0007  080A               	movf	10,w
  1254  0008  00F2               	movwf	??_isr+2
  1255  0009  120A  118A  28E8   	ljmp	_isr
  1256                           
  1257                           	psect	config
  1258                           
  1259                           ;Config register CONFIG1 @ 0x2007
  1260                           ;	Oscillator Selection bits
  1261                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1262                           ;	Watchdog Timer Enable bit
  1263                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1264                           ;	Power-up Timer Enable bit
  1265                           ;	PWRTE = OFF, PWRT disabled
  1266                           ;	RE3/MCLR pin function select bit
  1267                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1268                           ;	Code Protection bit
  1269                           ;	CP = OFF, Program memory code protection is disabled
  1270                           ;	Data Code Protection bit
  1271                           ;	CPD = OFF, Data memory code protection is disabled
  1272                           ;	Brown Out Reset Selection bits
  1273                           ;	BOREN = OFF, BOR disabled
  1274                           ;	Internal External Switchover bit
  1275                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1276                           ;	Fail-Safe Clock Monitor Enabled bit
  1277                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1278                           ;	Low Voltage Programming Enable bit
  1279                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1280                           ;	In-Circuit Debugger Mode bit
  1281                           ;	DEBUG = 0x1, unprogrammed default
  1282  2007                     	org	8199
  1283  2007  20D4               	dw	8404
  1284                           
  1285                           ;Config register CONFIG2 @ 0x2008
  1286                           ;	Brown-out Reset Selection bit
  1287                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1288                           ;	Flash Program Memory Self Write Enable bits
  1289                           ;	WRT = OFF, Write protection off
  1290  2008                     	org	8200
  1291  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      6      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv
    _setup->_I2C_Slave_Init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     474
                                              4 BANK0      2     2      0
                            ___awdiv
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     452
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   _setup
     _I2C_Slave_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      15       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      15      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Aug 31 18:07:38 2021

                      _D 0026                        _V 0028                        _z 007A  
            _SSPSTATbits 0094                       _BF 04A0             ___awdiv@sign 0021  
                    l220 009D                      l221 009E                      l231 0164  
                    l223 00A2                      l218 0099                      l147 017E  
                    l488 0084                      _GIE 005F                      _RB0 0030  
                    _RB1 0031                      _RE0 0048                      _RE1 0049  
                    u410 0062                      u411 0061                      u500 00A2  
                    u405 0052                      u501 00A1                      u430 0076  
                    u350 0023                      u510 00C7                      u431 0075  
                    u415 005E                      u351 0022                      u511 00C6  
                    u440 007B                      u360 002E                      u520 00D7  
                    u441 007A                      u425 006A                      u361 002D  
                    u521 00D6                      u370 003F                      u371 003E  
                    u515 00C3                      u525 00D3                      u390 0051  
                    u391 0050                      u385 0043                      u537 0093  
                    u490 009D                      u547 00DF                      u491 009C  
                    _isr 00E8                      _out 0078                     l1201 003F  
                   l1211 0062                     l1203 0042                     l1221 007B  
                   l1213 0068                     l1205 0049                     l1223 0080  
                   l1215 0069                     l1207 004D                     l1151 0177  
                   l1143 0166                     l1217 0070                     l1209 0051  
                   l1153 0178                     l1145 0174                     l1161 0152  
                   l1219 0076                     l1155 017B                     l1147 0175  
                   l1171 015C                     l1163 0153                     l1149 0176  
                   l1181 0163                     l1173 015F                     l1165 0154  
                   l1157 0149                     l1261 008F                     l1253 0085  
                   l1191 002A                     l1183 001C                     l1175 0160  
                   l1167 0155                     l1159 0150                     l1271 00C7  
                   l1263 0096                     l1255 008A                     l1193 002E  
                   l1185 001F                     l1177 0161                     l1169 0156  
                   l1273 00C8                     l1265 00A3                     l1257 008D  
                   l1195 0033                     l1187 0023                     l1179 0162  
                   l1275 00D7                     l1267 00A7                     l1259 008E  
                   l1197 0037                     l1189 0028                     l1277 00D9  
                   l1269 00BA                     l1199 0039                     ?_isr 0070  
                   _PEIE 005E                     _main 0085                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_main 0070  
        __end_of___awdiv 0085                    _BRG16 0C3B                    _ANSEL 0188  
        ___awdiv@divisor 0073                    i1l240 011F                    i1l241 0110  
                  i1l244 013F                    i1l246 0139                    i1l249 0142  
        ___awdiv@counter 0020                    u30_20 0108                    u30_21 0107  
                  u31_20 0116                    u31_21 0115                    u32_20 0123  
                  u32_21 0122                    u33_20 0127                    u33_21 0126  
                  _TMR1H 000F                    _TMR1L 000E                    u34_20 013F  
                  u26_20 00EE                    u34_21 013E                    u26_21 00ED  
                  _SPBRG 0099                    u27_20 00F3                    u27_21 00F2  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u28_20 00F7  
                  u28_21 00F6                    u29_20 0104                    u29_21 0103  
                  u55_27 011C                    u56_27 0137                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _SSPIE 0463                    _TRISE 0089                    _SSPIF 0063  
                  _TXREG 0019                    _flags 0079                    _setup 0149  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 00E8                   ??_main 0024  
                 _ADRESH 001E                   _ADRESL 009E         ___awdiv@dividend 0075  
                 ?_setup 0070                   _ANSELH 0189                   i1l1111 00EE  
                 i1l1121 00FD                   i1l1113 00F3                   i1l1131 010F  
                 i1l1123 00FE                   i1l1115 00F7                   i1l1141 0134  
                 i1l1133 0116                   i1l1125 0104                   i1l1117 00FB  
                 i1l1109 00E8                   i1l1135 0123                   i1l1127 0108  
                 i1l1119 00FC                   i1l1137 0127                   i1l1129 010E  
                 i1l1139 012D                   _SPBRGH 009A                   _TMR1ON 0080  
                 _SSPADD 0093                   _TRISC3 043B                   _TRISC4 043C  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
              ??___awdiv 0077         ___awdiv@quotient 0022                   saved_w 007E  
__end_of__initialization 0018           __pcstackCOMMON 0070  __size_of_I2C_Slave_Init 001A  
          __end_of_setup 0165                  ??_setup 0074    I2C_Slave_Init@address 0073  
             __pbssBANK0 0026               __pmaintext 0085               __pintentry 0004  
                _SSPCON2 0091                  _SSPSTAT 0094                  ___awdiv 001C  
                __ptext1 0149                  __ptext2 0165                  __ptext3 001C  
                __ptext4 00E8             __size_of_isr 0061     end_of_initialization 0018  
              _RCSTAbits 0018           _I2C_Slave_Init 0165                _TRISCbits 0087  
              _TXSTAbits 0098   __end_of_I2C_Slave_Init 017F      start_initialization 000F  
            __end_of_isr 0149          ?_I2C_Slave_Init 0070              __pbssCOMMON 0078  
              ___latbits 0002            __pcstackBANK0 0020                 ?___awdiv 0073  
         __size_of_setup 001C        interrupt_function 0004                 _PIR1bits 000C  
       __size_of___awdiv 0069         ??_I2C_Slave_Init 0073            __size_of_main 0063  
               intlevel1 0000              _SSPCON2bits 0091               _SSPCONbits 0014  
