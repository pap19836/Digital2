

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Aug 10 10:50:24 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0009                     _PORTE	set	9
   300  0007                     _PORTC	set	7
   301  0006                     _PORTB	set	6
   302  0005                     _PORTA	set	5
   303  0013                     _SSPBUF	set	19
   304  0014                     _SSPCON	set	20
   305  0019                     _TXREG	set	25
   306  0018                     _RCSTAbits	set	24
   307  0008                     _PORTD	set	8
   308  001E                     _ADRESH	set	30
   309  0063                     _SSPIF	set	99
   310  005E                     _PEIE	set	94
   311  005F                     _GIE	set	95
   312  0049                     _RE1	set	73
   313  0048                     _RE0	set	72
   314  0089                     _TRISE	set	137
   315  0088                     _TRISD	set	136
   316  0087                     _TRISC	set	135
   317  0086                     _TRISB	set	134
   318  0085                     _TRISA	set	133
   319  0091                     _SSPCON2bits	set	145
   320  0093                     _SSPADD	set	147
   321  0091                     _SSPCON2	set	145
   322  0094                     _SSPSTATbits	set	148
   323  0094                     _SSPSTAT	set	148
   324  0087                     _TRISCbits	set	135
   325  0099                     _SPBRG	set	153
   326  009A                     _SPBRGH	set	154
   327  0098                     _TXSTAbits	set	152
   328  009E                     _ADRESL	set	158
   329  0466                     _ADIE	set	1126
   330  0463                     _SSPIE	set	1123
   331  043C                     _TRISC4	set	1084
   332  043B                     _TRISC3	set	1083
   333  043D                     _TRISC5	set	1085
   334  0189                     _ANSELH	set	393
   335  0188                     _ANSEL	set	392
   336  0C3B                     _BRG16	set	3131
   337                           
   338                           	psect	strings
   339  0470                     __pstrings:
   340  0470                     stringtab:
   341  0470                     __stringtab:
   342  0470                     stringcode:	
   343                           ;	String table - string pointers are 1 byte each
   344                           
   345  0470                     stringdir:
   346  0470  3004               	movlw	high stringdir
   347  0471  008A               	movwf	10
   348  0472  0804               	movf	4,w
   349  0473  0A84               	incf	4,f
   350  0474  0782               	addwf	2,f
   351  0475                     __stringbase:
   352  0475  3400               	retlw	0
   353  0476                     __end_of__stringtab:
   354  0476                     STR_1:
   355  0476  3420               	retlw	32	;' '
   356  0477  3420               	retlw	32	;' '
   357  0478  3453               	retlw	83	;'S'
   358  0479  3431               	retlw	49	;'1'
   359  047A  3420               	retlw	32	;' '
   360  047B  3420               	retlw	32	;' '
   361  047C  3420               	retlw	32	;' '
   362  047D  3420               	retlw	32	;' '
   363  047E  3453               	retlw	83	;'S'
   364  047F  3432               	retlw	50	;'2'
   365  0480  3420               	retlw	32	;' '
   366  0481  3420               	retlw	32	;' '
   367  0482  3420               	retlw	32	;' '
   368  0483  3420               	retlw	32	;' '
   369  0484  3453               	retlw	83	;'S'
   370  0485  3433               	retlw	51	;'3'
   371  0486  3420               	retlw	32	;' '
   372  0487  3400               	retlw	0
   373  0488                     STR_3:
   374  0488  3420               	retlw	32	;' '
   375  0489  3420               	retlw	32	;' '
   376  048A  3420               	retlw	32	;' '
   377  048B  3400               	retlw	0
   378  048A                     
   379                           	psect	cinit
   380  000F                     start_initialization:	
   381                           ; #config settings
   382                           
   383  000F                     __initialization:
   384                           
   385                           ; Clear objects allocated to BANK0
   386  000F  1283               	bcf	3,5	;RP0=0, select bank0
   387  0010  1303               	bcf	3,6	;RP1=0, select bank0
   388  0011  01C5               	clrf	__pbssBANK0& (0+127)
   389  0012  01C6               	clrf	(__pbssBANK0+1)& (0+127)
   390  0013  01C7               	clrf	(__pbssBANK0+2)& (0+127)
   391  0014  01C8               	clrf	(__pbssBANK0+3)& (0+127)
   392  0015  01C9               	clrf	(__pbssBANK0+4)& (0+127)
   393  0016  01CA               	clrf	(__pbssBANK0+5)& (0+127)
   394  0017  01CB               	clrf	(__pbssBANK0+6)& (0+127)
   395  0018  01CC               	clrf	(__pbssBANK0+7)& (0+127)
   396  0019                     end_of_initialization:	
   397                           ;End of C runtime variable initialization code
   398                           
   399  0019                     __end_of__initialization:
   400  0019  0183               	clrf	3
   401  001A  120A  118A  281D   	ljmp	_main	;jump to C main() function
   402                           
   403                           	psect	bssBANK0
   404  0045                     __pbssBANK0:
   405  0045                     _analog0_temp:
   406  0045                     	ds	2
   407  0047                     _analog0:
   408  0047                     	ds	2
   409  0049                     _temperature_sensor_temp:
   410  0049                     	ds	1
   411  004A                     _temperature_sensor:
   412  004A                     	ds	1
   413  004B                     _counter_temp:
   414  004B                     	ds	1
   415  004C                     _counter:
   416  004C                     	ds	1
   417                           
   418                           	psect	cstackCOMMON
   419  0070                     __pcstackCOMMON:
   420  0070                     ?_setup:
   421  0070                     ?_Lcd_Cmd:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_Lcd_Init:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_Lcd_Write_Char:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_Lcd_Write_String:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_I2C_Master_Wait:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_I2C_Master_Start:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_I2C_Master_Stop:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_main:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_isr:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ??_isr:	
   449                           ; 1 bytes @ 0x0
   450                           
   451                           
   452                           ; 1 bytes @ 0x0
   453  0070                     	ds	2
   454  0072                     ??_Lcd_Cmd:
   455  0072                     ??_Lcd_Write_Char:	
   456                           ; 1 bytes @ 0x2
   457                           
   458  0072                     ??_I2C_Master_Wait:	
   459                           ; 1 bytes @ 0x2
   460                           
   461  0072                     ??_I2C_Master_Start:	
   462                           ; 1 bytes @ 0x2
   463                           
   464  0072                     ??_I2C_Master_Stop:	
   465                           ; 1 bytes @ 0x2
   466                           
   467  0072                     ?_I2C_Master_Write:	
   468                           ; 1 bytes @ 0x2
   469                           
   470  0072                     ?___bmul:	
   471                           ; 1 bytes @ 0x2
   472                           
   473  0072                     ?_I2C_Master_Read:	
   474                           ; 1 bytes @ 0x2
   475                           
   476  0072                     ?___wmul:	
   477                           ; 2 bytes @ 0x2
   478                           
   479  0072                     ?___lldiv:	
   480                           ; 2 bytes @ 0x2
   481                           
   482  0072                     ___bmul@multiplicand:	
   483                           ; 4 bytes @ 0x2
   484                           
   485  0072                     I2C_Master_Write@d:	
   486                           ; 1 bytes @ 0x2
   487                           
   488  0072                     I2C_Master_Read@a:	
   489                           ; 2 bytes @ 0x2
   490                           
   491  0072                     ___wmul@multiplier:	
   492                           ; 2 bytes @ 0x2
   493                           
   494  0072                     ___lldiv@divisor:	
   495                           ; 2 bytes @ 0x2
   496                           
   497                           
   498                           ; 4 bytes @ 0x2
   499  0072                     	ds	1
   500  0073                     ??___bmul:
   501                           
   502                           ; 1 bytes @ 0x3
   503  0073                     	ds	1
   504  0074                     ??_I2C_Master_Write:
   505  0074                     ??_I2C_Master_Read:	
   506                           ; 1 bytes @ 0x4
   507                           
   508  0074                     Lcd_Cmd@a:	
   509                           ; 1 bytes @ 0x4
   510                           
   511  0074                     Lcd_Write_Char@a:	
   512                           ; 1 bytes @ 0x4
   513                           
   514  0074                     ___bmul@product:	
   515                           ; 1 bytes @ 0x4
   516                           
   517  0074                     ___wmul@multiplicand:	
   518                           ; 1 bytes @ 0x4
   519                           
   520                           
   521                           ; 2 bytes @ 0x4
   522  0074                     	ds	1
   523  0075                     ??_Lcd_Init:
   524  0075                     ??_Lcd_Write_String:	
   525                           ; 1 bytes @ 0x5
   526                           
   527  0075                     ___bmul@multiplier:	
   528                           ; 1 bytes @ 0x5
   529                           
   530  0075                     Lcd_Write_String@i:	
   531                           ; 1 bytes @ 0x5
   532                           
   533                           
   534                           ; 2 bytes @ 0x5
   535  0075                     	ds	1
   536  0076                     ??___wmul:
   537  0076                     I2C_Master_Read@temp:	
   538                           ; 1 bytes @ 0x6
   539                           
   540  0076                     ___wmul@product:	
   541                           ; 2 bytes @ 0x6
   542                           
   543  0076                     ___lldiv@dividend:	
   544                           ; 2 bytes @ 0x6
   545                           
   546                           
   547                           ; 4 bytes @ 0x6
   548  0076                     	ds	1
   549  0077                     Lcd_Write_String@a:
   550                           
   551                           ; 1 bytes @ 0x7
   552  0077                     	ds	1
   553  0078                     ?___lwdiv:
   554  0078                     ___lwdiv@divisor:	
   555                           ; 2 bytes @ 0x8
   556                           
   557                           
   558                           ; 2 bytes @ 0x8
   559  0078                     	ds	2
   560  007A                     ??___lldiv:
   561  007A                     ___lwdiv@dividend:	
   562                           ; 1 bytes @ 0xA
   563                           
   564                           
   565                           ; 2 bytes @ 0xA
   566  007A                     	ds	1
   567  007B                     ??_setup:
   568                           
   569                           ; 1 bytes @ 0xB
   570  007B                     	ds	1
   571                           
   572                           	psect	cstackBANK0
   573  0020                     __pcstackBANK0:
   574  0020                     ??___lwdiv:
   575  0020                     ___lldiv@quotient:	
   576                           ; 1 bytes @ 0x0
   577                           
   578                           
   579                           ; 4 bytes @ 0x0
   580  0020                     	ds	1
   581  0021                     ___lwdiv@quotient:
   582                           
   583                           ; 2 bytes @ 0x1
   584  0021                     	ds	2
   585  0023                     ___lwdiv@counter:
   586                           
   587                           ; 1 bytes @ 0x3
   588  0023                     	ds	1
   589  0024                     ?_divide:
   590  0024                     ___lldiv@counter:	
   591                           ; 1 bytes @ 0x4
   592                           
   593  0024                     divide@value:	
   594                           ; 1 bytes @ 0x4
   595                           
   596                           
   597                           ; 2 bytes @ 0x4
   598  0024                     	ds	1
   599  0025                     ?_I2C_Master_Init:
   600  0025                     I2C_Master_Init@c:	
   601                           ; 1 bytes @ 0x5
   602                           
   603                           
   604                           ; 4 bytes @ 0x5
   605  0025                     	ds	1
   606  0026                     divide@mil:
   607                           
   608                           ; 1 bytes @ 0x6
   609  0026                     	ds	1
   610  0027                     divide@cent:
   611                           
   612                           ; 1 bytes @ 0x7
   613  0027                     	ds	1
   614  0028                     divide@dec:
   615                           
   616                           ; 1 bytes @ 0x8
   617  0028                     	ds	1
   618  0029                     ??_I2C_Master_Init:
   619  0029                     divide@unit:	
   620                           ; 1 bytes @ 0x9
   621                           
   622                           
   623                           ; 1 bytes @ 0x9
   624  0029                     	ds	1
   625  002A                     ??_divide:
   626                           
   627                           ; 1 bytes @ 0xA
   628  002A                     	ds	9
   629  0033                     ??_main:
   630                           
   631                           ; 1 bytes @ 0x13
   632  0033                     	ds	6
   633  0039                     main@cc:
   634                           
   635                           ; 1 bytes @ 0x19
   636  0039                     	ds	1
   637  003A                     main@m0:
   638                           
   639                           ; 1 bytes @ 0x1A
   640  003A                     	ds	1
   641  003B                     main@mc:
   642                           
   643                           ; 1 bytes @ 0x1B
   644  003B                     	ds	1
   645  003C                     main@mt:
   646                           
   647                           ; 1 bytes @ 0x1C
   648  003C                     	ds	1
   649  003D                     main@u0:
   650                           
   651                           ; 1 bytes @ 0x1D
   652  003D                     	ds	1
   653  003E                     main@uc:
   654                           
   655                           ; 1 bytes @ 0x1E
   656  003E                     	ds	1
   657  003F                     main@ut:
   658                           
   659                           ; 1 bytes @ 0x1F
   660  003F                     	ds	1
   661  0040                     main@d0:
   662                           
   663                           ; 1 bytes @ 0x20
   664  0040                     	ds	1
   665  0041                     main@dc:
   666                           
   667                           ; 1 bytes @ 0x21
   668  0041                     	ds	1
   669  0042                     main@dt:
   670                           
   671                           ; 1 bytes @ 0x22
   672  0042                     	ds	1
   673  0043                     main@c0:
   674                           
   675                           ; 1 bytes @ 0x23
   676  0043                     	ds	1
   677  0044                     main@ct:
   678                           
   679                           ; 1 bytes @ 0x24
   680  0044                     	ds	1
   681                           
   682                           	psect	maintext
   683  001D                     __pmaintext:	
   684 ;;
   685 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   686 ;;
   687 ;; *************** function _main *****************
   688 ;; Defined at:
   689 ;;		line 64 in file "main.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;		None
   692 ;; Auto vars:     Size  Location     Type
   693 ;;  ct              1   36[BANK0 ] unsigned char 
   694 ;;  c0              1   35[BANK0 ] unsigned char 
   695 ;;  dt              1   34[BANK0 ] unsigned char 
   696 ;;  dc              1   33[BANK0 ] unsigned char 
   697 ;;  d0              1   32[BANK0 ] unsigned char 
   698 ;;  ut              1   31[BANK0 ] unsigned char 
   699 ;;  uc              1   30[BANK0 ] unsigned char 
   700 ;;  u0              1   29[BANK0 ] unsigned char 
   701 ;;  mt              1   28[BANK0 ] unsigned char 
   702 ;;  mc              1   27[BANK0 ] unsigned char 
   703 ;;  m0              1   26[BANK0 ] unsigned char 
   704 ;;  cc              1   25[BANK0 ] unsigned char 
   705 ;;  v0              1    0        unsigned char 
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : B00/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   715 ;;      Params:         0       0       0       0       0
   716 ;;      Locals:         0      12       0       0       0
   717 ;;      Temps:          0       6       0       0       0
   718 ;;      Totals:         0      18       0       0       0
   719 ;;Total ram usage:       18 bytes
   720 ;; Hardware stack levels required when called: 4
   721 ;; This function calls:
   722 ;;		_I2C_Master_Read
   723 ;;		_I2C_Master_Start
   724 ;;		_I2C_Master_Stop
   725 ;;		_I2C_Master_Write
   726 ;;		_Lcd_Cmd
   727 ;;		_Lcd_Write_Char
   728 ;;		_Lcd_Write_String
   729 ;;		_divide
   730 ;;		_setup
   731 ;; This function is called by:
   732 ;;		Startup code after reset
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           
   737                           ;psect for function _main
   738  001D                     _main:
   739  001D                     l1403:	
   740                           ;incstack = 0
   741                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   742                           
   743                           
   744                           ;main.c: 65:     setup();
   745  001D  120A  118A  23FB  120A  118A  	fcall	_setup
   746  0022                     l1405:
   747                           
   748                           ;main.c: 66:     Lcd_Write_String("  S1    S2    S3 ");
   749  0022  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   750  0023  120A  118A  244B  120A  118A  	fcall	_Lcd_Write_String
   751  0028                     l1407:
   752                           
   753                           ;main.c: 87:         I2C_Master_Start();
   754  0028  120A  118A  24ED  120A  118A  	fcall	_I2C_Master_Start
   755  002D                     l1409:
   756                           
   757                           ;main.c: 88:         I2C_Master_Write(0b00000001);
   758  002D  3001               	movlw	1
   759  002E  00F2               	movwf	I2C_Master_Write@d
   760  002F  3000               	movlw	0
   761  0030  00F3               	movwf	I2C_Master_Write@d+1
   762  0031  120A  118A  24DA  120A  118A  	fcall	_I2C_Master_Write
   763  0036                     l1411:
   764                           
   765                           ;main.c: 89:         analog0 = I2C_Master_Read(0);
   766  0036  3000               	movlw	0
   767  0037  00F2               	movwf	I2C_Master_Read@a
   768  0038  00F3               	movwf	I2C_Master_Read@a+1
   769  0039  120A  118A  23CD  120A  118A  	fcall	_I2C_Master_Read
   770  003E  0873               	movf	?_I2C_Master_Read+1,w
   771  003F  1283               	bcf	3,5	;RP0=0, select bank0
   772  0040  1303               	bcf	3,6	;RP1=0, select bank0
   773  0041  00C8               	movwf	_analog0+1
   774  0042  0872               	movf	?_I2C_Master_Read,w
   775  0043  00C7               	movwf	_analog0
   776  0044                     l1413:
   777                           
   778                           ;main.c: 90:         I2C_Master_Stop();
   779  0044  120A  118A  24E4  120A  118A  	fcall	_I2C_Master_Stop
   780  0049                     l1415:
   781                           
   782                           ;main.c: 91:         _delay((unsigned long)((200)*(4000000/4000.0)));
   783  0049  3002               	movlw	2
   784  004A  1283               	bcf	3,5	;RP0=0, select bank0
   785  004B  1303               	bcf	3,6	;RP1=0, select bank0
   786  004C  00B5               	movwf	??_main+2
   787  004D  3004               	movlw	4
   788  004E  00B4               	movwf	??_main+1
   789  004F  30B9               	movlw	185
   790  0050  00B3               	movwf	??_main
   791  0051                     u637:
   792  0051  0BB3               	decfsz	??_main,f
   793  0052  2851               	goto	u637
   794  0053  0BB4               	decfsz	??_main+1,f
   795  0054  2851               	goto	u637
   796  0055  0BB5               	decfsz	??_main+2,f
   797  0056  2851               	goto	u637
   798  0057  2858               	nop2
   799  0058                     l1417:
   800                           
   801                           ;main.c: 93:         I2C_Master_Start();
   802  0058  120A  118A  24ED  120A  118A  	fcall	_I2C_Master_Start
   803  005D                     l1419:
   804                           
   805                           ;main.c: 94:         I2C_Master_Write(0b00000011);
   806  005D  3003               	movlw	3
   807  005E  00F2               	movwf	I2C_Master_Write@d
   808  005F  3000               	movlw	0
   809  0060  00F3               	movwf	I2C_Master_Write@d+1
   810  0061  120A  118A  24DA  120A  118A  	fcall	_I2C_Master_Write
   811  0066                     l1421:
   812                           
   813                           ;main.c: 95:         counter = I2C_Master_Read(0);
   814  0066  3000               	movlw	0
   815  0067  00F2               	movwf	I2C_Master_Read@a
   816  0068  00F3               	movwf	I2C_Master_Read@a+1
   817  0069  120A  118A  23CD  120A  118A  	fcall	_I2C_Master_Read
   818  006E  0872               	movf	?_I2C_Master_Read,w
   819  006F  1283               	bcf	3,5	;RP0=0, select bank0
   820  0070  1303               	bcf	3,6	;RP1=0, select bank0
   821  0071  00B3               	movwf	??_main
   822  0072  0833               	movf	??_main,w
   823  0073  00CC               	movwf	_counter
   824  0074                     l1423:
   825                           
   826                           ;main.c: 96:         I2C_Master_Stop();
   827  0074  120A  118A  24E4  120A  118A  	fcall	_I2C_Master_Stop
   828  0079                     l1425:
   829                           
   830                           ;main.c: 97:         _delay((unsigned long)((200)*(4000000/4000.0)));
   831  0079  3002               	movlw	2
   832  007A  1283               	bcf	3,5	;RP0=0, select bank0
   833  007B  1303               	bcf	3,6	;RP1=0, select bank0
   834  007C  00B5               	movwf	??_main+2
   835  007D  3004               	movlw	4
   836  007E  00B4               	movwf	??_main+1
   837  007F  30B9               	movlw	185
   838  0080  00B3               	movwf	??_main
   839  0081                     u647:
   840  0081  0BB3               	decfsz	??_main,f
   841  0082  2881               	goto	u647
   842  0083  0BB4               	decfsz	??_main+1,f
   843  0084  2881               	goto	u647
   844  0085  0BB5               	decfsz	??_main+2,f
   845  0086  2881               	goto	u647
   846  0087  2888               	nop2
   847  0088                     l1427:
   848                           
   849                           ;main.c: 101:         I2C_Master_Start();
   850  0088  120A  118A  24ED  120A  118A  	fcall	_I2C_Master_Start
   851  008D                     l1429:
   852                           
   853                           ;main.c: 102:         I2C_Master_Write(0x80);
   854  008D  3080               	movlw	128
   855  008E  00F2               	movwf	I2C_Master_Write@d
   856  008F  3000               	movlw	0
   857  0090  00F3               	movwf	I2C_Master_Write@d+1
   858  0091  120A  118A  24DA  120A  118A  	fcall	_I2C_Master_Write
   859  0096                     l1431:
   860                           
   861                           ;main.c: 103:         I2C_Master_Write(0xF3);
   862  0096  30F3               	movlw	243
   863  0097  00F2               	movwf	I2C_Master_Write@d
   864  0098  3000               	movlw	0
   865  0099  00F3               	movwf	I2C_Master_Write@d+1
   866  009A  120A  118A  24DA  120A  118A  	fcall	_I2C_Master_Write
   867  009F                     l1433:
   868                           
   869                           ;main.c: 104:         I2C_Master_Stop();
   870  009F  120A  118A  24E4  120A  118A  	fcall	_I2C_Master_Stop
   871  00A4                     l1435:
   872                           
   873                           ;main.c: 105:         _delay((unsigned long)((200)*(4000000/4000.0)));
   874  00A4  3002               	movlw	2
   875  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   876  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   877  00A7  00B5               	movwf	??_main+2
   878  00A8  3004               	movlw	4
   879  00A9  00B4               	movwf	??_main+1
   880  00AA  30B9               	movlw	185
   881  00AB  00B3               	movwf	??_main
   882  00AC                     u657:
   883  00AC  0BB3               	decfsz	??_main,f
   884  00AD  28AC               	goto	u657
   885  00AE  0BB4               	decfsz	??_main+1,f
   886  00AF  28AC               	goto	u657
   887  00B0  0BB5               	decfsz	??_main+2,f
   888  00B1  28AC               	goto	u657
   889  00B2  28B3               	nop2
   890  00B3                     l1437:
   891                           
   892                           ;main.c: 107:         I2C_Master_Start();
   893  00B3  120A  118A  24ED  120A  118A  	fcall	_I2C_Master_Start
   894  00B8                     l1439:
   895                           
   896                           ;main.c: 108:         I2C_Master_Write(0b10000001);
   897  00B8  3081               	movlw	129
   898  00B9  00F2               	movwf	I2C_Master_Write@d
   899  00BA  3000               	movlw	0
   900  00BB  00F3               	movwf	I2C_Master_Write@d+1
   901  00BC  120A  118A  24DA  120A  118A  	fcall	_I2C_Master_Write
   902  00C1                     l1441:
   903                           
   904                           ;main.c: 109:         temperature_sensor = I2C_Master_Read(0);
   905  00C1  3000               	movlw	0
   906  00C2  00F2               	movwf	I2C_Master_Read@a
   907  00C3  00F3               	movwf	I2C_Master_Read@a+1
   908  00C4  120A  118A  23CD  120A  118A  	fcall	_I2C_Master_Read
   909  00C9  0872               	movf	?_I2C_Master_Read,w
   910  00CA  1283               	bcf	3,5	;RP0=0, select bank0
   911  00CB  1303               	bcf	3,6	;RP1=0, select bank0
   912  00CC  00B3               	movwf	??_main
   913  00CD  0833               	movf	??_main,w
   914  00CE  00CA               	movwf	_temperature_sensor
   915  00CF                     l1443:
   916                           
   917                           ;main.c: 110:         I2C_Master_Stop();
   918  00CF  120A  118A  24E4  120A  118A  	fcall	_I2C_Master_Stop
   919  00D4                     l1445:
   920                           
   921                           ;main.c: 111:         _delay((unsigned long)((200)*(4000000/4000.0)));
   922  00D4  3002               	movlw	2
   923  00D5  1283               	bcf	3,5	;RP0=0, select bank0
   924  00D6  1303               	bcf	3,6	;RP1=0, select bank0
   925  00D7  00B5               	movwf	??_main+2
   926  00D8  3004               	movlw	4
   927  00D9  00B4               	movwf	??_main+1
   928  00DA  30B9               	movlw	185
   929  00DB  00B3               	movwf	??_main
   930  00DC                     u667:
   931  00DC  0BB3               	decfsz	??_main,f
   932  00DD  28DC               	goto	u667
   933  00DE  0BB4               	decfsz	??_main+1,f
   934  00DF  28DC               	goto	u667
   935  00E0  0BB5               	decfsz	??_main+2,f
   936  00E1  28DC               	goto	u667
   937  00E2  28E3               	nop2
   938  00E3                     l1447:
   939                           
   940                           ;main.c: 113:         if(analog0_temp != analog0 | counter_temp!=counter | temperature_s
      +                          ensor_temp != temperature_sensor){
   941  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   942  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   943  00E5  0848               	movf	_analog0+1,w
   944  00E6  0646               	xorwf	_analog0_temp+1,w
   945  00E7  1D03               	skipz
   946  00E8  28EB               	goto	u605
   947  00E9  0847               	movf	_analog0,w
   948  00EA  0645               	xorwf	_analog0_temp,w
   949  00EB                     u605:
   950  00EB  1D03               	skipz
   951  00EC  28EE               	goto	u601
   952  00ED  28EF               	goto	u600
   953  00EE                     u601:
   954  00EE  28FB               	goto	l1453
   955  00EF                     u600:
   956  00EF                     l1449:
   957  00EF  084B               	movf	_counter_temp,w
   958  00F0  064C               	xorwf	_counter,w
   959  00F1  1D03               	skipz
   960  00F2  28F4               	goto	u611
   961  00F3  28F5               	goto	u610
   962  00F4                     u611:
   963  00F4  28FB               	goto	l1453
   964  00F5                     u610:
   965  00F5                     l1451:
   966  00F5  0849               	movf	_temperature_sensor_temp,w
   967  00F6  064A               	xorwf	_temperature_sensor,w
   968  00F7  1903               	skipnz
   969  00F8  28FA               	goto	u621
   970  00F9  28FB               	goto	u620
   971  00FA                     u621:
   972  00FA  2828               	goto	l1407
   973  00FB                     u620:
   974  00FB                     l1453:
   975                           
   976                           ;main.c: 114:             divide(analog0, &m0, &c0, &d0, &u0);
   977  00FB  0848               	movf	_analog0+1,w
   978  00FC  00A5               	movwf	divide@value+1
   979  00FD  0847               	movf	_analog0,w
   980  00FE  00A4               	movwf	divide@value
   981  00FF  303A               	movlw	(low (main@m0| 0))& (0+255)
   982  0100  00B3               	movwf	??_main
   983  0101  0833               	movf	??_main,w
   984  0102  00A6               	movwf	divide@mil
   985  0103  3043               	movlw	(low (main@c0| 0))& (0+255)
   986  0104  00B4               	movwf	??_main+1
   987  0105  0834               	movf	??_main+1,w
   988  0106  00A7               	movwf	divide@cent
   989  0107  3040               	movlw	(low (main@d0| 0))& (0+255)
   990  0108  00B5               	movwf	??_main+2
   991  0109  0835               	movf	??_main+2,w
   992  010A  00A8               	movwf	divide@dec
   993  010B  303D               	movlw	(low (main@u0| 0))& (0+255)
   994  010C  00B6               	movwf	??_main+3
   995  010D  0836               	movf	??_main+3,w
   996  010E  00A9               	movwf	divide@unit
   997  010F  120A  118A  21C2  120A  118A  	fcall	_divide
   998                           
   999                           ;main.c: 115:             divide(counter, &mc, &cc, &dc, &uc);
  1000  0114  1283               	bcf	3,5	;RP0=0, select bank0
  1001  0115  1303               	bcf	3,6	;RP1=0, select bank0
  1002  0116  084C               	movf	_counter,w
  1003  0117  00B3               	movwf	??_main
  1004  0118  01B4               	clrf	??_main+1
  1005  0119  0833               	movf	??_main,w
  1006  011A  00A4               	movwf	divide@value
  1007  011B  0834               	movf	??_main+1,w
  1008  011C  00A5               	movwf	divide@value+1
  1009  011D  303B               	movlw	(low (main@mc| 0))& (0+255)
  1010  011E  00B5               	movwf	??_main+2
  1011  011F  0835               	movf	??_main+2,w
  1012  0120  00A6               	movwf	divide@mil
  1013  0121  3039               	movlw	(low (main@cc| 0))& (0+255)
  1014  0122  00B6               	movwf	??_main+3
  1015  0123  0836               	movf	??_main+3,w
  1016  0124  00A7               	movwf	divide@cent
  1017  0125  3041               	movlw	(low (main@dc| 0))& (0+255)
  1018  0126  00B7               	movwf	??_main+4
  1019  0127  0837               	movf	??_main+4,w
  1020  0128  00A8               	movwf	divide@dec
  1021  0129  303E               	movlw	(low (main@uc| 0))& (0+255)
  1022  012A  00B8               	movwf	??_main+5
  1023  012B  0838               	movf	??_main+5,w
  1024  012C  00A9               	movwf	divide@unit
  1025  012D  120A  118A  21C2  120A  118A  	fcall	_divide
  1026                           
  1027                           ;main.c: 116:             divide(temperature_sensor, &mt, &ct, &dt, &ut);
  1028  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1029  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1030  0134  084A               	movf	_temperature_sensor,w
  1031  0135  00B3               	movwf	??_main
  1032  0136  01B4               	clrf	??_main+1
  1033  0137  0833               	movf	??_main,w
  1034  0138  00A4               	movwf	divide@value
  1035  0139  0834               	movf	??_main+1,w
  1036  013A  00A5               	movwf	divide@value+1
  1037  013B  303C               	movlw	(low (main@mt| 0))& (0+255)
  1038  013C  00B5               	movwf	??_main+2
  1039  013D  0835               	movf	??_main+2,w
  1040  013E  00A6               	movwf	divide@mil
  1041  013F  3044               	movlw	(low (main@ct| 0))& (0+255)
  1042  0140  00B6               	movwf	??_main+3
  1043  0141  0836               	movf	??_main+3,w
  1044  0142  00A7               	movwf	divide@cent
  1045  0143  3042               	movlw	(low (main@dt| 0))& (0+255)
  1046  0144  00B7               	movwf	??_main+4
  1047  0145  0837               	movf	??_main+4,w
  1048  0146  00A8               	movwf	divide@dec
  1049  0147  303F               	movlw	(low (main@ut| 0))& (0+255)
  1050  0148  00B8               	movwf	??_main+5
  1051  0149  0838               	movf	??_main+5,w
  1052  014A  00A9               	movwf	divide@unit
  1053  014B  120A  118A  21C2  120A  118A  	fcall	_divide
  1054  0150                     l1455:
  1055                           
  1056                           ;main.c: 117:             analog0_temp = analog0;
  1057  0150  1283               	bcf	3,5	;RP0=0, select bank0
  1058  0151  1303               	bcf	3,6	;RP1=0, select bank0
  1059  0152  0848               	movf	_analog0+1,w
  1060  0153  00C6               	movwf	_analog0_temp+1
  1061  0154  0847               	movf	_analog0,w
  1062  0155  00C5               	movwf	_analog0_temp
  1063  0156                     l1457:
  1064                           
  1065                           ;main.c: 118:             counter_temp = counter;
  1066  0156  084C               	movf	_counter,w
  1067  0157  00B3               	movwf	??_main
  1068  0158  0833               	movf	??_main,w
  1069  0159  00CB               	movwf	_counter_temp
  1070  015A                     l1459:
  1071                           
  1072                           ;main.c: 119:             temperature_sensor_temp = temperature_sensor;
  1073  015A  084A               	movf	_temperature_sensor,w
  1074  015B  00B3               	movwf	??_main
  1075  015C  0833               	movf	??_main,w
  1076  015D  00C9               	movwf	_temperature_sensor_temp
  1077  015E                     l1461:
  1078                           
  1079                           ;main.c: 121:             Lcd_Cmd(0b11000000);
  1080  015E  30C0               	movlw	192
  1081  015F  120A  118A  24B9  120A  118A  	fcall	_Lcd_Cmd
  1082  0164                     l1463:
  1083                           
  1084                           ;main.c: 122:             Lcd_Write_String(" ");
  1085  0164  3015               	movlw	(low (((STR_3+2)-__stringbase)| (0+32768)))& (0+255)
  1086  0165  120A  118A  244B  120A  118A  	fcall	_Lcd_Write_String
  1087  016A                     l1465:
  1088                           
  1089                           ;main.c: 123:             Lcd_Write_Char(c0+48);
  1090  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1091  016B  1303               	bcf	3,6	;RP1=0, select bank0
  1092  016C  0843               	movf	main@c0,w
  1093  016D  3E30               	addlw	48
  1094  016E  120A  118A  248C  120A  118A  	fcall	_Lcd_Write_Char
  1095  0173                     l1467:
  1096                           
  1097                           ;main.c: 124:             Lcd_Write_Char(d0+48);
  1098  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1099  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1100  0175  0840               	movf	main@d0,w
  1101  0176  3E30               	addlw	48
  1102  0177  120A  118A  248C  120A  118A  	fcall	_Lcd_Write_Char
  1103  017C                     l1469:
  1104                           
  1105                           ;main.c: 125:             Lcd_Write_Char(u0+48);
  1106  017C  1283               	bcf	3,5	;RP0=0, select bank0
  1107  017D  1303               	bcf	3,6	;RP1=0, select bank0
  1108  017E  083D               	movf	main@u0,w
  1109  017F  3E30               	addlw	48
  1110  0180  120A  118A  248C  120A  118A  	fcall	_Lcd_Write_Char
  1111  0185                     l1471:
  1112                           
  1113                           ;main.c: 126:             Lcd_Write_String("   ");
  1114  0185  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1115  0186  120A  118A  244B  120A  118A  	fcall	_Lcd_Write_String
  1116  018B                     l1473:
  1117                           
  1118                           ;main.c: 127:             Lcd_Write_Char(dc+48);
  1119  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1120  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1121  018D  0841               	movf	main@dc,w
  1122  018E  3E30               	addlw	48
  1123  018F  120A  118A  248C  120A  118A  	fcall	_Lcd_Write_Char
  1124  0194                     l1475:
  1125                           
  1126                           ;main.c: 128:             Lcd_Write_Char(uc+48);
  1127  0194  1283               	bcf	3,5	;RP0=0, select bank0
  1128  0195  1303               	bcf	3,6	;RP1=0, select bank0
  1129  0196  083E               	movf	main@uc,w
  1130  0197  3E30               	addlw	48
  1131  0198  120A  118A  248C  120A  118A  	fcall	_Lcd_Write_Char
  1132  019D                     l1477:
  1133                           
  1134                           ;main.c: 129:             Lcd_Write_String("   ");
  1135  019D  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1136  019E  120A  118A  244B  120A  118A  	fcall	_Lcd_Write_String
  1137  01A3                     l1479:
  1138                           
  1139                           ;main.c: 130:             Lcd_Write_Char(ct+48);
  1140  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1141  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1142  01A5  0844               	movf	main@ct,w
  1143  01A6  3E30               	addlw	48
  1144  01A7  120A  118A  248C  120A  118A  	fcall	_Lcd_Write_Char
  1145  01AC                     l1481:
  1146                           
  1147                           ;main.c: 131:             Lcd_Write_Char(dt+48);
  1148  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  1149  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  1150  01AE  0842               	movf	main@dt,w
  1151  01AF  3E30               	addlw	48
  1152  01B0  120A  118A  248C  120A  118A  	fcall	_Lcd_Write_Char
  1153  01B5                     l1483:
  1154                           
  1155                           ;main.c: 132:             Lcd_Write_Char(ut+48);
  1156  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  1157  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  1158  01B7  083F               	movf	main@ut,w
  1159  01B8  3E30               	addlw	48
  1160  01B9  120A  118A  248C  120A  118A  	fcall	_Lcd_Write_Char
  1161  01BE  2828               	goto	l1407
  1162  01BF  120A  118A  280C   	ljmp	start
  1163  01C2                     __end_of_main:
  1164                           
  1165                           	psect	text1
  1166  03FB                     __ptext1:	
  1167 ;; *************** function _setup *****************
  1168 ;; Defined at:
  1169 ;;		line 141 in file "main.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;		None
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;		None
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      void 
  1176 ;; Registers used:
  1177 ;;		wreg, status,2, status,0, pclath, cstack
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1183 ;;      Params:         0       0       0       0       0
  1184 ;;      Locals:         0       0       0       0       0
  1185 ;;      Temps:          0       0       0       0       0
  1186 ;;      Totals:         0       0       0       0       0
  1187 ;;Total ram usage:        0 bytes
  1188 ;; Hardware stack levels used: 1
  1189 ;; Hardware stack levels required when called: 3
  1190 ;; This function calls:
  1191 ;;		_I2C_Master_Init
  1192 ;;		_Lcd_Init
  1193 ;; This function is called by:
  1194 ;;		_main
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           
  1199                           ;psect for function _setup
  1200  03FB                     _setup:
  1201  03FB                     l1369:	
  1202                           ;incstack = 0
  1203                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1204                           
  1205                           
  1206                           ;main.c: 143:     ANSEL = 0;
  1207  03FB  1683               	bsf	3,5	;RP0=1, select bank3
  1208  03FC  1703               	bsf	3,6	;RP1=1, select bank3
  1209  03FD  0188               	clrf	8	;volatile
  1210                           
  1211                           ;main.c: 144:     ANSELH = 0;
  1212  03FE  0189               	clrf	9	;volatile
  1213                           
  1214                           ;main.c: 145:     TRISA = 0;
  1215  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  1216  0400  1303               	bcf	3,6	;RP1=0, select bank1
  1217  0401  0185               	clrf	5	;volatile
  1218                           
  1219                           ;main.c: 146:     TRISB = 0;
  1220  0402  0186               	clrf	6	;volatile
  1221  0403                     l1371:
  1222                           
  1223                           ;main.c: 147:     TRISC = 0b10010000;
  1224  0403  3090               	movlw	144
  1225  0404  0087               	movwf	7	;volatile
  1226  0405                     l1373:
  1227                           
  1228                           ;main.c: 148:     TRISD = 0;
  1229  0405  0188               	clrf	8	;volatile
  1230  0406                     l1375:
  1231                           
  1232                           ;main.c: 149:     TRISE = 0;
  1233  0406  0189               	clrf	9	;volatile
  1234  0407                     l1377:
  1235                           
  1236                           ;main.c: 152:     GIE = 1;
  1237  0407  178B               	bsf	11,7	;volatile
  1238  0408                     l1379:
  1239                           
  1240                           ;main.c: 153:     PEIE = 1;
  1241  0408  170B               	bsf	11,6	;volatile
  1242  0409                     l1381:
  1243                           
  1244                           ;main.c: 154:     ADIE = 1;
  1245  0409  170C               	bsf	12,6	;volatile
  1246  040A                     l1383:
  1247                           
  1248                           ;main.c: 157:     Lcd_Init();
  1249  040A  120A  118A  22F7  120A  118A  	fcall	_Lcd_Init
  1250  040F                     l1385:
  1251                           
  1252                           ;main.c: 159:     I2C_Master_Init(100000);
  1253  040F  3000               	movlw	0
  1254  0410  1283               	bcf	3,5	;RP0=0, select bank0
  1255  0411  1303               	bcf	3,6	;RP1=0, select bank0
  1256  0412  00A8               	movwf	I2C_Master_Init@c+3
  1257  0413  3001               	movlw	1
  1258  0414  00A7               	movwf	I2C_Master_Init@c+2
  1259  0415  3086               	movlw	134
  1260  0416  00A6               	movwf	I2C_Master_Init@c+1
  1261  0417  30A0               	movlw	160
  1262  0418  00A5               	movwf	I2C_Master_Init@c
  1263  0419  120A  118A  2395  120A  118A  	fcall	_I2C_Master_Init
  1264  041E                     l1387:
  1265                           
  1266                           ;main.c: 162:     PORTA = 0;
  1267  041E  1283               	bcf	3,5	;RP0=0, select bank0
  1268  041F  1303               	bcf	3,6	;RP1=0, select bank0
  1269  0420  0185               	clrf	5	;volatile
  1270  0421                     l1389:
  1271                           
  1272                           ;main.c: 163:     PORTB = 0;
  1273  0421  0186               	clrf	6	;volatile
  1274  0422                     l1391:
  1275                           
  1276                           ;main.c: 164:     PORTC = 0;
  1277  0422  0187               	clrf	7	;volatile
  1278  0423                     l1393:
  1279                           
  1280                           ;main.c: 165:     PORTD = 0;
  1281  0423  0188               	clrf	8	;volatile
  1282  0424                     l1395:
  1283                           
  1284                           ;main.c: 166:     PORTE = 0;
  1285  0424  0189               	clrf	9	;volatile
  1286  0425                     l230:
  1287  0425  0008               	return
  1288  0426                     __end_of_setup:
  1289                           
  1290                           	psect	text2
  1291  02F7                     __ptext2:	
  1292 ;; *************** function _Lcd_Init *****************
  1293 ;; Defined at:
  1294 ;;		line 42 in file "Digital2_toolbox.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;		None
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;		None
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  1    wreg      void 
  1301 ;; Registers used:
  1302 ;;		wreg, status,2, status,0, pclath, cstack
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1308 ;;      Params:         0       0       0       0       0
  1309 ;;      Locals:         0       0       0       0       0
  1310 ;;      Temps:          2       0       0       0       0
  1311 ;;      Totals:         2       0       0       0       0
  1312 ;;Total ram usage:        2 bytes
  1313 ;; Hardware stack levels used: 1
  1314 ;; Hardware stack levels required when called: 2
  1315 ;; This function calls:
  1316 ;;		_Lcd_Cmd
  1317 ;; This function is called by:
  1318 ;;		_setup
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           
  1323                           ;psect for function _Lcd_Init
  1324  02F7                     _Lcd_Init:
  1325  02F7                     l1225:	
  1326                           ;incstack = 0
  1327                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1328                           
  1329                           
  1330                           ;Digital2_toolbox.c: 43:     PORTD = 0;
  1331  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  1332  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  1333  02F9  0188               	clrf	8	;volatile
  1334  02FA                     l1227:
  1335                           
  1336                           ;Digital2_toolbox.c: 44:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1337  02FA  301A               	movlw	26
  1338  02FB  00F6               	movwf	??_Lcd_Init+1
  1339  02FC  30F8               	movlw	248
  1340  02FD  00F5               	movwf	??_Lcd_Init
  1341  02FE                     u677:
  1342  02FE  0BF5               	decfsz	??_Lcd_Init,f
  1343  02FF  2AFE               	goto	u677
  1344  0300  0BF6               	decfsz	??_Lcd_Init+1,f
  1345  0301  2AFE               	goto	u677
  1346  0302  0000               	nop
  1347  0303                     l1229:
  1348                           
  1349                           ;Digital2_toolbox.c: 45:     Lcd_Cmd(0x030);
  1350  0303  3030               	movlw	48
  1351  0304  120A  118A  24B9  120A  118A  	fcall	_Lcd_Cmd
  1352  0309                     l1231:
  1353                           
  1354                           ;Digital2_toolbox.c: 46:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1355  0309  3007               	movlw	7
  1356  030A  00F6               	movwf	??_Lcd_Init+1
  1357  030B  307D               	movlw	125
  1358  030C  00F5               	movwf	??_Lcd_Init
  1359  030D                     u687:
  1360  030D  0BF5               	decfsz	??_Lcd_Init,f
  1361  030E  2B0D               	goto	u687
  1362  030F  0BF6               	decfsz	??_Lcd_Init+1,f
  1363  0310  2B0D               	goto	u687
  1364  0311                     l1233:
  1365                           
  1366                           ;Digital2_toolbox.c: 47:     Lcd_Cmd(0x030);
  1367  0311  3030               	movlw	48
  1368  0312  120A  118A  24B9  120A  118A  	fcall	_Lcd_Cmd
  1369  0317                     l1235:
  1370                           
  1371                           ;Digital2_toolbox.c: 48:     _delay((unsigned long)((160)*(4000000/4000000.0)));
  1372  0317  3035               	movlw	53
  1373  0318  00F5               	movwf	??_Lcd_Init
  1374  0319                     u697:
  1375  0319  0BF5               	decfsz	??_Lcd_Init,f
  1376  031A  2B19               	goto	u697
  1377  031B                     l1237:
  1378                           
  1379                           ;Digital2_toolbox.c: 49:     Lcd_Cmd(0x030);
  1380  031B  3030               	movlw	48
  1381  031C  120A  118A  24B9  120A  118A  	fcall	_Lcd_Cmd
  1382  0321                     l1239:
  1383                           
  1384                           ;Digital2_toolbox.c: 51:     Lcd_Cmd(0b00111000);
  1385  0321  3038               	movlw	56
  1386  0322  120A  118A  24B9  120A  118A  	fcall	_Lcd_Cmd
  1387  0327                     l1241:
  1388                           
  1389                           ;Digital2_toolbox.c: 52:     Lcd_Cmd(0x10);
  1390  0327  3010               	movlw	16
  1391  0328  120A  118A  24B9  120A  118A  	fcall	_Lcd_Cmd
  1392  032D                     l1243:
  1393                           
  1394                           ;Digital2_toolbox.c: 53:     Lcd_Cmd(0x01);
  1395  032D  3001               	movlw	1
  1396  032E  120A  118A  24B9  120A  118A  	fcall	_Lcd_Cmd
  1397  0333                     l1245:
  1398                           
  1399                           ;Digital2_toolbox.c: 54:     Lcd_Cmd(0b00000110);
  1400  0333  3006               	movlw	6
  1401  0334  120A  118A  24B9  120A  118A  	fcall	_Lcd_Cmd
  1402  0339                     l1247:
  1403                           
  1404                           ;Digital2_toolbox.c: 55:     Lcd_Cmd(0x10);
  1405  0339  3010               	movlw	16
  1406  033A  120A  118A  24B9  120A  118A  	fcall	_Lcd_Cmd
  1407  033F                     l1249:
  1408                           
  1409                           ;Digital2_toolbox.c: 56:     Lcd_Cmd(0b00001100);
  1410  033F  300C               	movlw	12
  1411  0340  120A  118A  24B9  120A  118A  	fcall	_Lcd_Cmd
  1412  0345                     l1251:
  1413                           
  1414                           ;Digital2_toolbox.c: 57:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1415  0345  3082               	movlw	130
  1416  0346  00F6               	movwf	??_Lcd_Init+1
  1417  0347  30DD               	movlw	221
  1418  0348  00F5               	movwf	??_Lcd_Init
  1419  0349                     u707:
  1420  0349  0BF5               	decfsz	??_Lcd_Init,f
  1421  034A  2B49               	goto	u707
  1422  034B  0BF6               	decfsz	??_Lcd_Init+1,f
  1423  034C  2B49               	goto	u707
  1424  034D  2B4E               	nop2
  1425  034E                     l69:
  1426  034E  0008               	return
  1427  034F                     __end_of_Lcd_Init:
  1428                           
  1429                           	psect	text3
  1430  04B9                     __ptext3:	
  1431 ;; *************** function _Lcd_Cmd *****************
  1432 ;; Defined at:
  1433 ;;		line 28 in file "Digital2_toolbox.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;  a               1    wreg     unsigned char 
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;  a               1    4[COMMON] unsigned char 
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      void 
  1440 ;; Registers used:
  1441 ;;		wreg
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1447 ;;      Params:         0       0       0       0       0
  1448 ;;      Locals:         1       0       0       0       0
  1449 ;;      Temps:          2       0       0       0       0
  1450 ;;      Totals:         3       0       0       0       0
  1451 ;;Total ram usage:        3 bytes
  1452 ;; Hardware stack levels used: 1
  1453 ;; Hardware stack levels required when called: 1
  1454 ;; This function calls:
  1455 ;;		Nothing
  1456 ;; This function is called by:
  1457 ;;		_Lcd_Init
  1458 ;;		_main
  1459 ;;		_Lcd_Clear
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           
  1464                           ;psect for function _Lcd_Cmd
  1465  04B9                     _Lcd_Cmd:
  1466                           
  1467                           ;incstack = 0
  1468                           ; Regs used in _Lcd_Cmd: [wreg]
  1469                           ;Lcd_Cmd@a stored from wreg
  1470  04B9  00F4               	movwf	Lcd_Cmd@a
  1471  04BA                     l1193:
  1472                           
  1473                           ;Digital2_toolbox.c: 29:     RE0 = 0;
  1474  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  1475  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  1476  04BC  1009               	bcf	9,0	;volatile
  1477  04BD                     l1195:
  1478                           
  1479                           ;Digital2_toolbox.c: 30:     PORTD = a;
  1480  04BD  0874               	movf	Lcd_Cmd@a,w
  1481  04BE  0088               	movwf	8	;volatile
  1482  04BF                     l1197:
  1483                           
  1484                           ;Digital2_toolbox.c: 31:     RE1 = 1;
  1485  04BF  1489               	bsf	9,1	;volatile
  1486                           
  1487                           ;Digital2_toolbox.c: 32:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1488  04C0  3006               	movlw	6
  1489  04C1  00F3               	movwf	??_Lcd_Cmd+1
  1490  04C2  3030               	movlw	48
  1491  04C3  00F2               	movwf	??_Lcd_Cmd
  1492  04C4                     u717:
  1493  04C4  0BF2               	decfsz	??_Lcd_Cmd,f
  1494  04C5  2CC4               	goto	u717
  1495  04C6  0BF3               	decfsz	??_Lcd_Cmd+1,f
  1496  04C7  2CC4               	goto	u717
  1497  04C8  0000               	nop
  1498  04C9                     l1199:
  1499                           
  1500                           ;Digital2_toolbox.c: 33:     RE1 = 0;
  1501  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  1502  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  1503  04CB  1089               	bcf	9,1	;volatile
  1504  04CC                     l63:
  1505  04CC  0008               	return
  1506  04CD                     __end_of_Lcd_Cmd:
  1507                           
  1508                           	psect	text4
  1509  0395                     __ptext4:	
  1510 ;; *************** function _I2C_Master_Init *****************
  1511 ;; Defined at:
  1512 ;;		line 170 in file "Digital2_toolbox.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  c               4    5[BANK0 ] const unsigned long 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;		None
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0, pclath, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1526 ;;      Params:         0       4       0       0       0
  1527 ;;      Locals:         0       0       0       0       0
  1528 ;;      Temps:          0       4       0       0       0
  1529 ;;      Totals:         0       8       0       0       0
  1530 ;;Total ram usage:        8 bytes
  1531 ;; Hardware stack levels used: 1
  1532 ;; Hardware stack levels required when called: 2
  1533 ;; This function calls:
  1534 ;;		___lldiv
  1535 ;; This function is called by:
  1536 ;;		_setup
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           
  1541                           ;psect for function _I2C_Master_Init
  1542  0395                     _I2C_Master_Init:
  1543  0395                     l1261:	
  1544                           ;incstack = 0
  1545                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1546                           
  1547                           
  1548                           ;Digital2_toolbox.c: 170: void I2C_Master_Init(const unsigned long c);Digital2_toolbox.c
      +                          : 171: {;Digital2_toolbox.c: 172:     SSPCON = 0b00101000;
  1549  0395  3028               	movlw	40
  1550  0396  1283               	bcf	3,5	;RP0=0, select bank0
  1551  0397  1303               	bcf	3,6	;RP1=0, select bank0
  1552  0398  0094               	movwf	20	;volatile
  1553  0399                     l1263:
  1554                           
  1555                           ;Digital2_toolbox.c: 173:     SSPCON2 = 0;
  1556  0399  1683               	bsf	3,5	;RP0=1, select bank1
  1557  039A  1303               	bcf	3,6	;RP1=0, select bank1
  1558  039B  0191               	clrf	17	;volatile
  1559  039C                     l1265:
  1560                           
  1561                           ;Digital2_toolbox.c: 174:     SSPADD = (4000000/(4*c))-1;
  1562  039C  1283               	bcf	3,5	;RP0=0, select bank0
  1563  039D  1303               	bcf	3,6	;RP1=0, select bank0
  1564  039E  0825               	movf	I2C_Master_Init@c,w
  1565  039F  00A9               	movwf	??_I2C_Master_Init
  1566  03A0  0826               	movf	I2C_Master_Init@c+1,w
  1567  03A1  00AA               	movwf	??_I2C_Master_Init+1
  1568  03A2  0827               	movf	I2C_Master_Init@c+2,w
  1569  03A3  00AB               	movwf	??_I2C_Master_Init+2
  1570  03A4  0828               	movf	I2C_Master_Init@c+3,w
  1571  03A5  00AC               	movwf	??_I2C_Master_Init+3
  1572  03A6  3002               	movlw	2
  1573  03A7                     u425:
  1574  03A7  1003               	clrc
  1575  03A8  0DA9               	rlf	??_I2C_Master_Init,f
  1576  03A9  0DAA               	rlf	??_I2C_Master_Init+1,f
  1577  03AA  0DAB               	rlf	??_I2C_Master_Init+2,f
  1578  03AB  0DAC               	rlf	??_I2C_Master_Init+3,f
  1579  03AC                     u420:
  1580  03AC  3EFF               	addlw	-1
  1581  03AD  1D03               	skipz
  1582  03AE  2BA7               	goto	u425
  1583  03AF  082C               	movf	??_I2C_Master_Init+3,w
  1584  03B0  00F5               	movwf	___lldiv@divisor+3
  1585  03B1  082B               	movf	??_I2C_Master_Init+2,w
  1586  03B2  00F4               	movwf	___lldiv@divisor+2
  1587  03B3  082A               	movf	??_I2C_Master_Init+1,w
  1588  03B4  00F3               	movwf	___lldiv@divisor+1
  1589  03B5  0829               	movf	??_I2C_Master_Init,w
  1590  03B6  00F2               	movwf	___lldiv@divisor
  1591  03B7  3000               	movlw	0
  1592  03B8  00F9               	movwf	___lldiv@dividend+3
  1593  03B9  303D               	movlw	61
  1594  03BA  00F8               	movwf	___lldiv@dividend+2
  1595  03BB  3009               	movlw	9
  1596  03BC  00F7               	movwf	___lldiv@dividend+1
  1597  03BD  3000               	movlw	0
  1598  03BE  00F6               	movwf	___lldiv@dividend
  1599  03BF  120A  118A  228F  120A  118A  	fcall	___lldiv
  1600  03C4  0872               	movf	?___lldiv,w
  1601  03C5  3EFF               	addlw	255
  1602  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  1603  03C7  1303               	bcf	3,6	;RP1=0, select bank1
  1604  03C8  0093               	movwf	19	;volatile
  1605  03C9                     l1267:
  1606                           
  1607                           ;Digital2_toolbox.c: 175:     SSPSTAT = 0;
  1608  03C9  0194               	clrf	20	;volatile
  1609  03CA                     l1269:
  1610                           
  1611                           ;Digital2_toolbox.c: 176:     TRISCbits.TRISC3 = 1;
  1612  03CA  1587               	bsf	7,3	;volatile
  1613  03CB                     l1271:
  1614                           
  1615                           ;Digital2_toolbox.c: 177:     TRISCbits.TRISC4 = 1;
  1616  03CB  1607               	bsf	7,4	;volatile
  1617  03CC                     l121:
  1618  03CC  0008               	return
  1619  03CD                     __end_of_I2C_Master_Init:
  1620                           
  1621                           	psect	text5
  1622  028F                     __ptext5:	
  1623 ;; *************** function ___lldiv *****************
  1624 ;; Defined at:
  1625 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;  divisor         4    2[COMMON] unsigned long 
  1628 ;;  dividend        4    6[COMMON] unsigned long 
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;  quotient        4    0[BANK0 ] unsigned long 
  1631 ;;  counter         1    4[BANK0 ] unsigned char 
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  4    2[COMMON] unsigned long 
  1634 ;; Registers used:
  1635 ;;		wreg, status,2, status,0
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1641 ;;      Params:         8       0       0       0       0
  1642 ;;      Locals:         0       5       0       0       0
  1643 ;;      Temps:          1       0       0       0       0
  1644 ;;      Totals:         9       5       0       0       0
  1645 ;;Total ram usage:       14 bytes
  1646 ;; Hardware stack levels used: 1
  1647 ;; Hardware stack levels required when called: 1
  1648 ;; This function calls:
  1649 ;;		Nothing
  1650 ;; This function is called by:
  1651 ;;		_I2C_Master_Init
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           
  1656                           ;psect for function ___lldiv
  1657  028F                     ___lldiv:
  1658  028F                     l1201:	
  1659                           ;incstack = 0
  1660                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1661                           
  1662  028F  3000               	movlw	0
  1663  0290  1283               	bcf	3,5	;RP0=0, select bank0
  1664  0291  1303               	bcf	3,6	;RP1=0, select bank0
  1665  0292  00A3               	movwf	___lldiv@quotient+3
  1666  0293  3000               	movlw	0
  1667  0294  00A2               	movwf	___lldiv@quotient+2
  1668  0295  3000               	movlw	0
  1669  0296  00A1               	movwf	___lldiv@quotient+1
  1670  0297  3000               	movlw	0
  1671  0298  00A0               	movwf	___lldiv@quotient
  1672  0299  0875               	movf	___lldiv@divisor+3,w
  1673  029A  0474               	iorwf	___lldiv@divisor+2,w
  1674  029B  0473               	iorwf	___lldiv@divisor+1,w
  1675  029C  0472               	iorwf	___lldiv@divisor,w
  1676  029D  1903               	skipnz
  1677  029E  2AA0               	goto	u351
  1678  029F  2AA1               	goto	u350
  1679  02A0                     u351:
  1680  02A0  2AEE               	goto	l1221
  1681  02A1                     u350:
  1682  02A1                     l1203:
  1683  02A1  01A4               	clrf	___lldiv@counter
  1684  02A2  0AA4               	incf	___lldiv@counter,f
  1685  02A3  2AB1               	goto	l1207
  1686  02A4                     l1205:
  1687  02A4  3001               	movlw	1
  1688  02A5  00FA               	movwf	??___lldiv
  1689  02A6                     u365:
  1690  02A6  1003               	clrc
  1691  02A7  0DF2               	rlf	___lldiv@divisor,f
  1692  02A8  0DF3               	rlf	___lldiv@divisor+1,f
  1693  02A9  0DF4               	rlf	___lldiv@divisor+2,f
  1694  02AA  0DF5               	rlf	___lldiv@divisor+3,f
  1695  02AB  0BFA               	decfsz	??___lldiv,f
  1696  02AC  2AA6               	goto	u365
  1697  02AD  3001               	movlw	1
  1698  02AE  00FA               	movwf	??___lldiv
  1699  02AF  087A               	movf	??___lldiv,w
  1700  02B0  07A4               	addwf	___lldiv@counter,f
  1701  02B1                     l1207:
  1702  02B1  1FF5               	btfss	___lldiv@divisor+3,7
  1703  02B2  2AB4               	goto	u371
  1704  02B3  2AB5               	goto	u370
  1705  02B4                     u371:
  1706  02B4  2AA4               	goto	l1205
  1707  02B5                     u370:
  1708  02B5                     l1209:
  1709  02B5  3001               	movlw	1
  1710  02B6  00FA               	movwf	??___lldiv
  1711  02B7                     u385:
  1712  02B7  1003               	clrc
  1713  02B8  0DA0               	rlf	___lldiv@quotient,f
  1714  02B9  0DA1               	rlf	___lldiv@quotient+1,f
  1715  02BA  0DA2               	rlf	___lldiv@quotient+2,f
  1716  02BB  0DA3               	rlf	___lldiv@quotient+3,f
  1717  02BC  0BFA               	decfsz	??___lldiv,f
  1718  02BD  2AB7               	goto	u385
  1719  02BE                     l1211:
  1720  02BE  0875               	movf	___lldiv@divisor+3,w
  1721  02BF  0279               	subwf	___lldiv@dividend+3,w
  1722  02C0  1D03               	skipz
  1723  02C1  2ACC               	goto	u395
  1724  02C2  0874               	movf	___lldiv@divisor+2,w
  1725  02C3  0278               	subwf	___lldiv@dividend+2,w
  1726  02C4  1D03               	skipz
  1727  02C5  2ACC               	goto	u395
  1728  02C6  0873               	movf	___lldiv@divisor+1,w
  1729  02C7  0277               	subwf	___lldiv@dividend+1,w
  1730  02C8  1D03               	skipz
  1731  02C9  2ACC               	goto	u395
  1732  02CA  0872               	movf	___lldiv@divisor,w
  1733  02CB  0276               	subwf	___lldiv@dividend,w
  1734  02CC                     u395:
  1735  02CC  1C03               	skipc
  1736  02CD  2ACF               	goto	u391
  1737  02CE  2AD0               	goto	u390
  1738  02CF                     u391:
  1739  02CF  2ADF               	goto	l1217
  1740  02D0                     u390:
  1741  02D0                     l1213:
  1742  02D0  0872               	movf	___lldiv@divisor,w
  1743  02D1  02F6               	subwf	___lldiv@dividend,f
  1744  02D2  0873               	movf	___lldiv@divisor+1,w
  1745  02D3  1C03               	skipc
  1746  02D4  0F73               	incfsz	___lldiv@divisor+1,w
  1747  02D5  02F7               	subwf	___lldiv@dividend+1,f
  1748  02D6  0874               	movf	___lldiv@divisor+2,w
  1749  02D7  1C03               	skipc
  1750  02D8  0F74               	incfsz	___lldiv@divisor+2,w
  1751  02D9  02F8               	subwf	___lldiv@dividend+2,f
  1752  02DA  0875               	movf	___lldiv@divisor+3,w
  1753  02DB  1C03               	skipc
  1754  02DC  0F75               	incfsz	___lldiv@divisor+3,w
  1755  02DD  02F9               	subwf	___lldiv@dividend+3,f
  1756  02DE                     l1215:
  1757  02DE  1420               	bsf	___lldiv@quotient,0
  1758  02DF                     l1217:
  1759  02DF  3001               	movlw	1
  1760  02E0                     u405:
  1761  02E0  1003               	clrc
  1762  02E1  0CF5               	rrf	___lldiv@divisor+3,f
  1763  02E2  0CF4               	rrf	___lldiv@divisor+2,f
  1764  02E3  0CF3               	rrf	___lldiv@divisor+1,f
  1765  02E4  0CF2               	rrf	___lldiv@divisor,f
  1766  02E5  3EFF               	addlw	-1
  1767  02E6  1D03               	skipz
  1768  02E7  2AE0               	goto	u405
  1769  02E8                     l1219:
  1770  02E8  3001               	movlw	1
  1771  02E9  02A4               	subwf	___lldiv@counter,f
  1772  02EA  1D03               	btfss	3,2
  1773  02EB  2AED               	goto	u411
  1774  02EC  2AEE               	goto	u410
  1775  02ED                     u411:
  1776  02ED  2AB5               	goto	l1209
  1777  02EE                     u410:
  1778  02EE                     l1221:
  1779  02EE  0823               	movf	___lldiv@quotient+3,w
  1780  02EF  00F5               	movwf	?___lldiv+3
  1781  02F0  0822               	movf	___lldiv@quotient+2,w
  1782  02F1  00F4               	movwf	?___lldiv+2
  1783  02F2  0821               	movf	___lldiv@quotient+1,w
  1784  02F3  00F3               	movwf	?___lldiv+1
  1785  02F4  0820               	movf	___lldiv@quotient,w
  1786  02F5  00F2               	movwf	?___lldiv
  1787  02F6                     l357:
  1788  02F6  0008               	return
  1789  02F7                     __end_of___lldiv:
  1790                           
  1791                           	psect	text6
  1792  01C2                     __ptext6:	
  1793 ;; *************** function _divide *****************
  1794 ;; Defined at:
  1795 ;;		line 267 in file "Digital2_toolbox.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;  value           2    4[BANK0 ] unsigned int 
  1798 ;;  mil             1    6[BANK0 ] PTR unsigned char 
  1799 ;;		 -> main@mt(1), main@mc(1), main@m0(1), 
  1800 ;;  cent            1    7[BANK0 ] PTR unsigned char 
  1801 ;;		 -> main@ct(1), main@cc(1), main@c0(1), 
  1802 ;;  dec             1    8[BANK0 ] PTR unsigned char 
  1803 ;;		 -> main@dt(1), main@dc(1), main@d0(1), 
  1804 ;;  unit            1    9[BANK0 ] PTR unsigned char 
  1805 ;;		 -> main@ut(1), main@uc(1), main@u0(1), 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;		None
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  1    wreg      void 
  1810 ;; Registers used:
  1811 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1817 ;;      Params:         0       6       0       0       0
  1818 ;;      Locals:         0       0       0       0       0
  1819 ;;      Temps:          0       9       0       0       0
  1820 ;;      Totals:         0      15       0       0       0
  1821 ;;Total ram usage:       15 bytes
  1822 ;; Hardware stack levels used: 1
  1823 ;; Hardware stack levels required when called: 2
  1824 ;; This function calls:
  1825 ;;		___bmul
  1826 ;;		___lwdiv
  1827 ;;		___wmul
  1828 ;; This function is called by:
  1829 ;;		_main
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           
  1834                           ;psect for function _divide
  1835  01C2                     _divide:
  1836  01C2                     l1367:	
  1837                           ;incstack = 0
  1838                           ; Regs used in _divide: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1839                           
  1840                           
  1841                           ;Digital2_toolbox.c: 268:     *mil=value/1000;
  1842  01C2  30E8               	movlw	232
  1843  01C3  00F8               	movwf	___lwdiv@divisor
  1844  01C4  3003               	movlw	3
  1845  01C5  00F9               	movwf	___lwdiv@divisor+1
  1846  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  1847  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  1848  01C8  0825               	movf	divide@value+1,w
  1849  01C9  00FB               	movwf	___lwdiv@dividend+1
  1850  01CA  0824               	movf	divide@value,w
  1851  01CB  00FA               	movwf	___lwdiv@dividend
  1852  01CC  120A  118A  234F  120A  118A  	fcall	___lwdiv
  1853  01D1  0878               	movf	?___lwdiv,w
  1854  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1855  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1856  01D4  00AA               	movwf	??_divide
  1857  01D5  0826               	movf	divide@mil,w
  1858  01D6  0084               	movwf	4
  1859  01D7  082A               	movf	??_divide,w
  1860  01D8  1383               	bcf	3,7	;select IRP bank0
  1861  01D9  0080               	movwf	0
  1862                           
  1863                           ;Digital2_toolbox.c: 269:     *cent=(value-1000*(int)*mil)/100;
  1864  01DA  3064               	movlw	100
  1865  01DB  00F8               	movwf	___lwdiv@divisor
  1866  01DC  3000               	movlw	0
  1867  01DD  00F9               	movwf	___lwdiv@divisor+1
  1868  01DE  0826               	movf	divide@mil,w
  1869  01DF  0084               	movwf	4
  1870  01E0  0800               	movf	0,w
  1871  01E1  00AA               	movwf	??_divide
  1872  01E2  01AB               	clrf	??_divide+1
  1873  01E3  082A               	movf	??_divide,w
  1874  01E4  00F2               	movwf	___wmul@multiplier
  1875  01E5  082B               	movf	??_divide+1,w
  1876  01E6  00F3               	movwf	___wmul@multiplier+1
  1877  01E7  3018               	movlw	24
  1878  01E8  00F4               	movwf	___wmul@multiplicand
  1879  01E9  30FC               	movlw	252
  1880  01EA  00F5               	movwf	___wmul@multiplicand+1
  1881  01EB  120A  118A  2426  120A  118A  	fcall	___wmul
  1882  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  1883  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  1884  01F2  0824               	movf	divide@value,w
  1885  01F3  0772               	addwf	?___wmul,w
  1886  01F4  00FA               	movwf	___lwdiv@dividend
  1887  01F5  0825               	movf	divide@value+1,w
  1888  01F6  1803               	skipnc
  1889  01F7  0A25               	incf	divide@value+1,w
  1890  01F8  0773               	addwf	?___wmul+1,w
  1891  01F9  00FB               	movwf	___lwdiv@dividend+1
  1892  01FA  120A  118A  234F  120A  118A  	fcall	___lwdiv
  1893  01FF  0878               	movf	?___lwdiv,w
  1894  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1895  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1896  0202  00AC               	movwf	??_divide+2
  1897  0203  0827               	movf	divide@cent,w
  1898  0204  0084               	movwf	4
  1899  0205  082C               	movf	??_divide+2,w
  1900  0206  1383               	bcf	3,7	;select IRP bank0
  1901  0207  0080               	movwf	0
  1902                           
  1903                           ;Digital2_toolbox.c: 270:     *dec=(value-1000*(int)*mil-100*(int)*cent)/10;
  1904  0208  300A               	movlw	10
  1905  0209  00F8               	movwf	___lwdiv@divisor
  1906  020A  3000               	movlw	0
  1907  020B  00F9               	movwf	___lwdiv@divisor+1
  1908  020C  0826               	movf	divide@mil,w
  1909  020D  0084               	movwf	4
  1910  020E  0800               	movf	0,w
  1911  020F  00AA               	movwf	??_divide
  1912  0210  01AB               	clrf	??_divide+1
  1913  0211  082A               	movf	??_divide,w
  1914  0212  00F2               	movwf	___wmul@multiplier
  1915  0213  082B               	movf	??_divide+1,w
  1916  0214  00F3               	movwf	___wmul@multiplier+1
  1917  0215  3018               	movlw	24
  1918  0216  00F4               	movwf	___wmul@multiplicand
  1919  0217  30FC               	movlw	252
  1920  0218  00F5               	movwf	___wmul@multiplicand+1
  1921  0219  120A  118A  2426  120A  118A  	fcall	___wmul
  1922  021E  0872               	movf	?___wmul,w
  1923  021F  1283               	bcf	3,5	;RP0=0, select bank0
  1924  0220  1303               	bcf	3,6	;RP1=0, select bank0
  1925  0221  00AC               	movwf	??_divide+2
  1926  0222  0873               	movf	?___wmul+1,w
  1927  0223  00AD               	movwf	??_divide+3
  1928  0224  0827               	movf	divide@cent,w
  1929  0225  0084               	movwf	4
  1930  0226  1383               	bcf	3,7	;select IRP bank0
  1931  0227  0800               	movf	0,w
  1932  0228  00AE               	movwf	??_divide+4
  1933  0229  01AF               	clrf	??_divide+5
  1934  022A  082E               	movf	??_divide+4,w
  1935  022B  00F2               	movwf	___wmul@multiplier
  1936  022C  082F               	movf	??_divide+5,w
  1937  022D  00F3               	movwf	___wmul@multiplier+1
  1938  022E  309C               	movlw	156
  1939  022F  00F4               	movwf	___wmul@multiplicand
  1940  0230  30FF               	movlw	255
  1941  0231  00F5               	movwf	___wmul@multiplicand+1
  1942  0232  120A  118A  2426  120A  118A  	fcall	___wmul
  1943  0237  0872               	movf	?___wmul,w
  1944  0238  1283               	bcf	3,5	;RP0=0, select bank0
  1945  0239  1303               	bcf	3,6	;RP1=0, select bank0
  1946  023A  072C               	addwf	??_divide+2,w
  1947  023B  00B0               	movwf	??_divide+6
  1948  023C  0873               	movf	?___wmul+1,w
  1949  023D  1803               	skipnc
  1950  023E  0A73               	incf	?___wmul+1,w
  1951  023F  072D               	addwf	??_divide+3,w
  1952  0240  00B1               	movwf	??_divide+7
  1953  0241  0824               	movf	divide@value,w
  1954  0242  0730               	addwf	??_divide+6,w
  1955  0243  00FA               	movwf	___lwdiv@dividend
  1956  0244  0825               	movf	divide@value+1,w
  1957  0245  1803               	skipnc
  1958  0246  0A25               	incf	divide@value+1,w
  1959  0247  0731               	addwf	??_divide+7,w
  1960  0248  00FB               	movwf	___lwdiv@dividend+1
  1961  0249  120A  118A  234F  120A  118A  	fcall	___lwdiv
  1962  024E  0878               	movf	?___lwdiv,w
  1963  024F  1283               	bcf	3,5	;RP0=0, select bank0
  1964  0250  1303               	bcf	3,6	;RP1=0, select bank0
  1965  0251  00B2               	movwf	??_divide+8
  1966  0252  0828               	movf	divide@dec,w
  1967  0253  0084               	movwf	4
  1968  0254  0832               	movf	??_divide+8,w
  1969  0255  1383               	bcf	3,7	;select IRP bank0
  1970  0256  0080               	movwf	0
  1971                           
  1972                           ;Digital2_toolbox.c: 271:     *unit=value-1000*(int)*mil-100*(int)*cent-10*(int)*dec;
  1973  0257  3018               	movlw	24
  1974  0258  00AA               	movwf	??_divide
  1975  0259  082A               	movf	??_divide,w
  1976  025A  00F2               	movwf	___bmul@multiplicand
  1977  025B  0826               	movf	divide@mil,w
  1978  025C  0084               	movwf	4
  1979  025D  0800               	movf	0,w
  1980  025E  120A  118A  24A4  120A  118A  	fcall	___bmul
  1981  0263  1283               	bcf	3,5	;RP0=0, select bank0
  1982  0264  1303               	bcf	3,6	;RP1=0, select bank0
  1983  0265  00AB               	movwf	??_divide+1
  1984  0266  309C               	movlw	156
  1985  0267  00AC               	movwf	??_divide+2
  1986  0268  082C               	movf	??_divide+2,w
  1987  0269  00F2               	movwf	___bmul@multiplicand
  1988  026A  0827               	movf	divide@cent,w
  1989  026B  0084               	movwf	4
  1990  026C  1383               	bcf	3,7	;select IRP bank0
  1991  026D  0800               	movf	0,w
  1992  026E  120A  118A  24A4  120A  118A  	fcall	___bmul
  1993  0273  1283               	bcf	3,5	;RP0=0, select bank0
  1994  0274  1303               	bcf	3,6	;RP1=0, select bank0
  1995  0275  00AD               	movwf	??_divide+3
  1996  0276  30F6               	movlw	246
  1997  0277  00AE               	movwf	??_divide+4
  1998  0278  082E               	movf	??_divide+4,w
  1999  0279  00F2               	movwf	___bmul@multiplicand
  2000  027A  0828               	movf	divide@dec,w
  2001  027B  0084               	movwf	4
  2002  027C  1383               	bcf	3,7	;select IRP bank0
  2003  027D  0800               	movf	0,w
  2004  027E  120A  118A  24A4  120A  118A  	fcall	___bmul
  2005  0283  1283               	bcf	3,5	;RP0=0, select bank0
  2006  0284  1303               	bcf	3,6	;RP1=0, select bank0
  2007  0285  072D               	addwf	??_divide+3,w
  2008  0286  072B               	addwf	??_divide+1,w
  2009  0287  0724               	addwf	divide@value,w
  2010  0288  00AF               	movwf	??_divide+5
  2011  0289  0829               	movf	divide@unit,w
  2012  028A  0084               	movwf	4
  2013  028B  082F               	movf	??_divide+5,w
  2014  028C  1383               	bcf	3,7	;select IRP bank0
  2015  028D  0080               	movwf	0
  2016  028E                     l150:
  2017  028E  0008               	return
  2018  028F                     __end_of_divide:
  2019                           
  2020                           	psect	text7
  2021  0426                     __ptext7:	
  2022 ;; *************** function ___wmul *****************
  2023 ;; Defined at:
  2024 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  multiplier      2    2[COMMON] unsigned int 
  2027 ;;  multiplicand    2    4[COMMON] unsigned int 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;  product         2    6[COMMON] unsigned int 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  2    2[COMMON] unsigned int 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2, status,0
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2039 ;;      Params:         4       0       0       0       0
  2040 ;;      Locals:         2       0       0       0       0
  2041 ;;      Temps:          0       0       0       0       0
  2042 ;;      Totals:         6       0       0       0       0
  2043 ;;Total ram usage:        6 bytes
  2044 ;; Hardware stack levels used: 1
  2045 ;; Hardware stack levels required when called: 1
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		_divide
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           
  2054                           ;psect for function ___wmul
  2055  0426                     ___wmul:
  2056  0426                     l1277:	
  2057                           ;incstack = 0
  2058                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2059                           
  2060  0426  01F6               	clrf	___wmul@product
  2061  0427  01F7               	clrf	___wmul@product+1
  2062  0428                     l1279:
  2063  0428  1C72               	btfss	___wmul@multiplier,0
  2064  0429  2C2B               	goto	u451
  2065  042A  2C2C               	goto	u450
  2066  042B                     u451:
  2067  042B  2C32               	goto	l321
  2068  042C                     u450:
  2069  042C                     l1281:
  2070  042C  0874               	movf	___wmul@multiplicand,w
  2071  042D  07F6               	addwf	___wmul@product,f
  2072  042E  1803               	skipnc
  2073  042F  0AF7               	incf	___wmul@product+1,f
  2074  0430  0875               	movf	___wmul@multiplicand+1,w
  2075  0431  07F7               	addwf	___wmul@product+1,f
  2076  0432                     l321:
  2077  0432  3001               	movlw	1
  2078  0433                     u465:
  2079  0433  1003               	clrc
  2080  0434  0DF4               	rlf	___wmul@multiplicand,f
  2081  0435  0DF5               	rlf	___wmul@multiplicand+1,f
  2082  0436  3EFF               	addlw	-1
  2083  0437  1D03               	skipz
  2084  0438  2C33               	goto	u465
  2085  0439                     l1283:
  2086  0439  3001               	movlw	1
  2087  043A                     u475:
  2088  043A  1003               	clrc
  2089  043B  0CF3               	rrf	___wmul@multiplier+1,f
  2090  043C  0CF2               	rrf	___wmul@multiplier,f
  2091  043D  3EFF               	addlw	-1
  2092  043E  1D03               	skipz
  2093  043F  2C3A               	goto	u475
  2094  0440                     l1285:
  2095  0440  0872               	movf	___wmul@multiplier,w
  2096  0441  0473               	iorwf	___wmul@multiplier+1,w
  2097  0442  1D03               	btfss	3,2
  2098  0443  2C45               	goto	u481
  2099  0444  2C46               	goto	u480
  2100  0445                     u481:
  2101  0445  2C28               	goto	l1279
  2102  0446                     u480:
  2103  0446                     l1287:
  2104  0446  0877               	movf	___wmul@product+1,w
  2105  0447  00F3               	movwf	?___wmul+1
  2106  0448  0876               	movf	___wmul@product,w
  2107  0449  00F2               	movwf	?___wmul
  2108  044A                     l323:
  2109  044A  0008               	return
  2110  044B                     __end_of___wmul:
  2111                           
  2112                           	psect	text8
  2113  034F                     __ptext8:	
  2114 ;; *************** function ___lwdiv *****************
  2115 ;; Defined at:
  2116 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  divisor         2    8[COMMON] unsigned int 
  2119 ;;  dividend        2   10[COMMON] unsigned int 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  quotient        2    1[BANK0 ] unsigned int 
  2122 ;;  counter         1    3[BANK0 ] unsigned char 
  2123 ;; Return value:  Size  Location     Type
  2124 ;;                  2    8[COMMON] unsigned int 
  2125 ;; Registers used:
  2126 ;;		wreg, status,2, status,0
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2132 ;;      Params:         4       0       0       0       0
  2133 ;;      Locals:         0       3       0       0       0
  2134 ;;      Temps:          0       1       0       0       0
  2135 ;;      Totals:         4       4       0       0       0
  2136 ;;Total ram usage:        8 bytes
  2137 ;; Hardware stack levels used: 1
  2138 ;; Hardware stack levels required when called: 1
  2139 ;; This function calls:
  2140 ;;		Nothing
  2141 ;; This function is called by:
  2142 ;;		_divide
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           
  2147                           ;psect for function ___lwdiv
  2148  034F                     ___lwdiv:
  2149  034F                     l1305:	
  2150                           ;incstack = 0
  2151                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2152                           
  2153  034F  1283               	bcf	3,5	;RP0=0, select bank0
  2154  0350  1303               	bcf	3,6	;RP1=0, select bank0
  2155  0351  01A1               	clrf	___lwdiv@quotient
  2156  0352  01A2               	clrf	___lwdiv@quotient+1
  2157  0353                     l1307:
  2158  0353  0878               	movf	___lwdiv@divisor,w
  2159  0354  0479               	iorwf	___lwdiv@divisor+1,w
  2160  0355  1903               	btfsc	3,2
  2161  0356  2B58               	goto	u511
  2162  0357  2B59               	goto	u510
  2163  0358                     u511:
  2164  0358  2B90               	goto	l1327
  2165  0359                     u510:
  2166  0359                     l1309:
  2167  0359  01A3               	clrf	___lwdiv@counter
  2168  035A  0AA3               	incf	___lwdiv@counter,f
  2169  035B  2B67               	goto	l1315
  2170  035C                     l1311:
  2171  035C  3001               	movlw	1
  2172  035D                     u525:
  2173  035D  1003               	clrc
  2174  035E  0DF8               	rlf	___lwdiv@divisor,f
  2175  035F  0DF9               	rlf	___lwdiv@divisor+1,f
  2176  0360  3EFF               	addlw	-1
  2177  0361  1D03               	skipz
  2178  0362  2B5D               	goto	u525
  2179  0363                     l1313:
  2180  0363  3001               	movlw	1
  2181  0364  00A0               	movwf	??___lwdiv
  2182  0365  0820               	movf	??___lwdiv,w
  2183  0366  07A3               	addwf	___lwdiv@counter,f
  2184  0367                     l1315:
  2185  0367  1FF9               	btfss	___lwdiv@divisor+1,7
  2186  0368  2B6A               	goto	u531
  2187  0369  2B6B               	goto	u530
  2188  036A                     u531:
  2189  036A  2B5C               	goto	l1311
  2190  036B                     u530:
  2191  036B                     l1317:
  2192  036B  3001               	movlw	1
  2193  036C                     u545:
  2194  036C  1003               	clrc
  2195  036D  0DA1               	rlf	___lwdiv@quotient,f
  2196  036E  0DA2               	rlf	___lwdiv@quotient+1,f
  2197  036F  3EFF               	addlw	-1
  2198  0370  1D03               	skipz
  2199  0371  2B6C               	goto	u545
  2200  0372  0879               	movf	___lwdiv@divisor+1,w
  2201  0373  027B               	subwf	___lwdiv@dividend+1,w
  2202  0374  1D03               	skipz
  2203  0375  2B78               	goto	u555
  2204  0376  0878               	movf	___lwdiv@divisor,w
  2205  0377  027A               	subwf	___lwdiv@dividend,w
  2206  0378                     u555:
  2207  0378  1C03               	skipc
  2208  0379  2B7B               	goto	u551
  2209  037A  2B7C               	goto	u550
  2210  037B                     u551:
  2211  037B  2B83               	goto	l1323
  2212  037C                     u550:
  2213  037C                     l1319:
  2214  037C  0878               	movf	___lwdiv@divisor,w
  2215  037D  02FA               	subwf	___lwdiv@dividend,f
  2216  037E  0879               	movf	___lwdiv@divisor+1,w
  2217  037F  1C03               	skipc
  2218  0380  03FB               	decf	___lwdiv@dividend+1,f
  2219  0381  02FB               	subwf	___lwdiv@dividend+1,f
  2220  0382                     l1321:
  2221  0382  1421               	bsf	___lwdiv@quotient,0
  2222  0383                     l1323:
  2223  0383  3001               	movlw	1
  2224  0384                     u565:
  2225  0384  1003               	clrc
  2226  0385  0CF9               	rrf	___lwdiv@divisor+1,f
  2227  0386  0CF8               	rrf	___lwdiv@divisor,f
  2228  0387  3EFF               	addlw	-1
  2229  0388  1D03               	skipz
  2230  0389  2B84               	goto	u565
  2231  038A                     l1325:
  2232  038A  3001               	movlw	1
  2233  038B  02A3               	subwf	___lwdiv@counter,f
  2234  038C  1D03               	btfss	3,2
  2235  038D  2B8F               	goto	u571
  2236  038E  2B90               	goto	u570
  2237  038F                     u571:
  2238  038F  2B6B               	goto	l1317
  2239  0390                     u570:
  2240  0390                     l1327:
  2241  0390  0822               	movf	___lwdiv@quotient+1,w
  2242  0391  00F9               	movwf	?___lwdiv+1
  2243  0392  0821               	movf	___lwdiv@quotient,w
  2244  0393  00F8               	movwf	?___lwdiv
  2245  0394                     l593:
  2246  0394  0008               	return
  2247  0395                     __end_of___lwdiv:
  2248                           
  2249                           	psect	text9
  2250  04A4                     __ptext9:	
  2251 ;; *************** function ___bmul *****************
  2252 ;; Defined at:
  2253 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  multiplier      1    wreg     unsigned char 
  2256 ;;  multiplicand    1    2[COMMON] unsigned char 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  multiplier      1    5[COMMON] unsigned char 
  2259 ;;  product         1    4[COMMON] unsigned char 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  1    wreg      unsigned char 
  2262 ;; Registers used:
  2263 ;;		wreg, status,2, status,0
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2269 ;;      Params:         1       0       0       0       0
  2270 ;;      Locals:         2       0       0       0       0
  2271 ;;      Temps:          1       0       0       0       0
  2272 ;;      Totals:         4       0       0       0       0
  2273 ;;Total ram usage:        4 bytes
  2274 ;; Hardware stack levels used: 1
  2275 ;; Hardware stack levels required when called: 1
  2276 ;; This function calls:
  2277 ;;		Nothing
  2278 ;; This function is called by:
  2279 ;;		_divide
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           
  2284                           ;psect for function ___bmul
  2285  04A4                     ___bmul:
  2286                           
  2287                           ;incstack = 0
  2288                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2289                           ;___bmul@multiplier stored from wreg
  2290  04A4  00F5               	movwf	___bmul@multiplier
  2291  04A5                     l1291:
  2292  04A5  01F4               	clrf	___bmul@product
  2293  04A6                     l1293:
  2294  04A6  1C75               	btfss	___bmul@multiplier,0
  2295  04A7  2CA9               	goto	u491
  2296  04A8  2CAA               	goto	u490
  2297  04A9                     u491:
  2298  04A9  2CAE               	goto	l1297
  2299  04AA                     u490:
  2300  04AA                     l1295:
  2301  04AA  0872               	movf	___bmul@multiplicand,w
  2302  04AB  00F3               	movwf	??___bmul
  2303  04AC  0873               	movf	??___bmul,w
  2304  04AD  07F4               	addwf	___bmul@product,f
  2305  04AE                     l1297:
  2306  04AE  1003               	clrc
  2307  04AF  0DF2               	rlf	___bmul@multiplicand,f
  2308  04B0                     l1299:
  2309  04B0  1003               	clrc
  2310  04B1  0CF5               	rrf	___bmul@multiplier,f
  2311  04B2  0875               	movf	___bmul@multiplier,w
  2312  04B3  1D03               	btfss	3,2
  2313  04B4  2CB6               	goto	u501
  2314  04B5  2CB7               	goto	u500
  2315  04B6                     u501:
  2316  04B6  2CA6               	goto	l1293
  2317  04B7                     u500:
  2318  04B7                     l1301:
  2319  04B7  0874               	movf	___bmul@product,w
  2320  04B8                     l347:
  2321  04B8  0008               	return
  2322  04B9                     __end_of___bmul:
  2323                           
  2324                           	psect	text10
  2325  044B                     __ptext10:	
  2326 ;; *************** function _Lcd_Write_String *****************
  2327 ;; Defined at:
  2328 ;;		line 69 in file "Digital2_toolbox.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  a               1    wreg     PTR unsigned char 
  2331 ;;		 -> STR_4(4), STR_3(4), STR_2(2), STR_1(18), 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  a               1    7[COMMON] PTR unsigned char 
  2334 ;;		 -> STR_4(4), STR_3(4), STR_2(2), STR_1(18), 
  2335 ;;  i               2    5[COMMON] int 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2345 ;;      Params:         0       0       0       0       0
  2346 ;;      Locals:         3       0       0       0       0
  2347 ;;      Temps:          0       0       0       0       0
  2348 ;;      Totals:         3       0       0       0       0
  2349 ;;Total ram usage:        3 bytes
  2350 ;; Hardware stack levels used: 1
  2351 ;; Hardware stack levels required when called: 2
  2352 ;; This function calls:
  2353 ;;		_Lcd_Write_Char
  2354 ;; This function is called by:
  2355 ;;		_main
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           
  2360                           ;psect for function _Lcd_Write_String
  2361  044B                     _Lcd_Write_String:
  2362                           
  2363                           ;incstack = 0
  2364                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2365                           ;Lcd_Write_String@a stored from wreg
  2366  044B  00F7               	movwf	Lcd_Write_String@a
  2367  044C                     l1331:
  2368                           
  2369                           ;Digital2_toolbox.c: 70:     int i;;Digital2_toolbox.c: 71:     for (i = 0; a[i] != '\0'
      +                          ; i++){
  2370  044C  01F5               	clrf	Lcd_Write_String@i
  2371  044D  01F6               	clrf	Lcd_Write_String@i+1
  2372  044E  2C62               	goto	l1337
  2373  044F                     l1333:
  2374                           
  2375                           ;Digital2_toolbox.c: 72:         Lcd_Write_Char(a[i]);
  2376  044F  0875               	movf	Lcd_Write_String@i,w
  2377  0450  0777               	addwf	Lcd_Write_String@a,w
  2378  0451  0084               	movwf	4
  2379  0452  120A  118A  2470  120A  118A  	fcall	stringdir
  2380  0457  120A  118A  248C  120A  118A  	fcall	_Lcd_Write_Char
  2381  045C                     l1335:
  2382                           
  2383                           ;Digital2_toolbox.c: 73:     }
  2384  045C  3001               	movlw	1
  2385  045D  07F5               	addwf	Lcd_Write_String@i,f
  2386  045E  1803               	skipnc
  2387  045F  0AF6               	incf	Lcd_Write_String@i+1,f
  2388  0460  3000               	movlw	0
  2389  0461  07F6               	addwf	Lcd_Write_String@i+1,f
  2390  0462                     l1337:
  2391  0462  0875               	movf	Lcd_Write_String@i,w
  2392  0463  0777               	addwf	Lcd_Write_String@a,w
  2393  0464  0084               	movwf	4
  2394  0465  120A  118A  2470  120A  118A  	fcall	stringdir
  2395  046A  3A00               	xorlw	0
  2396  046B  1D03               	skipz
  2397  046C  2C6E               	goto	u581
  2398  046D  2C6F               	goto	u580
  2399  046E                     u581:
  2400  046E  2C4F               	goto	l1333
  2401  046F                     u580:
  2402  046F                     l78:
  2403  046F  0008               	return
  2404  0470                     __end_of_Lcd_Write_String:
  2405                           
  2406                           	psect	text11
  2407  048C                     __ptext11:	
  2408 ;; *************** function _Lcd_Write_Char *****************
  2409 ;; Defined at:
  2410 ;;		line 60 in file "Digital2_toolbox.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;  a               1    wreg     unsigned char 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  a               1    4[COMMON] unsigned char 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2424 ;;      Params:         0       0       0       0       0
  2425 ;;      Locals:         1       0       0       0       0
  2426 ;;      Temps:          2       0       0       0       0
  2427 ;;      Totals:         3       0       0       0       0
  2428 ;;Total ram usage:        3 bytes
  2429 ;; Hardware stack levels used: 1
  2430 ;; Hardware stack levels required when called: 1
  2431 ;; This function calls:
  2432 ;;		Nothing
  2433 ;; This function is called by:
  2434 ;;		_Lcd_Write_String
  2435 ;;		_main
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           
  2440                           ;psect for function _Lcd_Write_Char
  2441  048C                     _Lcd_Write_Char:
  2442                           
  2443                           ;incstack = 0
  2444                           ; Regs used in _Lcd_Write_Char: [wreg]
  2445                           ;Lcd_Write_Char@a stored from wreg
  2446  048C  00F4               	movwf	Lcd_Write_Char@a
  2447  048D                     l1253:
  2448                           
  2449                           ;Digital2_toolbox.c: 61:     PORTD = a;
  2450  048D  0874               	movf	Lcd_Write_Char@a,w
  2451  048E  1283               	bcf	3,5	;RP0=0, select bank0
  2452  048F  1303               	bcf	3,6	;RP1=0, select bank0
  2453  0490  0088               	movwf	8	;volatile
  2454  0491                     l1255:
  2455                           
  2456                           ;Digital2_toolbox.c: 62:     RE0 = 1;
  2457  0491  1409               	bsf	9,0	;volatile
  2458  0492                     l1257:
  2459                           
  2460                           ;Digital2_toolbox.c: 63:     RE1 = 1;
  2461  0492  1489               	bsf	9,1	;volatile
  2462                           
  2463                           ;Digital2_toolbox.c: 64:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  2464  0493  3021               	movlw	33
  2465  0494  00F2               	movwf	??_Lcd_Write_Char
  2466  0495                     u727:
  2467  0495  0BF2               	decfsz	??_Lcd_Write_Char,f
  2468  0496  2C95               	goto	u727
  2469  0497                     l1259:
  2470                           
  2471                           ;Digital2_toolbox.c: 65:     RE1 = 0;
  2472  0497  1283               	bcf	3,5	;RP0=0, select bank0
  2473  0498  1303               	bcf	3,6	;RP1=0, select bank0
  2474  0499  1089               	bcf	9,1	;volatile
  2475                           
  2476                           ;Digital2_toolbox.c: 66:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2477  049A  300D               	movlw	13
  2478  049B  00F3               	movwf	??_Lcd_Write_Char+1
  2479  049C  30FB               	movlw	251
  2480  049D  00F2               	movwf	??_Lcd_Write_Char
  2481  049E                     u737:
  2482  049E  0BF2               	decfsz	??_Lcd_Write_Char,f
  2483  049F  2C9E               	goto	u737
  2484  04A0  0BF3               	decfsz	??_Lcd_Write_Char+1,f
  2485  04A1  2C9E               	goto	u737
  2486  04A2  2CA3               	nop2
  2487  04A3                     l72:
  2488  04A3  0008               	return
  2489  04A4                     __end_of_Lcd_Write_Char:
  2490                           
  2491                           	psect	text12
  2492  04DA                     __ptext12:	
  2493 ;; *************** function _I2C_Master_Write *****************
  2494 ;; Defined at:
  2495 ;;		line 219 in file "Digital2_toolbox.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  d               2    2[COMMON] unsigned int 
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		wreg, status,2, status,0, pclath, cstack
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2509 ;;      Params:         2       0       0       0       0
  2510 ;;      Locals:         0       0       0       0       0
  2511 ;;      Temps:          0       0       0       0       0
  2512 ;;      Totals:         2       0       0       0       0
  2513 ;;Total ram usage:        2 bytes
  2514 ;; Hardware stack levels used: 1
  2515 ;; Hardware stack levels required when called: 2
  2516 ;; This function calls:
  2517 ;;		_I2C_Master_Wait
  2518 ;; This function is called by:
  2519 ;;		_main
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           
  2524                           ;psect for function _I2C_Master_Write
  2525  04DA                     _I2C_Master_Write:
  2526  04DA                     l1347:	
  2527                           ;incstack = 0
  2528                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2529                           
  2530                           
  2531                           ;Digital2_toolbox.c: 219: void I2C_Master_Write(unsigned d);Digital2_toolbox.c: 220: {;D
      +                          igital2_toolbox.c: 221:     I2C_Master_Wait();
  2532  04DA  120A  118A  24CD  120A  118A  	fcall	_I2C_Master_Wait
  2533  04DF                     l1349:
  2534                           
  2535                           ;Digital2_toolbox.c: 222:     SSPBUF = d;
  2536  04DF  0872               	movf	I2C_Master_Write@d,w
  2537  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  2538  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  2539  04E2  0093               	movwf	19	;volatile
  2540  04E3                     l139:
  2541  04E3  0008               	return
  2542  04E4                     __end_of_I2C_Master_Write:
  2543                           
  2544                           	psect	text13
  2545  04E4                     __ptext13:	
  2546 ;; *************** function _I2C_Master_Stop *****************
  2547 ;; Defined at:
  2548 ;;		line 209 in file "Digital2_toolbox.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;		None
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;		None
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1    wreg      void 
  2555 ;; Registers used:
  2556 ;;		wreg, status,2, status,0, pclath, cstack
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2562 ;;      Params:         0       0       0       0       0
  2563 ;;      Locals:         0       0       0       0       0
  2564 ;;      Temps:          0       0       0       0       0
  2565 ;;      Totals:         0       0       0       0       0
  2566 ;;Total ram usage:        0 bytes
  2567 ;; Hardware stack levels used: 1
  2568 ;; Hardware stack levels required when called: 2
  2569 ;; This function calls:
  2570 ;;		_I2C_Master_Wait
  2571 ;; This function is called by:
  2572 ;;		_main
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           
  2577                           ;psect for function _I2C_Master_Stop
  2578  04E4                     _I2C_Master_Stop:
  2579  04E4                     l1343:	
  2580                           ;incstack = 0
  2581                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2582                           
  2583                           
  2584                           ;Digital2_toolbox.c: 211:     I2C_Master_Wait();
  2585  04E4  120A  118A  24CD  120A  118A  	fcall	_I2C_Master_Wait
  2586  04E9                     l1345:
  2587                           
  2588                           ;Digital2_toolbox.c: 212:     SSPCON2bits.PEN = 1;
  2589  04E9  1683               	bsf	3,5	;RP0=1, select bank1
  2590  04EA  1303               	bcf	3,6	;RP1=0, select bank1
  2591  04EB  1511               	bsf	17,2	;volatile
  2592  04EC                     l136:
  2593  04EC  0008               	return
  2594  04ED                     __end_of_I2C_Master_Stop:
  2595                           
  2596                           	psect	text14
  2597  04ED                     __ptext14:	
  2598 ;; *************** function _I2C_Master_Start *****************
  2599 ;; Defined at:
  2600 ;;		line 193 in file "Digital2_toolbox.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;		None
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;		None
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      void 
  2607 ;; Registers used:
  2608 ;;		wreg, status,2, status,0, pclath, cstack
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2614 ;;      Params:         0       0       0       0       0
  2615 ;;      Locals:         0       0       0       0       0
  2616 ;;      Temps:          0       0       0       0       0
  2617 ;;      Totals:         0       0       0       0       0
  2618 ;;Total ram usage:        0 bytes
  2619 ;; Hardware stack levels used: 1
  2620 ;; Hardware stack levels required when called: 2
  2621 ;; This function calls:
  2622 ;;		_I2C_Master_Wait
  2623 ;; This function is called by:
  2624 ;;		_main
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           
  2629                           ;psect for function _I2C_Master_Start
  2630  04ED                     _I2C_Master_Start:
  2631  04ED                     l1339:	
  2632                           ;incstack = 0
  2633                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2634                           
  2635                           
  2636                           ;Digital2_toolbox.c: 195:     I2C_Master_Wait();
  2637  04ED  120A  118A  24CD  120A  118A  	fcall	_I2C_Master_Wait
  2638  04F2                     l1341:
  2639                           
  2640                           ;Digital2_toolbox.c: 196:     SSPCON2bits.SEN = 1;
  2641  04F2  1683               	bsf	3,5	;RP0=1, select bank1
  2642  04F3  1303               	bcf	3,6	;RP1=0, select bank1
  2643  04F4  1411               	bsf	17,0	;volatile
  2644  04F5                     l130:
  2645  04F5  0008               	return
  2646  04F6                     __end_of_I2C_Master_Start:
  2647                           
  2648                           	psect	text15
  2649  03CD                     __ptext15:	
  2650 ;; *************** function _I2C_Master_Read *****************
  2651 ;; Defined at:
  2652 ;;		line 228 in file "Digital2_toolbox.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;  a               2    2[COMMON] unsigned short 
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  temp            2    6[COMMON] unsigned short 
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  2    2[COMMON] unsigned short 
  2659 ;; Registers used:
  2660 ;;		wreg, status,2, status,0, pclath, cstack
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2666 ;;      Params:         2       0       0       0       0
  2667 ;;      Locals:         2       0       0       0       0
  2668 ;;      Temps:          2       0       0       0       0
  2669 ;;      Totals:         6       0       0       0       0
  2670 ;;Total ram usage:        6 bytes
  2671 ;; Hardware stack levels used: 1
  2672 ;; Hardware stack levels required when called: 2
  2673 ;; This function calls:
  2674 ;;		_I2C_Master_Wait
  2675 ;; This function is called by:
  2676 ;;		_main
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           
  2681                           ;psect for function _I2C_Master_Read
  2682  03CD                     _I2C_Master_Read:
  2683  03CD                     l1351:	
  2684                           ;incstack = 0
  2685                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2686                           
  2687                           
  2688                           ;Digital2_toolbox.c: 228: unsigned short I2C_Master_Read(unsigned short a);Digital2_tool
      +                          box.c: 229: {;Digital2_toolbox.c: 230:     unsigned short temp;;Digital2_toolbox.c: 231:
      +                               I2C_Master_Wait();
  2689  03CD  120A  118A  24CD  120A  118A  	fcall	_I2C_Master_Wait
  2690  03D2                     l1353:
  2691                           
  2692                           ;Digital2_toolbox.c: 232:     SSPCON2bits.RCEN = 1;
  2693  03D2  1683               	bsf	3,5	;RP0=1, select bank1
  2694  03D3  1303               	bcf	3,6	;RP1=0, select bank1
  2695  03D4  1591               	bsf	17,3	;volatile
  2696                           
  2697                           ;Digital2_toolbox.c: 233:     I2C_Master_Wait();
  2698  03D5  120A  118A  24CD  120A  118A  	fcall	_I2C_Master_Wait
  2699  03DA                     l1355:
  2700                           
  2701                           ;Digital2_toolbox.c: 234:     temp = SSPBUF;
  2702  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  2703  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  2704  03DC  0813               	movf	19,w	;volatile
  2705  03DD  00F4               	movwf	??_I2C_Master_Read
  2706  03DE  01F5               	clrf	??_I2C_Master_Read+1
  2707  03DF  0874               	movf	??_I2C_Master_Read,w
  2708  03E0  00F6               	movwf	I2C_Master_Read@temp
  2709  03E1  0875               	movf	??_I2C_Master_Read+1,w
  2710  03E2  00F7               	movwf	I2C_Master_Read@temp+1
  2711  03E3                     l1357:
  2712                           
  2713                           ;Digital2_toolbox.c: 235:     I2C_Master_Wait();
  2714  03E3  120A  118A  24CD  120A  118A  	fcall	_I2C_Master_Wait
  2715  03E8                     l1359:
  2716                           
  2717                           ;Digital2_toolbox.c: 236:     if(a == 1){
  2718  03E8  0372               	decf	I2C_Master_Read@a,w
  2719  03E9  0473               	iorwf	I2C_Master_Read@a+1,w
  2720  03EA  1D03               	btfss	3,2
  2721  03EB  2BED               	goto	u591
  2722  03EC  2BEE               	goto	u590
  2723  03ED                     u591:
  2724  03ED  2BF2               	goto	l142
  2725  03EE                     u590:
  2726  03EE                     l1361:
  2727                           
  2728                           ;Digital2_toolbox.c: 237:         SSPCON2bits.ACKDT = 0;
  2729  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  2730  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  2731  03F0  1291               	bcf	17,5	;volatile
  2732                           
  2733                           ;Digital2_toolbox.c: 238:     }else{
  2734  03F1  2BF5               	goto	l143
  2735  03F2                     l142:
  2736                           
  2737                           ;Digital2_toolbox.c: 239:         SSPCON2bits.ACKDT = 1;
  2738  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  2739  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  2740  03F4  1691               	bsf	17,5	;volatile
  2741  03F5                     l143:	
  2742                           ;Digital2_toolbox.c: 240:     }
  2743                           
  2744                           
  2745                           ;Digital2_toolbox.c: 241:     SSPCON2bits.ACKEN = 1;
  2746  03F5  1611               	bsf	17,4	;volatile
  2747  03F6                     l1363:
  2748                           
  2749                           ;Digital2_toolbox.c: 242:     return temp;
  2750  03F6  0877               	movf	I2C_Master_Read@temp+1,w
  2751  03F7  00F3               	movwf	?_I2C_Master_Read+1
  2752  03F8  0876               	movf	I2C_Master_Read@temp,w
  2753  03F9  00F2               	movwf	?_I2C_Master_Read
  2754  03FA                     l144:
  2755  03FA  0008               	return
  2756  03FB                     __end_of_I2C_Master_Read:
  2757                           
  2758                           	psect	text16
  2759  04CD                     __ptext16:	
  2760 ;; *************** function _I2C_Master_Wait *****************
  2761 ;; Defined at:
  2762 ;;		line 186 in file "Digital2_toolbox.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;		None
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;		None
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      void 
  2769 ;; Registers used:
  2770 ;;		wreg, status,2
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2776 ;;      Params:         0       0       0       0       0
  2777 ;;      Locals:         0       0       0       0       0
  2778 ;;      Temps:          0       0       0       0       0
  2779 ;;      Totals:         0       0       0       0       0
  2780 ;;Total ram usage:        0 bytes
  2781 ;; Hardware stack levels used: 1
  2782 ;; Hardware stack levels required when called: 1
  2783 ;; This function calls:
  2784 ;;		Nothing
  2785 ;; This function is called by:
  2786 ;;		_I2C_Master_Start
  2787 ;;		_I2C_Master_Stop
  2788 ;;		_I2C_Master_Write
  2789 ;;		_I2C_Master_Read
  2790 ;;		_I2C_Master_RepeatedStart
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794                           
  2795                           ;psect for function _I2C_Master_Wait
  2796  04CD                     _I2C_Master_Wait:
  2797  04CD                     l1273:	
  2798                           ;incstack = 0
  2799                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2800                           
  2801  04CD                     l124:	
  2802                           ;Digital2_toolbox.c: 188:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2803                           
  2804  04CD  1683               	bsf	3,5	;RP0=1, select bank1
  2805  04CE  1303               	bcf	3,6	;RP1=0, select bank1
  2806  04CF  1914               	btfsc	20,2	;volatile
  2807  04D0  2CD2               	goto	u431
  2808  04D1  2CD3               	goto	u430
  2809  04D2                     u431:
  2810  04D2  2CCD               	goto	l124
  2811  04D3                     u430:
  2812  04D3                     l1275:
  2813  04D3  0811               	movf	17,w	;volatile
  2814  04D4  391F               	andlw	31
  2815  04D5  1D03               	btfss	3,2
  2816  04D6  2CD8               	goto	u441
  2817  04D7  2CD9               	goto	u440
  2818  04D8                     u441:
  2819  04D8  2CCD               	goto	l124
  2820  04D9                     u440:
  2821  04D9                     l127:
  2822  04D9  0008               	return
  2823  04DA                     __end_of_I2C_Master_Wait:
  2824                           
  2825                           	psect	text17
  2826  04F6                     __ptext17:	
  2827 ;; *************** function _isr *****************
  2828 ;; Defined at:
  2829 ;;		line 177 in file "main.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;		None
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      void 
  2836 ;; Registers used:
  2837 ;;		None
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2843 ;;      Params:         0       0       0       0       0
  2844 ;;      Locals:         0       0       0       0       0
  2845 ;;      Temps:          2       0       0       0       0
  2846 ;;      Totals:         2       0       0       0       0
  2847 ;;Total ram usage:        2 bytes
  2848 ;; Hardware stack levels used: 1
  2849 ;; This function calls:
  2850 ;;		Nothing
  2851 ;; This function is called by:
  2852 ;;		Interrupt level 1
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           
  2857                           ;psect for function _isr
  2858  04F6                     _isr:
  2859  04F6                     i1l235:
  2860  04F6  0871               	movf	??_isr+1,w
  2861  04F7  008A               	movwf	10
  2862  04F8  0E70               	swapf	??_isr,w
  2863  04F9  0083               	movwf	3
  2864  04FA  0EFE               	swapf	btemp,f
  2865  04FB  0E7E               	swapf	btemp,w
  2866  04FC  0009               	retfie
  2867  04FD                     __end_of_isr:
  2868  007E                     btemp	set	126	;btemp
  2869  007E                     wtemp0	set	126
  2870                           
  2871                           	psect	intentry
  2872  0004                     __pintentry:	
  2873                           ;incstack = 0
  2874                           ; Regs used in _isr: []
  2875                           
  2876  0004                     interrupt_function:
  2877  007E                     saved_w	set	btemp
  2878  0004  00FE               	movwf	btemp
  2879  0005  0E03               	swapf	3,w
  2880  0006  00F0               	movwf	??_isr
  2881  0007  080A               	movf	10,w
  2882  0008  00F1               	movwf	??_isr+1
  2883  0009  120A  118A  2CF6   	ljmp	_isr
  2884                           
  2885                           	psect	config
  2886                           
  2887                           ;Config register CONFIG1 @ 0x2007
  2888                           ;	Oscillator Selection bits
  2889                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2890                           ;	Watchdog Timer Enable bit
  2891                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2892                           ;	Power-up Timer Enable bit
  2893                           ;	PWRTE = OFF, PWRT disabled
  2894                           ;	RE3/MCLR pin function select bit
  2895                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2896                           ;	Code Protection bit
  2897                           ;	CP = OFF, Program memory code protection is disabled
  2898                           ;	Data Code Protection bit
  2899                           ;	CPD = OFF, Data memory code protection is disabled
  2900                           ;	Brown Out Reset Selection bits
  2901                           ;	BOREN = ON, BOR enabled
  2902                           ;	Internal External Switchover bit
  2903                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2904                           ;	Fail-Safe Clock Monitor Enabled bit
  2905                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2906                           ;	Low Voltage Programming Enable bit
  2907                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2908                           ;	In-Circuit Debugger Mode bit
  2909                           ;	DEBUG = 0x1, unprogrammed default
  2910  2007                     	org	8199
  2911  2007  2FF4               	dw	12276
  2912                           
  2913                           ;Config register CONFIG2 @ 0x2008
  2914                           ;	Brown-out Reset Selection bit
  2915                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2916                           ;	Flash Program Memory Self Write Enable bits
  2917                           ;	WRT = OFF, Write protection off
  2918  2008                     	org	8200
  2919  2008  3FFF               	dw	16383

Data Sizes:
    Strings     22
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     37      45
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    divide@unit	PTR unsigned char  size(1) Largest target is 1
		 -> main@ut(BANK0[1]), main@uc(BANK0[1]), main@u0(BANK0[1]), 

    divide@dec	PTR unsigned char  size(1) Largest target is 1
		 -> main@dt(BANK0[1]), main@dc(BANK0[1]), main@d0(BANK0[1]), 

    divide@cent	PTR unsigned char  size(1) Largest target is 1
		 -> main@ct(BANK0[1]), main@cc(BANK0[1]), main@c0(BANK0[1]), 

    divide@mil	PTR unsigned char  size(1) Largest target is 1
		 -> main@mt(BANK0[1]), main@mc(BANK0[1]), main@m0(BANK0[1]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 18
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[2]), STR_1(CODE[18]), 


Critical Paths under _main in COMMON

    _Lcd_Init->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _divide->___lwdiv
    ___lwdiv->___wmul
    _Lcd_Write_String->_Lcd_Write_Char

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_divide
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _divide->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0    4813
                                             19 BANK0     18    18      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _Lcd_Cmd
                     _Lcd_Write_Char
                   _Lcd_Write_String
                             _divide
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     434
                    _I2C_Master_Init
                           _Lcd_Init
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      22
                                              5 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _divide                                              15     9      6    2934
                                              4 BANK0     15     9      6
                             ___bmul
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              8 COMMON     4     0      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     320
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     244
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     402
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Cmd
   _Lcd_Write_Char
   _Lcd_Write_String
     _Lcd_Write_Char
   _divide
     ___bmul
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      39       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     25      2D       5       56.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      39      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Aug 10 10:50:24 2021

                        pc 0002             ___bmul@product 0074                _SSPSTATbits 0094  
                       l63 04CC                         l72 04A3                         l69 034E  
                       l78 046F                         fsr 0004        ___wmul@multiplicand 0074  
              divide@value 0024                        l121 03CC                        l130 04F5  
                      l124 04CD                        l142 03F2                        l150 028E  
                      l230 0425                        l127 04D9                        l143 03F5  
                      l144 03FA                        l136 04EC                        l321 0432  
                      l139 04E3                        l323 044A                        l347 04B8  
                      l357 02F6                        l593 0394                        _GIE 005F  
                      _RE0 0048                        _RE1 0049                        u410 02EE  
                      u411 02ED                        u500 04B7                        u420 03AC  
                      u501 04B6                        u405 02E0                        u430 04D3  
                      u510 0359                        u350 02A1                        u431 04D2  
                      u511 0358                        u351 02A0                        u440 04D9  
                      u600 00EF                        u441 04D8                        u425 03A7  
                      u601 00EE                        u530 036B                        u450 042C  
                      u370 02B5                        u610 00F5                        u531 036A  
                      u451 042B                        u371 02B4                        u611 00F4  
                      u620 00FB                        u525 035D                        u365 02A6  
                      u621 00FA                        u605 00EB                        u550 037C  
                      u390 02D0                        u551 037B                        u391 02CF  
                      u480 0446                        u545 036C                        u481 0445  
                      u465 0433                        u385 02B7                        u490 04AA  
                      u570 0390                        u491 04A9                        u571 038F  
                      u555 0378                        u475 043A                        u395 02CC  
                      u707 0349                        u580 046F                        u581 046E  
                      u565 0384                        u717 04C4                        u637 0051  
                      u590 03EE                        u591 03ED                        u727 0495  
                      u647 0081                        u737 049E                        u657 00AC  
                      u667 00DC                        u677 02FE                        u687 030D  
                      u697 0319                        _isr 04F6                        fsr0 0004  
                      indf 0000                       l1201 028F                       l1211 02BE  
                     l1203 02A1                       l1301 04B7                       l1213 02D0  
                     l1205 02A4                       l1221 02EE                       l1311 035C  
                     l1215 02DE                       l1207 02B1                       l1231 0309  
                     l1321 0382                       l1313 0363                       l1305 034F  
                     l1217 02DF                       l1209 02B5                       l1241 0327  
                     l1233 0311                       l1225 02F7                       l1331 044C  
                     l1323 0383                       l1315 0367                       l1307 0353  
                     l1219 02E8                       l1251 0345                       l1243 032D  
                     l1235 0317                       l1227 02FA                       l1411 0036  
                     l1403 001D                       l1341 04F2                       l1253 048D  
                     l1333 044F                       l1325 038A                       l1317 036B  
                     l1309 0359                       l1261 0395                       l1245 0333  
                     l1237 031B                       l1229 0303                       l1421 0066  
                     l1413 0044                       l1405 0022                       l1351 03CD  
                     l1343 04E4                       l1255 0491                       l1335 045C  
                     l1319 037C                       l1327 0390                       l1271 03CB  
                     l1263 0399                       l1247 0339                       l1239 0321  
                     l1431 0096                       l1423 0074                       l1415 0049  
                     l1407 0028                       l1273 04CD                       l1361 03EE  
                     l1353 03D2                       l1345 04E9                       l1257 0492  
                     l1337 0462                       l1281 042C                       l1265 039C  
                     l1193 04BA                       l1249 033F                       l1441 00C1  
                     l1433 009F                       l1425 0079                       l1417 0058  
                     l1409 002D                       l1275 04D3                       l1363 03F6  
                     l1355 03DA                       l1339 04ED                       l1347 04DA  
                     l1259 0497                       l1291 04A5                       l1283 0439  
                     l1267 03C9                       l1195 04BD                       l1371 0403  
                     l1451 00F5                       l1443 00CF                       l1435 00A4  
                     l1427 0088                       l1419 005D                       l1357 03E3  
                     l1349 04DF                       l1293 04A6                       l1285 0440  
                     l1277 0426                       l1269 03CA                       l1197 04BF  
                     l1381 0409                       l1373 0405                       l1461 015E  
                     l1453 00FB                       l1445 00D4                       l1437 00B3  
                     l1429 008D                       l1359 03E8                       l1295 04AA  
                     l1287 0446                       l1279 0428                       l1367 01C2  
                     l1199 04C9                       l1391 0422                       l1383 040A  
                     l1375 0406                       l1471 0185                       l1463 0164  
                     l1455 0150                       l1447 00E3                       l1439 00B8  
                     l1297 04AE                       l1393 0423                       l1385 040F  
                     l1377 0407                       l1369 03FB                       l1481 01AC  
                     l1473 018B                       l1465 016A                       l1457 0156  
                     l1449 00EF                       l1299 04B0                       l1395 0424  
                     l1387 041E                       l1379 0408                       l1483 01B5  
                     l1475 0194                       l1467 0173                       l1459 015A  
                     l1389 0421                       l1477 019D                       l1469 017C  
                     l1479 01A3                       _ADIE 0466                       ?_isr 0070  
                     STR_1 0476                       STR_2 048A                       STR_3 0488  
                     STR_4 0488                       _PEIE 005E          ?_Lcd_Write_String 0070  
                     _main 001D                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 04CD          ___bmul@multiplier 0075  
                    ??_isr 0070           ?_I2C_Master_Init 0025           ?_I2C_Master_Read 0072  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                      ?_main 0070  
                    _BRG16 0C3B                      _ANSEL 0188            __end_of___lldiv 02F7  
          __end_of___lwdiv 0395                      i1l235 04F6                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _SSPIE 0463                      _TRISE 0089                      _SSPIF 0063  
                    _TXREG 0019                      _setup 03FB                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 034F  
          __initialization 000F               __end_of_main 01C2                     ??_main 0033  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0072         ??_I2C_Master_Start 0072  
       ??_I2C_Master_Write 0074                     _ADRESH 001E                     _ADRESL 009E  
                   ?_setup 0070                     _ANSELH 0189                  ??_Lcd_Cmd 0072  
                   _SPBRGH 009A    __size_of_Lcd_Write_Char 0018                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _TRISC5 043D  
                   _SSPCON 0014                     _SSPBUF 0013                     ___bmul 04A4  
                   ___wmul 0426                  ??___lldiv 007A                  ??___lwdiv 0020  
                   _divide 01C2                     main@c0 0043                     main@d0 0040  
                   main@m0 003A                     main@u0 003D                     main@cc 0039  
                   main@dc 0041                     main@ct 0044                     main@dt 0042  
                   main@mc 003B                     main@uc 003E                     main@mt 003C  
                   main@ut 003F                     saved_w 007E    __end_of__initialization 0019  
      ___bmul@multiplicand 0072             __pcstackCOMMON 0070              __end_of_setup 0426  
             _analog0_temp 0045                  ?_Lcd_Init 0070                    ??_setup 007B  
               __pbssBANK0 0045                 __pmaintext 001D                    ?___bmul 0072  
                  ?___wmul 0072                 __pintentry 0004                    ?_divide 0024  
__size_of_Lcd_Write_String 0025         _temperature_sensor 004A                 ??_Lcd_Init 0075  
                  _SSPCON2 0091                    _SSPSTAT 0094                 __stringtab 0470  
           _Lcd_Write_Char 048C                    _Lcd_Cmd 04B9            __size_of___bmul 0015  
                  ___lldiv 028F            __size_of___wmul 0025                    ___lwdiv 034F  
          __size_of_divide 00CD                    _analog0 0047                    __ptext1 03FB  
                  __ptext2 02F7                    __ptext3 04B9                    __ptext4 0395  
                  __ptext5 028F                    __ptext6 01C2                    __ptext7 0426  
                  __ptext8 034F                    __ptext9 04A4                    _counter 004C  
             __size_of_isr 0007   __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E  
 __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009     __end_of_Lcd_Write_Char 04A4  
     end_of_initialization 0019  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0072            ___lldiv@counter 0024                  _RCSTAbits 0018  
         I2C_Master_Init@c 0025           I2C_Master_Read@a 0072                  _TRISCbits 0087  
               divide@cent 0027                 divide@unit 0029            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0077          Lcd_Write_String@i 0075                  _TXSTAbits 0098  
           __end_of___bmul 04B9             __end_of___wmul 044B           _Lcd_Write_String 044B  
           __end_of_divide 028F        start_initialization 000F                __end_of_isr 04FD  
        __size_of_Lcd_Init 0058          ??_I2C_Master_Init 0029          ??_I2C_Master_Read 0074  
        ??_I2C_Master_Wait 0072          ??_I2C_Master_Stop 0072               _counter_temp 004B  
                 ??___bmul 0073                   ??___wmul 0076                   ??_divide 002A  
          Lcd_Write_Char@a 0074                  ___latbits 0002              __pcstackBANK0 0020  
                 ?_Lcd_Cmd 0070           _I2C_Master_Start 04ED           _I2C_Master_Write 04DA  
         ___lwdiv@dividend 007A    _temperature_sensor_temp 0049                   ?___lldiv 0072  
                 ?___lwdiv 0078                  __pstrings 0470           ___lwdiv@quotient 0021  
           __size_of_setup 002B          interrupt_function 0004             ___wmul@product 0076  
                 Lcd_Cmd@a 0074                  divide@dec 0028                __stringbase 0475  
                divide@mil 0026          ___wmul@multiplier 0072           ??_Lcd_Write_Char 0072  
                 _Lcd_Init 02F7        I2C_Master_Read@temp 0076   __end_of_Lcd_Write_String 0470  
         __size_of_Lcd_Cmd 0014           __size_of___lldiv 0068           __size_of___lwdiv 0046  
       __end_of__stringtab 0476            _I2C_Master_Init 0395            _I2C_Master_Read 03CD  
          _I2C_Master_Wait 04CD            _I2C_Master_Stop 04E4            ___lwdiv@divisor 0078  
          ___lwdiv@counter 0023                   __ptext10 044B                   __ptext11 048C  
                 __ptext12 04DA                   __ptext13 04E4                   __ptext14 04ED  
                 __ptext15 03CD                   __ptext16 04CD                   __ptext17 04F6  
            __size_of_main 01A5   __end_of_I2C_Master_Start 04F6   __end_of_I2C_Master_Write 04E4  
                 intlevel1 0000           ___lldiv@dividend 0076                  stringcode 0470  
  __end_of_I2C_Master_Init 03CD    __end_of_I2C_Master_Read 03FB    __end_of_I2C_Master_Wait 04DA  
  __end_of_I2C_Master_Stop 04ED           ___lldiv@quotient 0020          I2C_Master_Write@d 0072  
                 stringdir 0470                   stringtab 0470                _SSPCON2bits 0091  
